{"version":3,"file":"component---src-templates-blogs-by-page-tsx-07cc878b12bb100dad3c.js","mappings":"4NAwBaA,EAAS,SAACC,GAerB,IAdA,IAAMC,EAAYD,EAAMC,UAClBC,EAAWF,EAAME,SAEjBC,GAAOC,EAAAA,EAAAA,IAAe,cAStBC,EAAQ,GAELC,GADW,IAAIC,MAAOC,cACLF,GAAK,KAAMA,IACnCD,EAAMI,KAAKH,GAGb,IADA,IAAMI,EAAQ,GACLJ,EAAI,EAAGA,GAAKN,EAAMW,WAAYL,IACrCI,EAAMD,KAAKH,GAGb,OACE,uBAAKM,UAAWC,EAAAA,IACd,6BACGZ,EADH,MACiBE,EAAKW,KAAKC,aAAaC,OAExC,0BAAQJ,UAAWK,EAAAA,IAAYd,EAAKW,KAAKC,aAAaC,OACtD,2BACE,sBAAIJ,UAAWM,EAAAA,IACb,sBAAIN,UAAWO,EAAAA,IACb,gBAAC,KAAD,CAAMP,UAAWQ,EAAAA,GAAaC,GAAG,KAAjC,aAGA,gBAAC,KAAD,CAAMT,UAAWQ,EAAAA,GAAaC,GAAG,SAAjC,QAGChB,EAAMiB,KAAI,SAACC,GACV,IAAIC,EAAiBJ,EAAAA,GAIrB,OAHIG,IAAME,OAAOzB,EAAM0B,mBACrBF,GAAU,IAAMG,EAAAA,IAGhB,gBAAC,KAAD,CAAMf,UAAWY,EAAQH,GAAIO,EAAAA,GAAAA,QAAqB,SAAUL,IACzDA,SAOb,2BACE,gBAAC,EAAAM,EAAD,CACEjB,UAAWkB,EAAAA,GACXC,IAAI,+CACJC,IAAI,6DAHN,uBAMF,4BACE,sBAAIpB,UAAWqB,EAAAA,IAAUhC,GACxBC,GAEH,uBAAKU,UAAWsB,EAAAA,IACd,uBAAKtB,UAAWuB,EAAAA,IAAhB,uCACA,uBAAKvB,UAAWwB,EAAAA,IACb1B,EAAMY,KAAI,SAACe,GACV,IAAIC,EAAY,GAIhB,OAHID,IAASrC,EAAMuC,cACjBD,EAAYX,EAAAA,IAGZ,gBAAC,KAAD,CACEf,UAAW0B,EACXjB,GAAImB,EAAAA,GAAAA,QAAoB,SAAUH,IAEjCA,W,oFCnDjB,UA5CiB,SAACI,GAChB,IAAMtC,EAAOsC,EAAUtC,KACjBuC,EAAUD,EAAUE,YAC1B,OACE,gBAAC,IAAD,CACE1C,UAAU,aACVsC,YAAaG,EAAQH,YACrB5B,WAAY+B,EAAQ/B,YAEpB,gCACGR,EAAKyC,OAAOC,MAAMvB,KAAI,SAACwB,GAAD,OACrB,2BAASlC,UAAWmC,EAAAA,GAAWC,IAAKF,EAAKG,IACvC,0BACE,gBAAC,KAAD,CAAM5B,GAAE,GAAKyB,EAAKI,OAAOC,MAASL,EAAKM,YAAYpC,QAErD,oCAAY8B,EAAKM,YAAYC,c,mBCnBzCC,EAAQ,GAAR,mBACAA,EAAQ,GAAR,qB,2XCDO,IAAIzC,EAAY,kCACZoB,EAAU,gCACVhB,EAAY,mCACZC,EAAW,kCACXC,EAAc,sCACdC,EAAc,oCACdmC,EAAoB,0CACpBC,EAAe,qCACfT,EAAY,kCACZjB,EAAiB,uCACjBI,EAAgB,sCAChBC,EAAkB,wCAClBR,EAAc,oCACdS,EAAkB,yC","sources":["webpack://patrick-desjardins-blog/./src/blog/layout.tsx","webpack://patrick-desjardins-blog/./src/templates/BlogsByPage.tsx","webpack://patrick-desjardins-blog/./constants.js","webpack://patrick-desjardins-blog/./src/blog/layout.module.css"],"sourcesContent":["import * as React from \"react\";\nimport { Link, useStaticQuery, graphql } from \"gatsby\";\nimport {\n  container,\n  heading,\n  navLinks,\n  navLinkItem,\n  navLinkText,\n  siteTitle,\n  blogTopPicture,\n  paginationBar,\n  currentLink,\n  paginationLinks,\n  paginationTitle,\n} from \"./layout.module.css\";\nimport { StaticImage } from \"gatsby-plugin-image\";\nimport { URL_PER_YEAR, URL_BY_PAGE } from \"../../constants\";\nexport interface LayoutProps {\n  pageTitle: string;\n  children: JSX.Element;\n  currentPageYear?: string;\n  currentPage?: string;\n  totalPages: number;\n}\nexport const Layout = (props: LayoutProps): JSX.Element => {\n  const pageTitle = props.pageTitle;\n  const children = props.children;\n\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n  const years = [];\n  const currentYear = new Date().getFullYear();\n  for (let i = currentYear; i >= 2011; i--) {\n    years.push(i);\n  }\n  const pages = [];\n  for (let i = 1; i <= props.totalPages; i++) {\n    pages.push(i);\n  }\n\n  return (\n    <div className={container}>\n      <title>\n        {pageTitle} | {data.site.siteMetadata.title}\n      </title>\n      <header className={siteTitle}>{data.site.siteMetadata.title}</header>\n      <nav>\n        <ul className={navLinks}>\n          <li className={navLinkItem}>\n            <Link className={navLinkText} to=\"/\">\n              Main Page\n            </Link>\n            <Link className={navLinkText} to=\"/blog\">\n              Blog\n            </Link>\n            {years.map((y) => {\n              let classN: string = navLinkText;\n              if (y === Number(props.currentPageYear)) {\n                classN += \" \" + currentLink;\n              }\n              return (\n                <Link className={classN} to={URL_PER_YEAR.replace(\"{year}\", y)}>\n                  {y}\n                </Link>\n              );\n            })}\n          </li>\n        </ul>\n      </nav>\n      <div>\n        <StaticImage\n          className={blogTopPicture}\n          alt=\"Patrick Desjardins picture from a conference\"\n          src=\"../images/backgrounds/patrickdesjardins_conference_bw.jpeg\"\n        />\n      </div>\n      <main>\n        <h1 className={heading}>{pageTitle}</h1>\n        {children}\n      </main>\n      <div className={paginationBar}>\n        <div className={paginationTitle}>Chronological Blog Articles by Page</div>\n        <div className={paginationLinks}>\n          {pages.map((page) => {\n            let classLink = \"\";\n            if (page === props.currentPage) {\n              classLink = currentLink;\n            }\n            return (\n              <Link\n                className={classLink}\n                to={URL_BY_PAGE.replace(\"{page}\", page)}\n              >\n                {page}\n              </Link>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { Link, graphql } from \"gatsby\";\nimport { Layout } from \"../blog/layout\";\nimport { blogEntry } from \"../blog/layout.module.css\";\n\nconst BlogPage = (queryInfo) => {\n  const data = queryInfo.data;\n  const context = queryInfo.pageContext;\n  return (\n    <Layout\n      pageTitle=\"Blog Posts\"\n      currentPage={context.currentPage}\n      totalPages={context.totalPages}\n    >\n      <>\n        {data.allMdx.nodes.map((node) => (\n          <article className={blogEntry} key={node.id}>\n            <h2>\n              <Link to={`${node.fields.slug}`}>{node.frontmatter.title}</Link>\n            </h2>\n            <p>Posted: {node.frontmatter.date}</p>\n          </article>\n        ))}\n      </>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query TopXBlogArticles($limit: Int!, $skip: Int!) {\n    allMdx(\n      sort: { fields: frontmatter___date, order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        frontmatter {\n          date(formatString: \"MMMM D, YYYY\")\n          title\n        }\n        id\n        fields {\n          slug\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;\n","exports.LIMIT_BLOG_COUNT = 10;\nexports.URL_PER_YEAR = `/blog/for/{year}`\nexports.URL_BY_PAGE = `/blog/page/{page}`","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--2d1Hg\";\nexport var heading = \"layout-module--heading--OJ1tg\";\nexport var siteTitle = \"layout-module--site-title--2HiWG\";\nexport var navLinks = \"layout-module--nav-links--3TJQ2\";\nexport var navLinkItem = \"layout-module--nav-link-item--3_ZLo\";\nexport var navLinkText = \"layout-module--navLinkText--3ckue\";\nexport var blogPostContainer = \"layout-module--blogPostContainer--3N5Q_\";\nexport var blogPostDate = \"layout-module--blogPostDate--2lREW\";\nexport var blogEntry = \"layout-module--blogEntry--1tMmI\";\nexport var blogTopPicture = \"layout-module--blogTopPicture--2CSnW\";\nexport var paginationBar = \"layout-module--paginationBar--1iO1c\";\nexport var paginationTitle = \"layout-module--paginationTitle--2glRV\";\nexport var currentLink = \"layout-module--currentLink--1EhI-\";\nexport var paginationLinks = \"layout-module--paginationLinks--1WQa0\";"],"names":["Layout","props","pageTitle","children","data","useStaticQuery","years","i","Date","getFullYear","push","pages","totalPages","className","container","site","siteMetadata","title","siteTitle","navLinks","navLinkItem","navLinkText","to","map","y","classN","Number","currentPageYear","currentLink","URL_PER_YEAR","S","blogTopPicture","alt","src","heading","paginationBar","paginationTitle","paginationLinks","page","classLink","currentPage","URL_BY_PAGE","queryInfo","context","pageContext","allMdx","nodes","node","blogEntry","key","id","fields","slug","frontmatter","date","exports","blogPostContainer","blogPostDate"],"sourceRoot":""}