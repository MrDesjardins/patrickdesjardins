3:I[4670,[],""]
5:I[4491,[],""]
6:I[2216,["216","static/chunks/216-16b20d9e090a995d.js","394","static/chunks/394-f703103b4f0ecf75.js","308","static/chunks/app/blog/%5Bslug%5D/page-afa931b67ff12386.js"],""]
4:["slug","odata-query-syntax","d"]
0:["PNtr9Ihg4FMQxHs4wkspx",[[["",{"children":["blog",{"children":[["slug","odata-query-syntax","d"],{"children":["__PAGE__?{\"slug\":\"odata-query-syntax\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","odata-query-syntax","d"],{"children":["__PAGE__",{},[["$L1","$L2",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/43126ea28792c324.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/97e0a79122e618e4.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/dabd5e64a469b0e1.css","precedence":"next","crossOrigin":"$undefined"}]],["$","div",null,{"className":"layout_blogbodystyle___Uc1w","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e7d5f19bb68f1da6.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","className":"layout_htmlstyle__PseMz","children":["$","body",null,{"className":"layout_bodystyle__4ncsS","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"style":{"display":"flex","alignItems":"center","justifyContent":"center","height":"100vh"},"children":["$","div",null,{"style":{"width":"50%","height":"20%","backgroundColor":"#ffeded","borderRadius":12,"padding":12,"textAlign":"center"},"children":[["$","h1",null,{"children":"Not Found"}],["$","p",null,{"children":"Could not find requested resource"}],["$","$L6",null,{"href":"/","children":"Return Home"}]]}]}],"notFoundStyles":[]}]}]}]],null],null],["$L7",null]]]]
8:I[4394,["216","static/chunks/216-16b20d9e090a995d.js","394","static/chunks/394-f703103b4f0ecf75.js","308","static/chunks/app/blog/%5Bslug%5D/page-afa931b67ff12386.js"],"Image"]
2:["$","div",null,{"className":"BlogBody_BlogBody__600mT","children":[["$","header",null,{"className":"BlogBody_siteTitle__f7uyb","children":"Patrick Desjardins Blog"}],["$","nav",null,{"children":["$","ul",null,{"className":"BlogBody_navLinks__ZV12t","children":["$","li",null,{"className":"BlogBody_navLinkItem__Pml2e","children":[["$","$L6",null,{"className":"BlogBody_navLinkText__ZtH2y","href":"/","children":"Main Page"}],["$","$L6",null,{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog","children":"Blog"}],[["$","$L6","2025",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2025","children":2025}],["$","$L6","2024",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2024","children":2024}],["$","$L6","2023",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2023","children":2023}],["$","$L6","2022",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2022","children":2022}],["$","$L6","2021",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2021","children":2021}],["$","$L6","2020",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2020","children":2020}],["$","$L6","2019",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2019","children":2019}],["$","$L6","2018",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2018","children":2018}],["$","$L6","2017",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2017","children":2017}],["$","$L6","2016",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2016","children":2016}],["$","$L6","2015",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2015","children":2015}],["$","$L6","2014",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2014","children":2014}],["$","$L6","2013",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2013","children":2013}],["$","$L6","2012",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2012","children":2012}],["$","$L6","2011",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2011","children":2011}]]]}]}]}],["$","div",null,{"className":"BlogBody_blogPictureContainer__IAbPL","children":["$","$L8",null,{"className":"BlogBody_blogTopPicture__L6lao","alt":"Patrick Desjardins picture from a conference","src":"/images/backgrounds/patrickdesjardins_conference_bw.webp","width":800,"height":260}]}],["$","main",null,{"className":"BlogBody_main__XrdKY","children":[["$","h1",null,{"className":"BlogBody_heading__bYRBe","children":"OData Query syntax"}],["$","div",null,{"className":"Page_blogPostContainer__AUIcf","children":[["$","p",null,{"className":"Page_blogPostDate__wVWWB","children":["Posted on: ","2013-07-25"]}],[["$","p",null,{"children":"If you have setup WCF Data Service, you can now query your service with the OData syntax. If you are using Entity Framework, you will see a lot of similarity between Entity Framework and this string syntax. OData works with http request which is based on URI. Every queries statements need to be passed by this url. Here is a list of all possibles statement that can be used together as Entity Framework or a SQL statement."}],"\n",["$","h2",null,{"children":"OData ordering keyword : orderby"}],"\n",["$","p",null,{"children":["If you request one of your entity set, you may want to order the result. To be able to order, you will have to user ",["$","code",null,{"children":"orderby"}]," with = and the property of the entity. If you need multiply properties in your ordering, simply seperate them with a comma ",["$","code",null,{"children":","}],". Here is two examples."]}],"\n",["$","pre",null,{"className":"language-csharp","children":["$","code",null,{"className":"language-csharp code-highlight","children":[["$","span",null,{"className":"code-line","children":["http",["$","span",null,{"className":"token punctuation","children":":"}],["$","span",null,{"className":"token operator","children":"/"}],["$","span",null,{"className":"token operator","children":"/"}],"yourwebsite",["$","span",null,{"className":"token operator","children":"/"}],"YourService",["$","span",null,{"className":"token punctuation","children":"."}],"svc",["$","span",null,{"className":"token operator","children":"/"}],"YourEntitiesSet",["$","span",null,{"className":"token punctuation","children":"?"}],"$$",["$","span",null,{"className":"token keyword","children":"orderby"}],["$","span",null,{"className":"token operator","children":"="}],["$","span",null,{"className":"token class-name","children":"OneOfYourProperty"}],"\n"]}],["$","span",null,{"className":"code-line","children":"\n"}],["$","span",null,{"className":"code-line","children":["http",["$","span",null,{"className":"token punctuation","children":":"}],["$","span",null,{"className":"token operator","children":"/"}],["$","span",null,{"className":"token operator","children":"/"}],"yourwebsite",["$","span",null,{"className":"token operator","children":"/"}],"YourService",["$","span",null,{"className":"token punctuation","children":"."}],"svc",["$","span",null,{"className":"token operator","children":"/"}],"YourEntitiesSet",["$","span",null,{"className":"token punctuation","children":"?"}],"$$",["$","span",null,{"className":"token keyword","children":"orderby"}],["$","span",null,{"className":"token operator","children":"="}],"OneOfYourProperty",["$","span",null,{"className":"token punctuation","children":","}],"ASecondProperty \n"]}]]}]}],"\n",["$","h2",null,{"children":"OData getting a limited amount of data keyword : top"}],"\n",["$","p",null,{"children":"This is the same keyword as Sql Server or Entity Framework. This let the consumer to ask to the WCF Data Service how many result maximum the consumer receive. It can be the specific number or less, or none. Here is an example."}],"\n",["$","pre",null,{"className":"language-csharp","children":["$","code",null,{"className":"language-csharp code-highlight","children":["$","span",null,{"className":"code-line","children":[" http",["$","span",null,{"className":"token punctuation","children":":"}],["$","span",null,{"className":"token operator","children":"/"}],["$","span",null,{"className":"token operator","children":"/"}],"yourwebsite",["$","span",null,{"className":"token operator","children":"/"}],"YourService",["$","span",null,{"className":"token punctuation","children":"."}],"svc",["$","span",null,{"className":"token operator","children":"/"}],"YourEntitiesSet",["$","span",null,{"className":"token punctuation","children":"?"}],"$$top",["$","span",null,{"className":"token operator","children":"="}],["$","span",null,{"className":"token number","children":"10"}]," \n"]}]}]}],"\n",["$","h2",null,{"children":"OData paging result keyword : skip"}],"\n",["$","p",null,{"children":["You can do paging with OData. For example, if you want to have a list that display 10 elements per page, you could request the WCF Data Service to get the first 10 entities and then ask the next 10 entities when the user request the next page. This can be done with the previous keyword ",["$","code",null,{"children":"top"}]," to get the 10 entities but to get which group of 10, we need to new keyword ",["$","code",null,{"children":"skip"}],". If you want to have the third page of 10 elements, we will need to use skip with the value 20 and the top at 10. This can be translated by : \"I want the third page of 10 elements\". The value of skip is 20 because we have 10 elements by page. One page mean we display 10, two pages mean we display 20. The third page requires to skip those 20 pages and to display the next 10. This is specify with the top keyword."]}],"\n",["$","pre",null,{"className":"language-csharp","children":["$","code",null,{"className":"language-csharp code-highlight","children":["$","span",null,{"className":"code-line","children":[" http",["$","span",null,{"className":"token punctuation","children":":"}],["$","span",null,{"className":"token operator","children":"/"}],["$","span",null,{"className":"token operator","children":"/"}],"yourwebsite",["$","span",null,{"className":"token operator","children":"/"}],"YourService",["$","span",null,{"className":"token punctuation","children":"."}],"svc",["$","span",null,{"className":"token operator","children":"/"}],"YourEntitiesSet",["$","span",null,{"className":"token punctuation","children":"?"}],"$$skip",["$","span",null,{"className":"token operator","children":"="}],["$","span",null,{"className":"token number","children":"20"}],["$","span",null,{"className":"token operator","children":"&"}],"$$top",["$","span",null,{"className":"token operator","children":"="}],["$","span",null,{"className":"token number","children":"10"}]," \n"]}]}]}],"\n",["$","h2",null,{"children":"Condition with OData by the filter keyword"}],"\n",["$","p",null,{"children":["In SQL, we would use the keyword ",["$","code",null,{"children":"where"}]," and the keyword ",["$","code",null,{"children":"and"}]," if we have multiple conditions. It's the samething with Entity Framework. But, with OData, the keyword is not where. The keyword is ",["$","code",null,{"children":"filter"}],"."]}],"\n",["$","pre",null,{"className":"language-csharp","children":["$","code",null,{"className":"language-csharp code-highlight","children":["$","span",null,{"className":"code-line","children":[" http",["$","span",null,{"className":"token punctuation","children":":"}],["$","span",null,{"className":"token operator","children":"/"}],["$","span",null,{"className":"token operator","children":"/"}],"yourwebsite",["$","span",null,{"className":"token operator","children":"/"}],"YourService",["$","span",null,{"className":"token punctuation","children":"."}],"svc",["$","span",null,{"className":"token operator","children":"/"}],"YourEntitiesSet",["$","span",null,{"className":"token punctuation","children":"?"}],"$$filter",["$","span",null,{"className":"token operator","children":"="}],["$","span",null,{"className":"token return-type class-name","children":"YourProperty"}]," ",["$","span",null,{"className":"token function","children":"equal"}],["$","span",null,{"className":"token punctuation","children":"("}],"'Test'",["$","span",null,{"className":"token punctuation","children":")"}]," \n"]}]}]}],"\n",["$","p",null,{"children":["OData contains several keyword to compare : ",["$","a",null,{"href":"http://go.microsoft.com/fwlink/?LinkId=186972","children":"http://go.microsoft.com/fwlink/?LinkId=186972"}]]}],"\n",["$","h2",null,{"children":"Joining entity with the keyword expand"}],"\n",["$","p",null,{"children":["Entity Framework gives the keyword ",["$","code",null,{"children":"include"}]," which add a reference to an other entity or a list of entities. You need to specify the name of the property and this one will be loaded in the foreign key that define the relationship in the database. With OData, the keyword is ",["$","code",null,{"children":"expand"}],"."]}],"\n",["$","pre",null,{"className":"language-csharp","children":["$","code",null,{"className":"language-csharp code-highlight","children":["$","span",null,{"className":"code-line","children":[" http",["$","span",null,{"className":"token punctuation","children":":"}],["$","span",null,{"className":"token operator","children":"/"}],["$","span",null,{"className":"token operator","children":"/"}],"yourwebsite",["$","span",null,{"className":"token operator","children":"/"}],"YourService",["$","span",null,{"className":"token punctuation","children":"."}],"svc",["$","span",null,{"className":"token operator","children":"/"}],"YourEntitiesSet",["$","span",null,{"className":"token punctuation","children":"?"}],"$$expand",["$","span",null,{"className":"token operator","children":"="}],"YourPropertyThatLinkToAnOtherEntity \n"]}]}]}],"\n",["$","h2",null,{"children":"Selecting specify properties of an entity with the OData keyword select"}],"\n",["$","p",null,{"children":["This is exactly the same as SQL and Entity. As you can see since the beginning of this article, a lot of keyword in OData are the same with Entity and SQL. This is a strong positive point that give a low learning curl. The ",["$","code",null,{"children":"select"}]," keyword give you the posibility to not returning the whole entity information but only specific property of this one."]}],"\n",["$","pre",null,{"className":"language-csharp","children":["$","code",null,{"className":"language-csharp code-highlight","children":["$","span",null,{"className":"code-line","children":[" http",["$","span",null,{"className":"token punctuation","children":":"}],["$","span",null,{"className":"token operator","children":"/"}],["$","span",null,{"className":"token operator","children":"/"}],"yourwebsite",["$","span",null,{"className":"token operator","children":"/"}],"YourService",["$","span",null,{"className":"token punctuation","children":"."}],"svc",["$","span",null,{"className":"token operator","children":"/"}],"YourEntitiesSet",["$","span",null,{"className":"token punctuation","children":"?"}],"$$",["$","span",null,{"className":"token keyword","children":"select"}],["$","span",null,{"className":"token operator","children":"="}],"Property1",["$","span",null,{"className":"token punctuation","children":","}],"Property2 \n"]}]}]}]]]}]]}],["$","div",null,{"className":"BlogBody_paginationBar__1gsMc","children":[["$","div",null,{"className":"BlogBody_paginationTitle__H_eFX","children":"Chronological Blog Articles by Page"}],["$","div",null,{"className":"BlogBody_paginationLinks__nk8zd","children":[["$","$L6","1",{"className":"","href":"/blog/page/1","children":1}],["$","$L6","2",{"className":"","href":"/blog/page/2","children":2}],["$","$L6","3",{"className":"","href":"/blog/page/3","children":3}],["$","$L6","4",{"className":"","href":"/blog/page/4","children":4}],["$","$L6","5",{"className":"","href":"/blog/page/5","children":5}],["$","$L6","6",{"className":"","href":"/blog/page/6","children":6}],["$","$L6","7",{"className":"","href":"/blog/page/7","children":7}],["$","$L6","8",{"className":"","href":"/blog/page/8","children":8}],["$","$L6","9",{"className":"","href":"/blog/page/9","children":9}],["$","$L6","10",{"className":"","href":"/blog/page/10","children":10}],["$","$L6","11",{"className":"","href":"/blog/page/11","children":11}],["$","$L6","12",{"className":"","href":"/blog/page/12","children":12}],["$","$L6","13",{"className":"","href":"/blog/page/13","children":13}],["$","$L6","14",{"className":"","href":"/blog/page/14","children":14}],["$","$L6","15",{"className":"","href":"/blog/page/15","children":15}],["$","$L6","16",{"className":"","href":"/blog/page/16","children":16}],["$","$L6","17",{"className":"","href":"/blog/page/17","children":17}],["$","$L6","18",{"className":"","href":"/blog/page/18","children":18}],["$","$L6","19",{"className":"","href":"/blog/page/19","children":19}],["$","$L6","20",{"className":"","href":"/blog/page/20","children":20}],["$","$L6","21",{"className":"","href":"/blog/page/21","children":21}],["$","$L6","22",{"className":"","href":"/blog/page/22","children":22}],["$","$L6","23",{"className":"","href":"/blog/page/23","children":23}],["$","$L6","24",{"className":"","href":"/blog/page/24","children":24}],["$","$L6","25",{"className":"","href":"/blog/page/25","children":25}],["$","$L6","26",{"className":"","href":"/blog/page/26","children":26}],["$","$L6","27",{"className":"","href":"/blog/page/27","children":27}],["$","$L6","28",{"className":"","href":"/blog/page/28","children":28}],["$","$L6","29",{"className":"","href":"/blog/page/29","children":29}],["$","$L6","30",{"className":"","href":"/blog/page/30","children":30}],["$","$L6","31",{"className":"","href":"/blog/page/31","children":31}],["$","$L6","32",{"className":"","href":"/blog/page/32","children":32}],["$","$L6","33",{"className":"","href":"/blog/page/33","children":33}],["$","$L6","34",{"className":"","href":"/blog/page/34","children":34}],["$","$L6","35",{"className":"","href":"/blog/page/35","children":35}],["$","$L6","36",{"className":"","href":"/blog/page/36","children":36}],["$","$L6","37",{"className":"","href":"/blog/page/37","children":37}],["$","$L6","38",{"className":"","href":"/blog/page/38","children":38}],["$","$L6","39",{"className":"","href":"/blog/page/39","children":39}],["$","$L6","40",{"className":"","href":"/blog/page/40","children":40}],["$","$L6","41",{"className":"","href":"/blog/page/41","children":41}],["$","$L6","42",{"className":"","href":"/blog/page/42","children":42}],["$","$L6","43",{"className":"","href":"/blog/page/43","children":43}],["$","$L6","44",{"className":"","href":"/blog/page/44","children":44}],["$","$L6","45",{"className":"","href":"/blog/page/45","children":45}],["$","$L6","46",{"className":"","href":"/blog/page/46","children":46}],["$","$L6","47",{"className":"","href":"/blog/page/47","children":47}],["$","$L6","48",{"className":"","href":"/blog/page/48","children":48}],["$","$L6","49",{"className":"","href":"/blog/page/49","children":49}],["$","$L6","50",{"className":"","href":"/blog/page/50","children":50}],["$","$L6","51",{"className":"","href":"/blog/page/51","children":51}],["$","$L6","52",{"className":"","href":"/blog/page/52","children":52}],["$","$L6","53",{"className":"","href":"/blog/page/53","children":53}],["$","$L6","54",{"className":"","href":"/blog/page/54","children":54}],["$","$L6","55",{"className":"","href":"/blog/page/55","children":55}],["$","$L6","56",{"className":"","href":"/blog/page/56","children":56}],["$","$L6","57",{"className":"","href":"/blog/page/57","children":57}],["$","$L6","58",{"className":"","href":"/blog/page/58","children":58}],["$","$L6","59",{"className":"","href":"/blog/page/59","children":59}],["$","$L6","60",{"className":"","href":"/blog/page/60","children":60}],["$","$L6","61",{"className":"","href":"/blog/page/61","children":61}],["$","$L6","62",{"className":"","href":"/blog/page/62","children":62}],["$","$L6","63",{"className":"","href":"/blog/page/63","children":63}],["$","$L6","64",{"className":"","href":"/blog/page/64","children":64}],["$","$L6","65",{"className":"","href":"/blog/page/65","children":65}],["$","$L6","66",{"className":"","href":"/blog/page/66","children":66}],["$","$L6","67",{"className":"","href":"/blog/page/67","children":67}],["$","$L6","68",{"className":"","href":"/blog/page/68","children":68}],["$","$L6","69",{"className":"","href":"/blog/page/69","children":69}],["$","$L6","70",{"className":"","href":"/blog/page/70","children":70}],["$","$L6","71",{"className":"","href":"/blog/page/71","children":71}],["$","$L6","72",{"className":"","href":"/blog/page/72","children":72}],["$","$L6","73",{"className":"","href":"/blog/page/73","children":73}],["$","$L6","74",{"className":"","href":"/blog/page/74","children":74}],["$","$L6","75",{"className":"","href":"/blog/page/75","children":75}],["$","$L6","76",{"className":"","href":"/blog/page/76","children":76}],["$","$L6","77",{"className":"","href":"/blog/page/77","children":77}],["$","$L6","78",{"className":"","href":"/blog/page/78","children":78}],["$","$L6","79",{"className":"","href":"/blog/page/79","children":79}]]}]]}]]}]
7:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Patrick Desjardins Blog - OData Query syntax"}],["$","meta","3",{"name":"description","content":"OData Query syntax"}]]
1:null
