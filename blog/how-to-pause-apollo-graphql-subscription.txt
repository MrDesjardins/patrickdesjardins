3:I[1072,[],""]
5:I[9975,[],""]
6:I[4575,["575","static/chunks/575-f7591b7e6bf20622.js","390","static/chunks/390-cf7fd460775bcbad.js","308","static/chunks/app/blog/%5Bslug%5D/page-542db175f42c5440.js"],""]
4:["slug","how-to-pause-apollo-graphql-subscription","d"]
0:["BUAXcQF2cka64bVGj9I7H",[[["",{"children":["blog",{"children":[["slug","how-to-pause-apollo-graphql-subscription","d"],{"children":["__PAGE__?{\"slug\":\"how-to-pause-apollo-graphql-subscription\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","how-to-pause-apollo-graphql-subscription","d"],{"children":["__PAGE__",{},[["$L1","$L2",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/43126ea28792c324.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/97e0a79122e618e4.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/dabd5e64a469b0e1.css","precedence":"next","crossOrigin":"$undefined"}]],["$","div",null,{"className":"layout_blogbodystyle___Uc1w","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e7d5f19bb68f1da6.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","className":"layout_htmlstyle__PseMz","children":["$","body",null,{"className":"layout_bodystyle__4ncsS","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"style":{"display":"flex","alignItems":"center","justifyContent":"center","height":"100vh"},"children":["$","div",null,{"style":{"width":"50%","height":"20%","backgroundColor":"#ffeded","borderRadius":12,"padding":12,"textAlign":"center"},"children":[["$","h1",null,{"children":"Not Found"}],["$","p",null,{"children":"Could not find requested resource"}],["$","$L6",null,{"href":"/","children":"Return Home"}]]}]}],"notFoundStyles":[]}]}]}]],null],null],["$L7",null]]]]
8:I[5390,["575","static/chunks/575-f7591b7e6bf20622.js","390","static/chunks/390-cf7fd460775bcbad.js","308","static/chunks/app/blog/%5Bslug%5D/page-542db175f42c5440.js"],"Image"]
2:["$","div",null,{"className":"BlogBody_BlogBody__600mT","children":[["$","header",null,{"className":"BlogBody_siteTitle__f7uyb","children":"Patrick Desjardins Blog"}],["$","nav",null,{"children":["$","ul",null,{"className":"BlogBody_navLinks__ZV12t","children":["$","li",null,{"className":"BlogBody_navLinkItem__Pml2e","children":[["$","$L6",null,{"className":"BlogBody_navLinkText__ZtH2y","href":"/","children":"Main Page"}],["$","$L6",null,{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog","children":"Blog"}],[["$","$L6","2025",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2025","children":2025}],["$","$L6","2024",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2024","children":2024}],["$","$L6","2023",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2023","children":2023}],["$","$L6","2022",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2022","children":2022}],["$","$L6","2021",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2021","children":2021}],["$","$L6","2020",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2020","children":2020}],["$","$L6","2019",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2019","children":2019}],["$","$L6","2018",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2018","children":2018}],["$","$L6","2017",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2017","children":2017}],["$","$L6","2016",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2016","children":2016}],["$","$L6","2015",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2015","children":2015}],["$","$L6","2014",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2014","children":2014}],["$","$L6","2013",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2013","children":2013}],["$","$L6","2012",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2012","children":2012}],["$","$L6","2011",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2011","children":2011}]]]}]}]}],["$","div",null,{"className":"BlogBody_blogPictureContainer__IAbPL","children":["$","$L8",null,{"className":"BlogBody_blogTopPicture__L6lao","alt":"Patrick Desjardins picture from a conference","src":"/images/backgrounds/patrickdesjardins_conference_bw.webp","width":800,"height":260}]}],["$","main",null,{"className":"BlogBody_main__XrdKY","children":[["$","h1",null,{"className":"BlogBody_heading__bYRBe","children":"How to Pause and Resume Apollo GraphQL Subscription using The Guild GraphQL CodeGen"}],["$","div",null,{"className":"Page_blogPostContainer__AUIcf","children":[["$","p",null,{"className":"Page_blogPostDate__wVWWB","children":["Posted on: ","2023-01-12"]}],[["$","h1",null,{"children":"Context and Benefits of Autogeneration"}],"\n",["$","p",null,{"children":["Using ",["$","a",null,{"href":"https://the-guild.dev/graphql/codegen","children":"The Guild GraphQL CodeGen"}]," is my first instinct when consuming a GraphQL on the front end. It works flawlessly by producing strongly typed TypeScript code to perform your custom GraphQL queries. There is a plugin to generate the operation called ",["$","code",null,{"children":"typescript-operation"}],". In the past, I decided to avoid but recently been a fan since it creates your React Hook from your ",["$","code",null,{"children":".graphql"}]," files. It gives you the advantage of not having to ",["$","code",null,{"children":"import"}]," the file on each component but instead import the generated code file, which is a ",["$","code",null,{"children":".ts"}]," file. The two benefits are avoiding needing to import a file extension that is not native with ",["$","a",null,{"href":"https://create-react-app.dev/","children":"React CRA"}],". Second, it creates for your a hook that is strongly typed."]}],"\n",["$","p",null,{"children":["Here is a snippet of the configuration of the ",["$","code",null,{"children":"codegen.yml"}],"."]}],"\n",["$","pre",null,{"className":"language-yaml","children":["$","code",null,{"className":"language-yaml code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token key atrule","children":"generates"}],["$","span",null,{"className":"token punctuation","children":":"}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token key atrule","children":"Autogenerated.tsx"}],["$","span",null,{"className":"token punctuation","children":":"}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token key atrule","children":"plugins"}],["$","span",null,{"className":"token punctuation","children":":"}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["      ",["$","span",null,{"className":"token punctuation","children":"-"}]," typescript\r\n"]}],["$","span",null,{"className":"code-line","children":["      ",["$","span",null,{"className":"token punctuation","children":"-"}]," typescript",["$","span",null,{"className":"token punctuation","children":"-"}],"operations\r\n"]}],["$","span",null,{"className":"code-line","children":["      ",["$","span",null,{"className":"token punctuation","children":"-"}]," typescript",["$","span",null,{"className":"token punctuation","children":"-"}],"react",["$","span",null,{"className":"token punctuation","children":"-"}],"apollo\n"]}]]}]}],"\n",["$","h1",null,{"children":"Why Pausing?"}],"\n",["$","p",null,{"children":["There are many reasons surrounding the viability of pausing a subscription. The WebSocket might be pushing a lot of messages, and the user may want to ",["$","em",null,{"children":"freeze"}]," the user interface of changes. Or, maybe you want to keep the application operational but do not want to receive any further notice of new data. You may want to do it when the user is not active on the tab of your application. Regardless of the reason, being able to pause the stream of data and unpause it is a scenario that occurs."]}],"\n",["$","h1",null,{"children":"How to Pause?"}],"\n",["$","p",null,{"children":["Results on the Internet on the topic of pausing a subscription are very scarce. I stumbled upon the following solution by avoiding requests on the query using the ",["$","code",null,{"children":"skip"}]," option on the query. It happens that the subscription has the same property. The generated hook opens access to the choice and next to the ",["$","code",null,{"children":"variables"}]," property, you will see a ",["$","code",null,{"children":"skip"}]," option."]}],"\n",["$","p",null,{"children":["When the ",["$","code",null,{"children":"skip"}]," option is ",["$","code",null,{"children":"true"}],", the WebSocket closes its connection. When the value is ",["$","code",null,{"children":"false"}],", a new connection is established. Hence, we can toggle between pause and unpause by having a React state that is a boolean."]}],"\n",["$","h1",null,{"children":"Pseudo-Code"}],"\n",["$","p",null,{"children":"In a nutshell, your component looks like this:"}],"\n",["$","pre",null,{"className":"language-tsx","children":["$","code",null,{"className":"language-tsx code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"export"}]," ",["$","span",null,{"className":"token keyword","children":"const"}]," ",["$","span",null,{"className":"token function-variable function","children":"YourComponent"}]," ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"props",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token maybe-class-name","children":"YourComponentProps"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token arrow operator","children":"=>"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword","children":"const"}]," ",["$","span",null,{"className":"token punctuation","children":"["}],"isPaused",["$","span",null,{"className":"token punctuation","children":","}]," setIsPaused",["$","span",null,{"className":"token punctuation","children":"]"}]," ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token generic-function","children":[["$","span",null,{"className":"token function","children":"useState"}],["$","span",null,{"className":"token generic class-name","children":[["$","span",null,{"className":"token operator","children":"<"}],["$","span",null,{"className":"token builtin","children":"boolean"}],["$","span",null,{"className":"token operator","children":">"}]]}]]}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token boolean","children":"false"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," ",["$","span",null,{"className":"token comment","children":"// By default, we have the connection pushing data"}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token comment","children":"// ..."}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token function","children":"useYourGeneratedFunctionSubscription"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":"{"}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token function","children":"onData"}],["$","span",null,{"className":"token punctuation","children":"("}],"options",["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["      ",["$","span",null,{"className":"token comment","children":"// Do something with the data in options.data"}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":","}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["    skip",["$","span",null,{"className":"token operator","children":":"}]," isPaused\r\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token comment","children":"//"}],"\r\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword","children":"return"}]," ",["$","span",null,{"className":"token tag","children":[["$","span",null,{"className":"token tag","children":[["$","span",null,{"className":"token punctuation","children":"<"}],"div"]}],["$","span",null,{"className":"token punctuation","children":">"}]]}],["$","span",null,{"className":"token plain-text","children":"..."}],["$","span",null,{"className":"token tag","children":[["$","span",null,{"className":"token tag","children":[["$","span",null,{"className":"token punctuation","children":"</"}],"div"]}],["$","span",null,{"className":"token punctuation","children":">"}]]}],["$","span",null,{"className":"token punctuation","children":";"}],"\r\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}]]}]}],"\n",["$","h1",null,{"children":"Considerations of Missing Data"}],"\n",["$","p",null,{"children":["Going further on the path of pausing, you will get into the situation where the user un-pause. The pattern described works by switching the ",["$","code",null,{"children":"isPaused"}]," to ",["$","code",null,{"children":"false"}],", a new WebSocket connection is created, and the data starts to flow again. However, there needs to be more data. For example, if you are fetching data that is pushed into a grid and you pause for 1 minute, on resume, you will have the data from the time before the pause and after the minute. Where is the data from the paused minute? Hence, when the user resumes the subscription, it is wise to perform a GraphQL Query to fetch the data."]}],"\n",["$","p",null,{"children":"In my cases, I fetch all the data as if the user were to start the application again and start with a fresh data slate. However, keep in mind that there is still a case of missing or duplicate data. For example, if you are fetching the data and then opening the WebSocket connection, there might be missing data. If it takes 5 seconds for the response to come back, then new data was created but not in the response nor the WebSocket. The reason is that the connection opened once the response was received, leaving a window where new data was never transmitted."}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/blog/graphql_subscription_pause1.png","alt":""}]}],"\n",["$","p",null,{"children":"There might be duplicate data if you are starting the WebSocket at the same time you start the request to fetch the data, as the WebSocket may push some data that will be present in the query response. In the example below, the server pushes data twice while building the response. Hence, the query response will contain the data already pushed. However, on the third push, the data is not from the initial response. So, upon reception of the initial query, filtering out the information already received from the WebSocket is desired. In many scenarios, the amount of data filtered out is small as most of the data comes from prior to the WebSocket connection and is unavailable in the few seconds of the GraphQL query request and response."}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/blog/graphql_subscription_pause2.png","alt":""}]}],"\n",["$","p",null,{"children":"A native solution does not exist using Apollo Client. However, leaning toward duplication is reasonable if your data has a unique identifier (or is timestamped), as it is easy to filter out. On the contrary, it is only possible to substitute present information. Thus, opening the WebSocket upon receiving the initial data is suboptimal for your user because it cannot guarantee that all the data is available."}],"\n",["$","h1",null,{"children":"Optimization"}],"\n",["$","p",null,{"children":["Depending on how your data is structured, you may resume the data by fetching only the missing delta. Data with a sequential number or based on time can persist the last receive data in memory. When the action of resuming streaming the data starts, a GraphQL Query is performed with the last data id (or timestamp) and the response containt only the information since this last piece of information. The optimization adds complexity to support querying from a specific point in time but is suitable for an architecture based on cursor like ",["$","a",null,{"href":"https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo","children":"GraphQL Relay"}],".  For example, in the illustration below, the user pauses at ",["$","code",null,{"children":"T2"}]," and resumes at ",["$","code",null,{"children":"T6"}],". At ",["$","code",null,{"children":"T6"}],", the subscription turns ",["$","code",null,{"children":"skip: false"}],", creating a new WebSocket connection and getting the latest data. At the same time, a GraphQL Query fetching data from ",["$","code",null,{"children":"T2 to T6"}]," is triggered."]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/blog/graphql_subscription_pause3.png","alt":""}]}],"\n",["$","p",null,{"children":["Thus, my recommendation is that if you are ",["$","strong",null,{"children":"not"}]," using a cursor your data can be fetched affordly from without delta to fetch everything. That should be many scenarios. However, if you have infinite data, like a news feed, and that this data is already provided using cursor that getting delta might be the best solution. The main issue with delta fetching during resuming is that it might fetch from a long time ago. For example, if someone goes out to vacation for one week and unpause, the data sent will be dated from a week ago. Fetching everything does not prevent over fetching but rely on the same logic that you have when the user enter the application meaning that it must already have a logic in place. As long as the delta logic on the backend has similar limit on data being fetched, it will work fine."]}],"\n",["$","h1",null,{"children":"Conclusion"}],"\n",["$","p",null,{"children":["Whether you are autogenerating or not, the ",["$","code",null,{"children":"skip"}]," value is available if you use the ",["$","a",null,{"href":"https://www.apollographql.com/docs/react/data/queries/","children":"Apollo Client"}],". The surprising news is that it works well with the ",["$","a",null,{"href":"https://www.apollographql.com/docs/react/data/subscriptions","children":"Apollo Client Subscription"}]," and behaves as a way to pause the data pushed into your application from the WebSocket beneath the GraphQL Subscription mechanism."]}]]]}]]}],["$","div",null,{"className":"BlogBody_paginationBar__1gsMc","children":[["$","div",null,{"className":"BlogBody_paginationTitle__H_eFX","children":"Chronological Blog Articles by Page"}],["$","div",null,{"className":"BlogBody_paginationLinks__nk8zd","children":[["$","$L6","1",{"className":"","href":"/blog/page/1","children":1}],["$","$L6","2",{"className":"","href":"/blog/page/2","children":2}],["$","$L6","3",{"className":"","href":"/blog/page/3","children":3}],["$","$L6","4",{"className":"","href":"/blog/page/4","children":4}],["$","$L6","5",{"className":"","href":"/blog/page/5","children":5}],["$","$L6","6",{"className":"","href":"/blog/page/6","children":6}],["$","$L6","7",{"className":"","href":"/blog/page/7","children":7}],["$","$L6","8",{"className":"","href":"/blog/page/8","children":8}],["$","$L6","9",{"className":"","href":"/blog/page/9","children":9}],["$","$L6","10",{"className":"","href":"/blog/page/10","children":10}],["$","$L6","11",{"className":"","href":"/blog/page/11","children":11}],["$","$L6","12",{"className":"","href":"/blog/page/12","children":12}],["$","$L6","13",{"className":"","href":"/blog/page/13","children":13}],["$","$L6","14",{"className":"","href":"/blog/page/14","children":14}],["$","$L6","15",{"className":"","href":"/blog/page/15","children":15}],["$","$L6","16",{"className":"","href":"/blog/page/16","children":16}],["$","$L6","17",{"className":"","href":"/blog/page/17","children":17}],["$","$L6","18",{"className":"","href":"/blog/page/18","children":18}],["$","$L6","19",{"className":"","href":"/blog/page/19","children":19}],["$","$L6","20",{"className":"","href":"/blog/page/20","children":20}],["$","$L6","21",{"className":"","href":"/blog/page/21","children":21}],["$","$L6","22",{"className":"","href":"/blog/page/22","children":22}],["$","$L6","23",{"className":"","href":"/blog/page/23","children":23}],["$","$L6","24",{"className":"","href":"/blog/page/24","children":24}],["$","$L6","25",{"className":"","href":"/blog/page/25","children":25}],["$","$L6","26",{"className":"","href":"/blog/page/26","children":26}],["$","$L6","27",{"className":"","href":"/blog/page/27","children":27}],["$","$L6","28",{"className":"","href":"/blog/page/28","children":28}],["$","$L6","29",{"className":"","href":"/blog/page/29","children":29}],["$","$L6","30",{"className":"","href":"/blog/page/30","children":30}],["$","$L6","31",{"className":"","href":"/blog/page/31","children":31}],["$","$L6","32",{"className":"","href":"/blog/page/32","children":32}],["$","$L6","33",{"className":"","href":"/blog/page/33","children":33}],["$","$L6","34",{"className":"","href":"/blog/page/34","children":34}],["$","$L6","35",{"className":"","href":"/blog/page/35","children":35}],["$","$L6","36",{"className":"","href":"/blog/page/36","children":36}],["$","$L6","37",{"className":"","href":"/blog/page/37","children":37}],["$","$L6","38",{"className":"","href":"/blog/page/38","children":38}],["$","$L6","39",{"className":"","href":"/blog/page/39","children":39}],["$","$L6","40",{"className":"","href":"/blog/page/40","children":40}],["$","$L6","41",{"className":"","href":"/blog/page/41","children":41}],["$","$L6","42",{"className":"","href":"/blog/page/42","children":42}],["$","$L6","43",{"className":"","href":"/blog/page/43","children":43}],["$","$L6","44",{"className":"","href":"/blog/page/44","children":44}],["$","$L6","45",{"className":"","href":"/blog/page/45","children":45}],["$","$L6","46",{"className":"","href":"/blog/page/46","children":46}],["$","$L6","47",{"className":"","href":"/blog/page/47","children":47}],["$","$L6","48",{"className":"","href":"/blog/page/48","children":48}],["$","$L6","49",{"className":"","href":"/blog/page/49","children":49}],["$","$L6","50",{"className":"","href":"/blog/page/50","children":50}],["$","$L6","51",{"className":"","href":"/blog/page/51","children":51}],["$","$L6","52",{"className":"","href":"/blog/page/52","children":52}],["$","$L6","53",{"className":"","href":"/blog/page/53","children":53}],["$","$L6","54",{"className":"","href":"/blog/page/54","children":54}],["$","$L6","55",{"className":"","href":"/blog/page/55","children":55}],["$","$L6","56",{"className":"","href":"/blog/page/56","children":56}],["$","$L6","57",{"className":"","href":"/blog/page/57","children":57}],["$","$L6","58",{"className":"","href":"/blog/page/58","children":58}],["$","$L6","59",{"className":"","href":"/blog/page/59","children":59}],["$","$L6","60",{"className":"","href":"/blog/page/60","children":60}],["$","$L6","61",{"className":"","href":"/blog/page/61","children":61}],["$","$L6","62",{"className":"","href":"/blog/page/62","children":62}],["$","$L6","63",{"className":"","href":"/blog/page/63","children":63}],["$","$L6","64",{"className":"","href":"/blog/page/64","children":64}],["$","$L6","65",{"className":"","href":"/blog/page/65","children":65}],["$","$L6","66",{"className":"","href":"/blog/page/66","children":66}],["$","$L6","67",{"className":"","href":"/blog/page/67","children":67}],["$","$L6","68",{"className":"","href":"/blog/page/68","children":68}],["$","$L6","69",{"className":"","href":"/blog/page/69","children":69}],["$","$L6","70",{"className":"","href":"/blog/page/70","children":70}],["$","$L6","71",{"className":"","href":"/blog/page/71","children":71}],["$","$L6","72",{"className":"","href":"/blog/page/72","children":72}],["$","$L6","73",{"className":"","href":"/blog/page/73","children":73}],["$","$L6","74",{"className":"","href":"/blog/page/74","children":74}],["$","$L6","75",{"className":"","href":"/blog/page/75","children":75}],["$","$L6","76",{"className":"","href":"/blog/page/76","children":76}],["$","$L6","77",{"className":"","href":"/blog/page/77","children":77}],["$","$L6","78",{"className":"","href":"/blog/page/78","children":78}],["$","$L6","79",{"className":"","href":"/blog/page/79","children":79}]]}]]}]]}]
7:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Patrick Desjardins Blog - How to Pause and Resume Apollo GraphQL Subscription using The Guild GraphQL CodeGen"}],["$","meta","3",{"name":"description","content":"How to Pause and Resume Apollo GraphQL Subscription using The Guild GraphQL CodeGen"}]]
1:null
