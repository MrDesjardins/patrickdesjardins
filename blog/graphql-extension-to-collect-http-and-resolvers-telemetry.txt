3:I[6102,[],""]
5:I[2609,[],""]
6:I[6196,["196","static/chunks/196-d9d7275cf071dc4b.js","986","static/chunks/986-aab1d30514616ab7.js","308","static/chunks/app/blog/%5Bslug%5D/page-1d51dd1d8a502245.js"],""]
4:["slug","graphql-extension-to-collect-http-and-resolvers-telemetry","d"]
0:["FW2QfT3u15Oaw-QXOxlll",[[["",{"children":["blog",{"children":[["slug","graphql-extension-to-collect-http-and-resolvers-telemetry","d"],{"children":["__PAGE__?{\"slug\":\"graphql-extension-to-collect-http-and-resolvers-telemetry\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","graphql-extension-to-collect-http-and-resolvers-telemetry","d"],{"children":["__PAGE__",{},[["$L1","$L2",[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/fcb9e03867a4ea9e.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/5c2c40c02c39ca14.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f810ef15b2c7fffa.css","precedence":"next","crossOrigin":"$undefined"}]],["$","div",null,{"className":"layout_blogbodystyle___Uc1w","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]}]],null],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/78bcead87aa8ba1c.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"en","className":"layout_htmlstyle__PseMz","children":["$","body",null,{"className":"layout_bodystyle__4ncsS","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"style":{"display":"flex","alignItems":"center","justifyContent":"center","height":"100vh"},"children":["$","div",null,{"style":{"width":"50%","height":"20%","backgroundColor":"#ffeded","borderRadius":12,"padding":12,"textAlign":"center"},"children":[["$","h1",null,{"children":"Not Found"}],["$","p",null,{"children":"Could not find requested resource"}],["$","$L6",null,{"href":"/","children":"Return Home"}]]}]}],"notFoundStyles":[]}]}]}]],null],null],["$L7",null]]]]
8:I[8986,["196","static/chunks/196-d9d7275cf071dc4b.js","986","static/chunks/986-aab1d30514616ab7.js","308","static/chunks/app/blog/%5Bslug%5D/page-1d51dd1d8a502245.js"],"Image"]
2:["$","div",null,{"className":"BlogBody_BlogBody__600mT","children":[["$","header",null,{"className":"BlogBody_siteTitle__f7uyb","children":"Patrick Desjardins Blog"}],["$","nav",null,{"children":["$","ul",null,{"className":"BlogBody_navLinks__ZV12t","children":["$","li",null,{"className":"BlogBody_navLinkItem__Pml2e","children":[["$","$L6",null,{"className":"BlogBody_navLinkText__ZtH2y","href":"/","children":"Main Page"}],["$","$L6",null,{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog","children":"Blog"}],[["$","$L6","2025",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2025","children":2025}],["$","$L6","2024",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2024","children":2024}],["$","$L6","2023",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2023","children":2023}],["$","$L6","2022",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2022","children":2022}],["$","$L6","2021",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2021","children":2021}],["$","$L6","2020",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2020","children":2020}],["$","$L6","2019",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2019","children":2019}],["$","$L6","2018",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2018","children":2018}],["$","$L6","2017",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2017","children":2017}],["$","$L6","2016",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2016","children":2016}],["$","$L6","2015",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2015","children":2015}],["$","$L6","2014",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2014","children":2014}],["$","$L6","2013",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2013","children":2013}],["$","$L6","2012",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2012","children":2012}],["$","$L6","2011",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2011","children":2011}]]]}]}]}],["$","div",null,{"className":"BlogBody_blogPictureContainer__IAbPL","children":["$","$L8",null,{"className":"BlogBody_blogTopPicture__L6lao","alt":"Patrick Desjardins picture from a conference","src":"/images/backgrounds/patrickdesjardins_conference_bw.webp","width":800,"height":260}]}],["$","main",null,{"className":"BlogBody_main__XrdKY","children":[["$","h1",null,{"className":"BlogBody_heading__bYRBe","children":"GraphQL Extension to Collect HTTP and Resolvers Telemetry"}],["$","div",null,{"className":"Page_blogPostContainer__AUIcf","children":[["$","p",null,{"className":"Page_blogPostDate__wVWWB","children":["Posted on: ","2019-04-09"]}],[["$","p",null,{"children":"The more my graph was increasing, the more resolvers I built. The more resolvers I had, the more data loaders I created, the more HTTP endpoints I had to call and so on. The complexity of the code was rising as well as the possibility to have a catastrophic amount of HTTP requests to be performed by GraphQL. The amount of log by using the console was not only polluting the source code by having a line in each resolver and HTTP method but also couldn't make it easy to collect the data for future analysis or to emergency cancellation of a GraphQL query if the amount of HTTP rise beyond a reasonable threshold."}],"\n",["$","p",null,{"children":"The idea I had was to see if there is a way to hook into GraphQL to collect the data at a higher level instead of being at each function. I am using the Apollo library and the answer is yes! There is an experimental feature named \"extension\". The documentation is dry and does not explain much but with some breakpoint and Visual Studio Code, I was able to build a simple extension in a few hours. Here is the result."}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/blog/GraphQLExtension-1.png","alt":""}]}],"\n",["$","p",null,{"children":"A GraphQL Request with its HTTP requests"}],"\n",["$","p",null,{"children":"The first requirement is to create the extension. It must inherit the GraphQLExtension class which is generic. The generic type needs to be your context type. Having access to the context is primordiale because it gives access to your user information. I assume that once authenticated the user is set in the context. Also, it gives you the possibility to inject statistic into the context throughout the exploration of the graph. In my case, I am using the context to collect information at my data service layer where all the HTTP requests are performed."}],"\n",["$","pre",null,{"className":"language-typescript","children":["$","code",null,{"className":"language-typescript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"export"}]," ",["$","span",null,{"className":"token keyword","children":"class"}]," ",["$","span",null,{"className":"token class-name","children":["DevConsole",["$","span",null,{"className":"token operator","children":"<"}],"TContext ",["$","span",null,{"className":"token keyword","children":"extends"}]," ApolloConfigurationContext",["$","span",null,{"className":"token operator","children":">"}]]}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token keyword","children":"implements"}]," ",["$","span",null,{"className":"token class-name","children":["GraphQLExtension",["$","span",null,{"className":"token operator","children":"<"}],"TContext",["$","span",null,{"className":"token operator","children":">"}]]}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],"\n",["$","p",null,{"children":["There is two importants function that you can override. The first one is ",["$","code",null,{"children":"requestDidStart"}]," which is invoked when a GraphQL request is made. It means that when a context is created and it that case a \"request\" is the GraphQL request and not all HTTP request performed by GraphQL during that GraphQL's request. The function return a function. The return function is invoked when the request is completed. It is the place to output into the console all your statistic or to send the information to your telemetry system."]}],"\n",["$","pre",null,{"className":"language-typescript","children":["$","code",null,{"className":"language-typescript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"public"}]," ",["$","span",null,{"className":"token function","children":"requestDidStart"}],["$","span",null,{"className":"token punctuation","children":"("}],"o",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    request",["$","span",null,{"className":"token operator","children":":"}]," Pick",["$","span",null,{"className":"token operator","children":"<"}],"Request",["$","span",null,{"className":"token punctuation","children":","}]," ",["$","span",null,{"className":"token string","children":"\"url\""}]," ",["$","span",null,{"className":"token operator","children":"|"}]," ",["$","span",null,{"className":"token string","children":"\"method\""}]," ",["$","span",null,{"className":"token operator","children":"|"}]," ",["$","span",null,{"className":"token string","children":"\"headers\""}],["$","span",null,{"className":"token operator","children":">"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    queryString",["$","span",null,{"className":"token operator","children":"?"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token builtin","children":"string"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    parsedQuery",["$","span",null,{"className":"token operator","children":"?"}],["$","span",null,{"className":"token operator","children":":"}]," DocumentNode",["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    operationName",["$","span",null,{"className":"token operator","children":"?"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token builtin","children":"string"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    variables",["$","span",null,{"className":"token operator","children":"?"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}]," ",["$","span",null,{"className":"token punctuation","children":"["}],"key",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token builtin","children":"string"}],["$","span",null,{"className":"token punctuation","children":"]"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token builtin","children":"any"}]," ",["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    persistedQueryHit",["$","span",null,{"className":"token operator","children":"?"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token builtin","children":"boolean"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    persistedQueryRegister",["$","span",null,{"className":"token operator","children":"?"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token builtin","children":"boolean"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    context",["$","span",null,{"className":"token operator","children":":"}]," TContext",["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    requestContext",["$","span",null,{"className":"token operator","children":":"}]," GraphQLRequestContext",["$","span",null,{"className":"token operator","children":"<"}],"TContext",["$","span",null,{"className":"token operator","children":">"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token builtin","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"New GraphQL requested started\""}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword","children":"return"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator","children":"=>"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["        ",["$","span",null,{"className":"token keyword","children":"const"}]," yourContextData ",["$","span",null,{"className":"token operator","children":"="}]," o",["$","span",null,{"className":"token punctuation","children":"."}],"context\n"]}],["$","span",null,{"className":"code-line","children":["        ",["$","span",null,{"className":"token builtin","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"Your data can be sent here\""}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],"\n",["$","p",null,{"children":"The second function is named \"willResolveField\" and is executed at every node of your graph. You can know the parent field and your field."}],"\n",["$","pre",null,{"className":"language-typescript","children":["$","code",null,{"className":"language-typescript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token function","children":"willResolveField"}],["$","span",null,{"className":"token punctuation","children":"("}],"source",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token builtin","children":"any"}],["$","span",null,{"className":"token punctuation","children":","}]," args",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}]," ",["$","span",null,{"className":"token punctuation","children":"["}],"argName",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token builtin","children":"string"}],["$","span",null,{"className":"token punctuation","children":"]"}],["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token builtin","children":"any"}]," ",["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":","}]," context",["$","span",null,{"className":"token operator","children":":"}]," TContext",["$","span",null,{"className":"token punctuation","children":","}]," info",["$","span",null,{"className":"token operator","children":":"}]," GraphQLResolveInfo",["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token comment","children":"// Info has the field name and parentType.name"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword","children":"return"}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"error",["$","span",null,{"className":"token operator","children":":"}]," Error ",["$","span",null,{"className":"token operator","children":"|"}]," ",["$","span",null,{"className":"token keyword","children":"null"}],["$","span",null,{"className":"token punctuation","children":","}]," result",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token builtin","children":"any"}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator","children":"=>"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["        ",["$","span",null,{"className":"token comment","children":"// ..."}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],"\n",["$","p",null,{"children":"The next step is to plug the extension into Apollo GraphQL. The property \"extensions\" of ApolloServerConfig takes an array of extension."}],"\n",["$","pre",null,{"className":"language-typescript","children":["$","code",null,{"className":"language-typescript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"const"}]," serverConfig",["$","span",null,{"className":"token operator","children":":"}]," ApolloServerConfig ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  ",["$","span",null,{"className":"token comment","children":"// ...,"}],"\n"]}],["$","span",null,{"className":"code-line","children":["  extensions",["$","span",null,{"className":"token operator","children":":"}]," ",["$","span",null,{"className":"token punctuation","children":"["}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token operator","children":"=>"}]," ",["$","span",null,{"className":"token keyword","children":"new"}]," ",["$","span",null,{"className":"token class-name","children":"DevConsole"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":"]"}],["$","span",null,{"className":"token punctuation","children":","}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}]]}]}],"\n",["$","p",null,{"children":"I am using the RESTDataSource of Apollo as well to perform all HTTP request. The abstract class has the GraphQL's context. If you override the function willSendRequest, you can then have a global hook into all HTTP request. In that function, I am populating a property of my context that I named \"stats\" where I am storing each URL and parameters."}],"\n",["$","pre",null,{"className":"language-typescript","children":["$","code",null,{"className":"language-typescript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"public"}]," ",["$","span",null,{"className":"token function","children":"willSendRequest"}],["$","span",null,{"className":"token punctuation","children":"("}],"request",["$","span",null,{"className":"token operator","children":":"}]," RequestOptions",["$","span",null,{"className":"token punctuation","children":")"}]," ",["$","span",null,{"className":"token punctuation","children":"{"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token keyword","children":"const"}]," stats ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token keyword","children":"this"}],["$","span",null,{"className":"token punctuation","children":"."}],"context",["$","span",null,{"className":"token punctuation","children":"."}],"stats",["$","span",null,{"className":"token punctuation","children":";"}],"\n"]}],["$","span",null,{"className":"code-line","children":["    ",["$","span",null,{"className":"token comment","children":"// push data in the stats object"}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}],"\n"]}]]}]}],"\n",["$","p",null,{"children":["The documentation could be better in term of defining all the possibility. Nevertheless, with some breakpoints and a little bit of time I was quite satisfied to see what can be done. You can do much more than what proposed, for instance, you can calculate the payload size and get more insight into what is not efficient. For example, I realized in the process of creating another exception that was throwing an exception when a maximum threshold of HTTP request was reached was still letting GraphQL continue its traversal causing the exception to occurs on every future node. The solution was to clean up the response of redundant error using the overload function ",["$","em",null,{"children":"willSendResponse"}],"."]}],"\n",["$","p",null,{"children":["$","img",null,{"src":"/images/blog/SizePayload.png","alt":""}]}],"\n",["$","p",null,{"children":"Bonus: Getting the size of the payload"}],"\n",["$","p",null,{"children":"There is a lot of possibility to get a clear view of what is happening behind the scene for maintainers and developers of the GraphQL service. The detail does not matter directly for the consumer who care about getting the data fast and accurately in the format requested and not about the complexity. However, the complexity if not well exposed to the team who own the service can be costly in term of resources. It is very easy to fall into the trap of assuming that everything goes as expected in a world where every GraphQL request is unique and can surface a scenario not well covered."}],"\n",["$","h2",null,{"children":"Previous GraphQL Posts"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["$","a",null,{"href":"getting-started-with-graphql-for-netflix-open-connect","children":"Getting Started with GraphQL for Netflix Open Connect"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"install-apollo-server-to-host-a-graphql-service","children":"Install Apollo Server to host a GraphQL service"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"apollo-server-and-secured-playground","children":"Apollo Server and Secured Playground"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"graphql-context","children":"GraphQL Context"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"graphql-query-with-argument","children":"GraphQL Query with Argument"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"apollo-graphql-resolvers-and-data-source-separation","children":"Apollo GraphQL Resolvers and Data Source separation"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"how-to-setup-a-typescript-nodejs-express-apollo-server-to-easy-debugging-with-vscode","children":"How to setup a TypeScript, NodeJS, Express Apollo Server to easy debugging with VsCode"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"graphql-resolvers-with-apollo","children":"GraphQL Resolvers with Apollo"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"configuring-apollo-playground-and-api-on-two-different-url","children":"Configuring Apollo Playground and API on two different URL"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"how-to-automatically-generate-typescript-for-consumer-of-your-graphql","children":"How to automatically generate TypeScript for consumers of your GraphQL"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"graphql-extension-to-collect-http-and-resolvers-telemetry","children":"GraphQL and HTTP Telemetry"}]}],"\n",["$","li",null,{"children":["$","a",null,{"href":"how-to-consume-graphql-in-typescript-and-react","children":"GraphQL and TypeScript/React"}]}],"\n"]}]]]}]]}],["$","div",null,{"className":"BlogBody_paginationBar__1gsMc","children":[["$","div",null,{"className":"BlogBody_paginationTitle__H_eFX","children":"Chronological Blog Articles by Page"}],["$","div",null,{"className":"BlogBody_paginationLinks__nk8zd","children":[["$","$L6","1",{"className":"","href":"/blog/page/1","children":1}],["$","$L6","2",{"className":"","href":"/blog/page/2","children":2}],["$","$L6","3",{"className":"","href":"/blog/page/3","children":3}],["$","$L6","4",{"className":"","href":"/blog/page/4","children":4}],["$","$L6","5",{"className":"","href":"/blog/page/5","children":5}],["$","$L6","6",{"className":"","href":"/blog/page/6","children":6}],["$","$L6","7",{"className":"","href":"/blog/page/7","children":7}],["$","$L6","8",{"className":"","href":"/blog/page/8","children":8}],["$","$L6","9",{"className":"","href":"/blog/page/9","children":9}],["$","$L6","10",{"className":"","href":"/blog/page/10","children":10}],["$","$L6","11",{"className":"","href":"/blog/page/11","children":11}],["$","$L6","12",{"className":"","href":"/blog/page/12","children":12}],["$","$L6","13",{"className":"","href":"/blog/page/13","children":13}],["$","$L6","14",{"className":"","href":"/blog/page/14","children":14}],["$","$L6","15",{"className":"","href":"/blog/page/15","children":15}],["$","$L6","16",{"className":"","href":"/blog/page/16","children":16}],["$","$L6","17",{"className":"","href":"/blog/page/17","children":17}],["$","$L6","18",{"className":"","href":"/blog/page/18","children":18}],["$","$L6","19",{"className":"","href":"/blog/page/19","children":19}],["$","$L6","20",{"className":"","href":"/blog/page/20","children":20}],["$","$L6","21",{"className":"","href":"/blog/page/21","children":21}],["$","$L6","22",{"className":"","href":"/blog/page/22","children":22}],["$","$L6","23",{"className":"","href":"/blog/page/23","children":23}],["$","$L6","24",{"className":"","href":"/blog/page/24","children":24}],["$","$L6","25",{"className":"","href":"/blog/page/25","children":25}],["$","$L6","26",{"className":"","href":"/blog/page/26","children":26}],["$","$L6","27",{"className":"","href":"/blog/page/27","children":27}],["$","$L6","28",{"className":"","href":"/blog/page/28","children":28}],["$","$L6","29",{"className":"","href":"/blog/page/29","children":29}],["$","$L6","30",{"className":"","href":"/blog/page/30","children":30}],["$","$L6","31",{"className":"","href":"/blog/page/31","children":31}],["$","$L6","32",{"className":"","href":"/blog/page/32","children":32}],["$","$L6","33",{"className":"","href":"/blog/page/33","children":33}],["$","$L6","34",{"className":"","href":"/blog/page/34","children":34}],["$","$L6","35",{"className":"","href":"/blog/page/35","children":35}],["$","$L6","36",{"className":"","href":"/blog/page/36","children":36}],["$","$L6","37",{"className":"","href":"/blog/page/37","children":37}],["$","$L6","38",{"className":"","href":"/blog/page/38","children":38}],["$","$L6","39",{"className":"","href":"/blog/page/39","children":39}],["$","$L6","40",{"className":"","href":"/blog/page/40","children":40}],["$","$L6","41",{"className":"","href":"/blog/page/41","children":41}],["$","$L6","42",{"className":"","href":"/blog/page/42","children":42}],["$","$L6","43",{"className":"","href":"/blog/page/43","children":43}],["$","$L6","44",{"className":"","href":"/blog/page/44","children":44}],["$","$L6","45",{"className":"","href":"/blog/page/45","children":45}],["$","$L6","46",{"className":"","href":"/blog/page/46","children":46}],["$","$L6","47",{"className":"","href":"/blog/page/47","children":47}],["$","$L6","48",{"className":"","href":"/blog/page/48","children":48}],["$","$L6","49",{"className":"","href":"/blog/page/49","children":49}],["$","$L6","50",{"className":"","href":"/blog/page/50","children":50}],["$","$L6","51",{"className":"","href":"/blog/page/51","children":51}],["$","$L6","52",{"className":"","href":"/blog/page/52","children":52}],["$","$L6","53",{"className":"","href":"/blog/page/53","children":53}],["$","$L6","54",{"className":"","href":"/blog/page/54","children":54}],["$","$L6","55",{"className":"","href":"/blog/page/55","children":55}],["$","$L6","56",{"className":"","href":"/blog/page/56","children":56}],["$","$L6","57",{"className":"","href":"/blog/page/57","children":57}],["$","$L6","58",{"className":"","href":"/blog/page/58","children":58}],["$","$L6","59",{"className":"","href":"/blog/page/59","children":59}],["$","$L6","60",{"className":"","href":"/blog/page/60","children":60}],["$","$L6","61",{"className":"","href":"/blog/page/61","children":61}],["$","$L6","62",{"className":"","href":"/blog/page/62","children":62}],["$","$L6","63",{"className":"","href":"/blog/page/63","children":63}],["$","$L6","64",{"className":"","href":"/blog/page/64","children":64}],["$","$L6","65",{"className":"","href":"/blog/page/65","children":65}],["$","$L6","66",{"className":"","href":"/blog/page/66","children":66}],["$","$L6","67",{"className":"","href":"/blog/page/67","children":67}],["$","$L6","68",{"className":"","href":"/blog/page/68","children":68}],["$","$L6","69",{"className":"","href":"/blog/page/69","children":69}],["$","$L6","70",{"className":"","href":"/blog/page/70","children":70}],["$","$L6","71",{"className":"","href":"/blog/page/71","children":71}],["$","$L6","72",{"className":"","href":"/blog/page/72","children":72}],["$","$L6","73",{"className":"","href":"/blog/page/73","children":73}],["$","$L6","74",{"className":"","href":"/blog/page/74","children":74}],["$","$L6","75",{"className":"","href":"/blog/page/75","children":75}],["$","$L6","76",{"className":"","href":"/blog/page/76","children":76}],["$","$L6","77",{"className":"","href":"/blog/page/77","children":77}],["$","$L6","78",{"className":"","href":"/blog/page/78","children":78}],["$","$L6","79",{"className":"","href":"/blog/page/79","children":79}]]}]]}]]}]
7:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Patrick Desjardins Blog - GraphQL Extension to Collect HTTP and Resolvers Telemetry"}],["$","meta","3",{"name":"description","content":"GraphQL Extension to Collect HTTP and Resolvers Telemetry"}]]
1:null
