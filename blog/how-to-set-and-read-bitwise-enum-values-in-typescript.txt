3:I[9275,[],""]
5:I[1343,[],""]
6:I[231,["231","static/chunks/231-d291986acc57095e.js","173","static/chunks/173-1ff9408fc5d1e856.js","308","static/chunks/app/blog/%5Bslug%5D/page-b7aa7f195c3b21e3.js"],""]
4:["slug","how-to-set-and-read-bitwise-enum-values-in-typescript","d"]
0:["1QgTNiyaHmNlBmBMlH0Sn",[[["",{"children":["blog",{"children":[["slug","how-to-set-and-read-bitwise-enum-values-in-typescript","d"],{"children":["__PAGE__?{\"slug\":\"how-to-set-and-read-bitwise-enum-values-in-typescript\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","how-to-set-and-read-bitwise-enum-values-in-typescript","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/585ef9e6d39b193c.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},[["$","div",null,{"className":"layout_bodystyle__9TFhb","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}],null],null]},[["$","html",null,{"lang":"en","children":["$","body",null,{"className":"layout_bodystyle__4ncsS","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","div",null,{"style":{"display":"flex","alignItems":"center","justifyContent":"center","height":"100vh"},"children":["$","div",null,{"style":{"width":"50%","height":"20%","backgroundColor":"#ffeded","borderRadius":12,"padding":12,"textAlign":"center"},"children":[["$","h1",null,{"children":"Not Found"}],["$","p",null,{"children":"Could not find requested resource"}],["$","$L6",null,{"href":"/","children":"Return Home"}]]}]}],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/378d2a9747ade719.css","precedence":"next","crossOrigin":"$undefined"}]]}]}]}],null],null],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/53d73aaa6ce0fadc.css","precedence":"next","crossOrigin":"$undefined"}]],"$L7"]]]]
8:I[8173,["231","static/chunks/231-d291986acc57095e.js","173","static/chunks/173-1ff9408fc5d1e856.js","308","static/chunks/app/blog/%5Bslug%5D/page-b7aa7f195c3b21e3.js"],"Image"]
2:["$","div",null,{"className":"BlogBody_BlogBody__600mT","children":[["$","header",null,{"className":"BlogBody_siteTitle__f7uyb","children":"Patrick Desjardins Blog"}],["$","nav",null,{"children":["$","ul",null,{"className":"BlogBody_navLinks__ZV12t","children":["$","li",null,{"className":"BlogBody_navLinkItem__Pml2e","children":[["$","$L6",null,{"className":"BlogBody_navLinkText__ZtH2y","href":"/","children":"Main Page"}],["$","$L6",null,{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog","children":"Blog"}],[["$","$L6","2024",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2024","children":2024}],["$","$L6","2023",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2023","children":2023}],["$","$L6","2022",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2022","children":2022}],["$","$L6","2021",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2021","children":2021}],["$","$L6","2020",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2020","children":2020}],["$","$L6","2019",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2019","children":2019}],["$","$L6","2018",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2018","children":2018}],["$","$L6","2017",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2017","children":2017}],["$","$L6","2016",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2016","children":2016}],["$","$L6","2015",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2015","children":2015}],["$","$L6","2014",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2014","children":2014}],["$","$L6","2013",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2013","children":2013}],["$","$L6","2012",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2012","children":2012}],["$","$L6","2011",{"className":"BlogBody_navLinkText__ZtH2y","href":"/blog/for/2011","children":2011}]]]}]}]}],["$","div",null,{"className":"BlogBody_blogPictureContainer__IAbPL","children":["$","$L8",null,{"className":"BlogBody_blogTopPicture__L6lao","alt":"Patrick Desjardins picture from a conference","src":"/images/backgrounds/patrickdesjardins_conference_bw.jpeg","width":800,"height":260}]}],["$","main",null,{"className":"BlogBody_main__XrdKY","children":[["$","h1",null,{"className":"BlogBody_heading__bYRBe","children":"How to set and read bitwise enum values in TypeScript"}],["$","div",null,{"className":"Page_blogPostContainer__AUIcf","children":[["$","p",null,{"className":"Page_blogPostDate__wVWWB","children":["Posted on: ","2018-06-19"]}],[["$","p",null,{"children":"Using a bitwise number in an enum is the way to have a single variable with many potential values. A canonical example is to have a status that can be in several states at the same time. I recently create a generic interface in TypeScript to wrap an entity (any business logic type) to add additional data like the status."}],"\n",["$","pre",null,{"className":"language-typescript","children":["$","code",null,{"className":"language-typescript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"enum"}]," Status ",["$","span",null,{"className":"token punctuation","children":"{"}]," \n"]}],["$","span",null,{"className":"code-line","children":["  Unknown ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"0"}],["$","span",null,{"className":"token punctuation","children":","}]," \n"]}],["$","span",null,{"className":"code-line","children":["  New ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"1"}]," ",["$","span",null,{"className":"token operator","children":"<<"}]," ",["$","span",null,{"className":"token number","children":"0"}],["$","span",null,{"className":"token punctuation","children":","}]," \n"]}],["$","span",null,{"className":"code-line","children":["  Dirty ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"1"}]," ",["$","span",null,{"className":"token operator","children":"<<"}]," ",["$","span",null,{"className":"token number","children":"1"}],["$","span",null,{"className":"token punctuation","children":","}]," \n"]}],["$","span",null,{"className":"code-line","children":["  InError ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"1"}]," ",["$","span",null,{"className":"token operator","children":"<<"}]," ",["$","span",null,{"className":"token number","children":"2"}],["$","span",null,{"className":"token punctuation","children":","}]," \n"]}],["$","span",null,{"className":"code-line","children":["  Processing ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"1"}]," ",["$","span",null,{"className":"token operator","children":"<<"}]," ",["$","span",null,{"className":"token number","children":"3"}],["$","span",null,{"className":"token punctuation","children":","}]," \n"]}],["$","span",null,{"className":"code-line","children":["  PersistedEntity ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"1"}]," ",["$","span",null,{"className":"token operator","children":"<<"}]," ",["$","span",null,{"className":"token number","children":"4"}]," \n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token punctuation","children":"}"}]," \n"]}]]}]}],"\n",["$","p",null,{"children":["The similar enum can use a direct number that represents all power of 2 ",["$","code",null,{"children":"(2^0, 2^1, 2^2, 2^3, 2^4)"}],". The importance is to have a number that in binary occupy one spot (0, 10, 100, 1000, 10000)."]}],"\n",["$","pre",null,{"className":"language-typescript","children":["$","code",null,{"className":"language-typescript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"enum"}]," Status ",["$","span",null,{"className":"token punctuation","children":"{"}]," \n"]}],["$","span",null,{"className":"code-line","children":["  Unknown ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"0"}],["$","span",null,{"className":"token punctuation","children":","}]," \n"]}],["$","span",null,{"className":"code-line","children":["  New ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"1"}],["$","span",null,{"className":"token punctuation","children":","}]," \n"]}],["$","span",null,{"className":"code-line","children":["  Dirty ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"2"}],["$","span",null,{"className":"token punctuation","children":","}]," \n"]}],["$","span",null,{"className":"code-line","children":["  InError ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"4"}],["$","span",null,{"className":"token punctuation","children":","}]," \n"]}],["$","span",null,{"className":"code-line","children":["  Processing ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"8"}],["$","span",null,{"className":"token punctuation","children":","}]," \n"]}],["$","span",null,{"className":"code-line","children":["  PersistedEntity ",["$","span",null,{"className":"token operator","children":"="}]," ",["$","span",null,{"className":"token number","children":"16"}]," ",["$","span",null,{"className":"token punctuation","children":"}"}]," \n"]}]]}]}],"\n",["$","p",null,{"children":"The idea is any variable of this enum type can assign a value directly or combine many values. To assign a single value, the use of the equal sign is good as you would do with an amount that is not bitwise. However, using the equal sign override any previous value assigned to the variable."}],"\n",["$","pre",null,{"className":"language-typescript","children":["$","code",null,{"className":"language-typescript code-highlight","children":["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token keyword","children":"let"}]," value",["$","span",null,{"className":"token operator","children":":"}]," Status ",["$","span",null,{"className":"token operator","children":"="}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"New",["$","span",null,{"className":"token punctuation","children":";"}]," ",["$","span",null,{"className":"token builtin","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"Only new\""}],["$","span",null,{"className":"token punctuation","children":","}]," value",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," value ",["$","span",null,{"className":"token operator","children":"="}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"New ",["$","span",null,{"className":"token operator","children":"|"}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"Dirty",["$","span",null,{"className":"token punctuation","children":";"}]," ",["$","span",null,{"className":"token comment","children":"// New + Dirty value = Status.New; // Only new "}],"\n"]}]}]}],"\n",["$","p",null,{"children":["A value can hold more than a single value. In the case that we want to persist the existing value intact and you need to use the sign ",["$","code",null,{"children":"|="}],". To remove a particular status you need to use ",["$","code",null,{"children":"&= ~"}],". Using these operators will swap the value at the right position in its binary format without affecting the remaining parts of the number."]}],"\n",["$","pre",null,{"className":"language-typescript","children":["$","code",null,{"className":"language-typescript code-highlight","children":[["$","span",null,{"className":"code-line","children":["value ",["$","span",null,{"className":"token operator","children":"|="}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"Processing",["$","span",null,{"className":"token punctuation","children":";"}]," ",["$","span",null,{"className":"token builtin","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"New and processing\""}],["$","span",null,{"className":"token punctuation","children":","}]," value",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," \n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token builtin","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"Is it new?\""}],["$","span",null,{"className":"token punctuation","children":","}]," value ",["$","span",null,{"className":"token operator","children":"==="}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"New",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," ",["$","span",null,{"className":"token comment","children":"// Not the right way "}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token builtin","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"Is it new?\""}],["$","span",null,{"className":"token punctuation","children":","}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"New ",["$","span",null,{"className":"token operator","children":"==="}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"value ",["$","span",null,{"className":"token operator","children":"&"}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"New",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," ",["$","span",null,{"className":"token comment","children":"// Right way "}],"\n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token builtin","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"Is it processing?\""}],["$","span",null,{"className":"token punctuation","children":","}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"Processing ",["$","span",null,{"className":"token operator","children":"==="}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"value ",["$","span",null,{"className":"token operator","children":"&"}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"Processing",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," \n"]}],["$","span",null,{"className":"code-line","children":["value ",["$","span",null,{"className":"token operator","children":"&="}]," ",["$","span",null,{"className":"token operator","children":"~"}],"Status",["$","span",null,{"className":"token punctuation","children":"."}],"Processing",["$","span",null,{"className":"token punctuation","children":";"}]," \n"]}]]}]}],"\n",["$","p",null,{"children":"Finally, to check if the variable is of a particular status you must use the triple equal with the ampersand to the value you want to check against. This is often the mistake I see. People are using the triple equal or are using the ampersand without comparing it back to the desired value. The simple form of comparison is a mistake. The ampersand returns a number, not a boolean. The comparison needs to be against the value that we want to check."}],"\n",["$","pre",null,{"className":"language-typescript","children":["$","code",null,{"className":"language-typescript code-highlight","children":[["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token builtin","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"Is it new?\""}],["$","span",null,{"className":"token punctuation","children":","}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"New ",["$","span",null,{"className":"token operator","children":"==="}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"value ",["$","span",null,{"className":"token operator","children":"&"}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"New",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," \n"]}],["$","span",null,{"className":"code-line","children":[["$","span",null,{"className":"token builtin","children":"console"}],["$","span",null,{"className":"token punctuation","children":"."}],["$","span",null,{"className":"token function","children":"log"}],["$","span",null,{"className":"token punctuation","children":"("}],["$","span",null,{"className":"token string","children":"\"Is it processing?\""}],["$","span",null,{"className":"token punctuation","children":","}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"Processing ",["$","span",null,{"className":"token operator","children":"==="}]," ",["$","span",null,{"className":"token punctuation","children":"("}],"value ",["$","span",null,{"className":"token operator","children":"&"}]," Status",["$","span",null,{"className":"token punctuation","children":"."}],"Processing",["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":")"}],["$","span",null,{"className":"token punctuation","children":";"}]," \n"]}]]}]}],"\n",["$","p",null,{"children":"The output of the code all the previous code gives:"}],"\n",["$","pre",null,{"className":"language-plaintext","children":["$","code",null,{"className":"language-plaintext code-highlight","children":[["$","span",null,{"className":"code-line","children":" Only new 1 New and processing 9 Is it new? false \n"}],["$","span",null,{"className":"code-line","children":" Is it new? true Is it processing? true Is it new? true \n"}],["$","span",null,{"className":"code-line","children":" Is it processing? false \n"}]]}]}],"\n",["$","p",null,{"children":"Using bitwise number is harder to grasp at first glance and open code to error more easily even with TypeScript. It is recommended to use bitwise wisely and not to abuse it."}]]]}]]}],["$","div",null,{"className":"BlogBody_paginationBar__1gsMc","children":[["$","div",null,{"className":"BlogBody_paginationTitle__H_eFX","children":"Chronological Blog Articles by Page"}],["$","div",null,{"className":"BlogBody_paginationLinks__nk8zd","children":[["$","$L6","1",{"className":"","href":"/blog/page/1","children":1}],["$","$L6","2",{"className":"","href":"/blog/page/2","children":2}],["$","$L6","3",{"className":"","href":"/blog/page/3","children":3}],["$","$L6","4",{"className":"","href":"/blog/page/4","children":4}],["$","$L6","5",{"className":"","href":"/blog/page/5","children":5}],["$","$L6","6",{"className":"","href":"/blog/page/6","children":6}],["$","$L6","7",{"className":"","href":"/blog/page/7","children":7}],["$","$L6","8",{"className":"","href":"/blog/page/8","children":8}],["$","$L6","9",{"className":"","href":"/blog/page/9","children":9}],["$","$L6","10",{"className":"","href":"/blog/page/10","children":10}],["$","$L6","11",{"className":"","href":"/blog/page/11","children":11}],["$","$L6","12",{"className":"","href":"/blog/page/12","children":12}],["$","$L6","13",{"className":"","href":"/blog/page/13","children":13}],["$","$L6","14",{"className":"","href":"/blog/page/14","children":14}],["$","$L6","15",{"className":"","href":"/blog/page/15","children":15}],["$","$L6","16",{"className":"","href":"/blog/page/16","children":16}],["$","$L6","17",{"className":"","href":"/blog/page/17","children":17}],["$","$L6","18",{"className":"","href":"/blog/page/18","children":18}],["$","$L6","19",{"className":"","href":"/blog/page/19","children":19}],["$","$L6","20",{"className":"","href":"/blog/page/20","children":20}],["$","$L6","21",{"className":"","href":"/blog/page/21","children":21}],["$","$L6","22",{"className":"","href":"/blog/page/22","children":22}],["$","$L6","23",{"className":"","href":"/blog/page/23","children":23}],["$","$L6","24",{"className":"","href":"/blog/page/24","children":24}],["$","$L6","25",{"className":"","href":"/blog/page/25","children":25}],["$","$L6","26",{"className":"","href":"/blog/page/26","children":26}],["$","$L6","27",{"className":"","href":"/blog/page/27","children":27}],["$","$L6","28",{"className":"","href":"/blog/page/28","children":28}],["$","$L6","29",{"className":"","href":"/blog/page/29","children":29}],["$","$L6","30",{"className":"","href":"/blog/page/30","children":30}],["$","$L6","31",{"className":"","href":"/blog/page/31","children":31}],["$","$L6","32",{"className":"","href":"/blog/page/32","children":32}],["$","$L6","33",{"className":"","href":"/blog/page/33","children":33}],["$","$L6","34",{"className":"","href":"/blog/page/34","children":34}],["$","$L6","35",{"className":"","href":"/blog/page/35","children":35}],["$","$L6","36",{"className":"","href":"/blog/page/36","children":36}],["$","$L6","37",{"className":"","href":"/blog/page/37","children":37}],["$","$L6","38",{"className":"","href":"/blog/page/38","children":38}],["$","$L6","39",{"className":"","href":"/blog/page/39","children":39}],["$","$L6","40",{"className":"","href":"/blog/page/40","children":40}],["$","$L6","41",{"className":"","href":"/blog/page/41","children":41}],["$","$L6","42",{"className":"","href":"/blog/page/42","children":42}],["$","$L6","43",{"className":"","href":"/blog/page/43","children":43}],["$","$L6","44",{"className":"","href":"/blog/page/44","children":44}],["$","$L6","45",{"className":"","href":"/blog/page/45","children":45}],["$","$L6","46",{"className":"","href":"/blog/page/46","children":46}],["$","$L6","47",{"className":"","href":"/blog/page/47","children":47}],["$","$L6","48",{"className":"","href":"/blog/page/48","children":48}],["$","$L6","49",{"className":"","href":"/blog/page/49","children":49}],["$","$L6","50",{"className":"","href":"/blog/page/50","children":50}],["$","$L6","51",{"className":"","href":"/blog/page/51","children":51}],["$","$L6","52",{"className":"","href":"/blog/page/52","children":52}],["$","$L6","53",{"className":"","href":"/blog/page/53","children":53}],["$","$L6","54",{"className":"","href":"/blog/page/54","children":54}],["$","$L6","55",{"className":"","href":"/blog/page/55","children":55}],["$","$L6","56",{"className":"","href":"/blog/page/56","children":56}],["$","$L6","57",{"className":"","href":"/blog/page/57","children":57}],["$","$L6","58",{"className":"","href":"/blog/page/58","children":58}],["$","$L6","59",{"className":"","href":"/blog/page/59","children":59}],["$","$L6","60",{"className":"","href":"/blog/page/60","children":60}],["$","$L6","61",{"className":"","href":"/blog/page/61","children":61}],["$","$L6","62",{"className":"","href":"/blog/page/62","children":62}],["$","$L6","63",{"className":"","href":"/blog/page/63","children":63}],["$","$L6","64",{"className":"","href":"/blog/page/64","children":64}],["$","$L6","65",{"className":"","href":"/blog/page/65","children":65}],["$","$L6","66",{"className":"","href":"/blog/page/66","children":66}],["$","$L6","67",{"className":"","href":"/blog/page/67","children":67}],["$","$L6","68",{"className":"","href":"/blog/page/68","children":68}],["$","$L6","69",{"className":"","href":"/blog/page/69","children":69}],["$","$L6","70",{"className":"","href":"/blog/page/70","children":70}],["$","$L6","71",{"className":"","href":"/blog/page/71","children":71}],["$","$L6","72",{"className":"","href":"/blog/page/72","children":72}],["$","$L6","73",{"className":"","href":"/blog/page/73","children":73}],["$","$L6","74",{"className":"","href":"/blog/page/74","children":74}],["$","$L6","75",{"className":"","href":"/blog/page/75","children":75}],["$","$L6","76",{"className":"","href":"/blog/page/76","children":76}],["$","$L6","77",{"className":"","href":"/blog/page/77","children":77}],["$","$L6","78",{"className":"","href":"/blog/page/78","children":78}]]}]]}]]}]
7:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Patrick Desjardins Blog - How to set and read bitwise enum values in TypeScript"}],["$","meta","3",{"name":"description","content":"How to set and read bitwise enum values in TypeScript"}]]
1:null
