3:I[5613,[],""]
5:I[1778,[],""]
4:["slug","rust-struct-memory-function","d"]
0:["U9WHEHP9m9dAVmOepwIU5",[[["",{"children":["blog",{"children":[["slug","rust-struct-memory-function","d"],{"children":["__PAGE__?{\"slug\":\"rust-struct-memory-function\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","rust-struct-memory-function","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e917b4f00bcb2347.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","title",null,{"children":"Patrick Desjardins Website and Blog"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1, shrink-to-fit=no"}]]}],["$","body",null,{"className":"layout_bodystyle__4ncsS","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f7004a68ac8d367c.css","precedence":"next","crossOrigin":""}]],"$L6"]]]]
6:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","meta","2",{"name":"next-size-adjust"}]]
1:null
7:I[5250,["674","static/chunks/674-a46cce5ee161a346.js","308","static/chunks/app/blog/%5Bslug%5D/page-e23445258eb56deb.js"],""]
8:I[1749,["674","static/chunks/674-a46cce5ee161a346.js","308","static/chunks/app/blog/%5Bslug%5D/page-e23445258eb56deb.js"],"Image"]
2:["$","div",null,{"className":"__className_aaf875","children":["$","div",null,{"className":"layout_container__Tovb9","children":[["$","header",null,{"className":"layout_siteTitle__k5U8g","children":"Patrick Desjardins Blog"}],["$","nav",null,{"children":["$","ul",null,{"className":"layout_navLinks__mf70r","children":["$","li",null,{"className":"layout_navLinkItem__1L8fB","children":[["$","$L7",null,{"className":"layout_navLinkText__bt28R","href":"/","children":"Main Page"}],["$","$L7",null,{"className":"layout_navLinkText__bt28R","href":"/blog","children":"Blog"}],[["$","$L7","2024",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2024","children":2024}],["$","$L7","2023",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2023","children":2023}],["$","$L7","2022",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2022","children":2022}],["$","$L7","2021",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2021","children":2021}],["$","$L7","2020",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2020","children":2020}],["$","$L7","2019",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2019","children":2019}],["$","$L7","2018",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2018","children":2018}],["$","$L7","2017",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2017","children":2017}],["$","$L7","2016",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2016","children":2016}],["$","$L7","2015",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2015","children":2015}],["$","$L7","2014",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2014","children":2014}],["$","$L7","2013",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2013","children":2013}],["$","$L7","2012",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2012","children":2012}],["$","$L7","2011",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2011","children":2011}]]]}]}]}],["$","div",null,{"children":["$","$L8",null,{"className":"layout_blogTopPicture__RJHNN","alt":"Patrick Desjardins picture from a conference","src":"/images/backgrounds/patrickdesjardins_conference_bw.jpeg","width":1000,"height":300}]}],["$","main",null,{"className":"layout_main__mXTwS","children":[["$","h1",null,{"children":"Rust: Structure Memory when Using a Function"}],["$","div",null,{"className":"layout_blogPostContainer__WYELx","children":[["$","p",null,{"className":"layout_blogPostDate__LUvx5","children":["Posted on: ","2022-11-04"]}],[["$","p",null,{"children":["I recently learned about the tool called ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"clippy"}]}]}]}]," that is available if you use ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"cargo"}]}]}]}],". It provides lint information on your Rust code to ensure you are using good practices but also helps to use Rust idiomatic and consistent code. For example, one recommendation was to not use ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":".clone()"}]}]}]}]," on one of my structures. The suggestion made me think. I was passing the structure into a few functions, and I wanted to ensure no function was modifying the content."]}],"\n",["$","p",null,{"children":["Coming from a JavaScript/TypeScript background, I am cloning and passing the clone to have immutability. However, in Rust, passing a structure in a function does not give a reference in memory to that structure. Nor that passing a structure into a function allows the function to mutate. Rust has two explicit keywords: ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"mut"}]}]}]}]," and ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"&"}]}]}]}]," to allow mutation and to pass by reference."]}],"\n",["$","p",null,{"children":"Here is a short code that illustrates how a structure is preserved. But, first, let's create a structure."}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"rust","data-theme":"github-light","children":["$","code",null,{"data-language":"rust","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"#[derive(Copy, Clone)]"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"struct Test {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    x: u32"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}]]}]}]}],"\n",["$","p",null,{"children":["Second, let's create a ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"main"}]}]}]}]," function that will create a structure we do not want to modify."]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"rust","data-theme":"github-light","children":["$","code",null,{"data-language":"rust","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"fn main() {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    // Create value and print its memory address"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    let t = Test {x:1};"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"Original t: {:p}\", &t);"}]}],"\n",["$","span",null,{"data-line":"","children":" "}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    // Call the mutate function"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    let new_t = mutate(t);"}]}],"\n",["$","span",null,{"data-line":"","children":" "}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    // Print the values"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"{}\",t.x);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"{}\",new_t.x);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}]]}]}]}],"\n",["$","p",null,{"children":["The ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"main"}]}]}]}]," function calls the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"mutate"}]}]}]}]," and returns a new instance of the struct. The expectation is that ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t"}]}]}]}]," remains with the value ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"1"}]}]}]}]," and that the returned value will be ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"100"}]}]}]}],"."]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"rust","data-theme":"github-light","children":["$","code",null,{"data-language":"rust","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"fn mutate(t_param: Test) ->Test {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    // Create a variable that is `x` but marked that it can be mutated"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    let mut new_test = t_param;"}]}],"\n",["$","span",null,{"data-line":"","children":" "}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    // Print memory address"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"t_param: {:p}\", &t_param);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"new_test: {:p}\", &new_test);"}]}],"\n",["$","span",null,{"data-line":"","children":" "}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    // Mutate the value from 1 to 100"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    new_test.x = 100;"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    new_test"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}]]}]}]}],"\n",["$","p",null,{"children":["The ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"mutate"}]}]}]}]," function cannot change the value of ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param.x"}]}]}]}]," without the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"mut"}]}]}]}]," keyword. Rust will throw a compilation error saying that the variable must be mutable. Adding ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"mut"}]}]}]}]," to a new variable creates new variables. The memory prints below the assignment show two addresses, which means that the variable passed by the parameter (",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param"}]}]}]}],") is not using the same memory as ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"new_test"}]}]}]}],"."]}],"\n",["$","p",null,{"children":"The program prints:"}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"sh","data-theme":"github-light","children":["$","code",null,{"data-language":"sh","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"Original t: 0x7ffcc6ba0e94"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param:    0x7ffcc6ba0dc0"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"new_test:   0x7ffcc6ba0dc4"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"1"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"100"}]}]]}]}]}],"\n",["$","h1",null,{"children":"Moving Ownership"}],"\n",["$","p",null,{"children":["In the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"mutate"}]}]}]}]," function, we moved ownership to another variable by assigning the parameter to a new variable."]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"rust","data-theme":"github-light","children":["$","code",null,{"data-language":"rust","data-theme":"github-light","style":{"display":"grid"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"let mut new_test = t_param;"}]}]}]}]}],"\n",["$","p",null,{"children":["The ownership is not transferred because of ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"mut"}]}]}]}]]}],"\n",["$","p",null,{"children":"The same occurs when we assign a variable to a function by parameter. For example, moves ownership in the following code:"}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"rust","data-theme":"github-light","children":["$","code",null,{"data-language":"rust","data-theme":"github-light","style":{"display":"grid"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"let new_test = t_param;"}]}]}]}]}],"\n",["$","p",null,{"children":"The reason is to avoid having two or more variables with a pointer to a space in memory. It avoids bugs."}],"\n",["$","p",null,{"children":"The consequence of moving the ownership is that the former variable cannot access anything from the object."}],"\n",["$","p",null,{"children":"Let's modify the former example and see:"}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"rust","data-theme":"github-light","children":["$","code",null,{"data-language":"rust","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"fn main() {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    let mut t = Test {x:1};"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    let mut new_test = t;"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"t_param: {}\", t.x);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"new_test: {}\", new_test.x);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    "}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    t.x = 2;"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    new_test.x = 1000;"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"t_param: {}\", t.x);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"new_test: {}\", new_test.x);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    "}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"t_param: {:p}\", &t);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"new_test: {:p}\", &new_test);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}]]}]}]}],"\n",["$","p",null,{"children":"The output is:"}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"plaintext","data-theme":"github-light","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param: 1"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"new_test: 1"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param: 2"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"new_test: 1000"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param: 0x7ffd03e227f0"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"new_test: 0x7ffd03e227f4"}]}]]}]}]}],"\n",["$","p",null,{"children":["We can see that the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param"}]}]}]}]," and ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"new_test"}]}]}]}]," can adjust the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"x"}]}]}]}]," without affecting each other."]}],"\n",["$","h1",null,{"children":"Function Parameter"}],"\n",["$","p",null,{"children":["What small detail that may have gone unnoticed is the trait above the struct ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"#[derive(Copy, Clone)]"}]}]}]}],". This is required to pass the structure in a function otherwise would create a compilation error with a ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"borrow of moved value"}]}]}]}]," message. The ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"copy"}]}]}]}]," trait is required because, unlike primitive types, they are copied by default. The ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"clone"}]}]}]}]," is required because of the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"copy"}]}]}]}]," trait. You can quickly see what I am saying by clicking in VSCode on the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"copy"}]}]}]}],", which will lead you to the source code of the trait, and you will see:"]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"rust","data-theme":"github-light","children":["$","code",null,{"data-language":"rust","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"#[rustc_unsafe_specialization_marker]"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"#[rustc_diagnostic_item = \"Copy\"]"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"pub trait Copy: Clone {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    // Empty."}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}]]}]}]}],"\n",["$","p",null,{"children":["We can step back and have the code (without trait on the struct). Then, we realize the code does not comply with the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"borrow of moved value"}]}]}]}],"."]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"rust","data-theme":"github-light","children":["$","code",null,{"data-language":"rust","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"struct Test {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    x: u32"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}],"\n",["$","span",null,{"data-line":"","children":" "}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"fn main() {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    let t = Test {x:1};"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    let new_test = t;"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"t_param: {:p}\", &t);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"new_test: {:p}\", &new_test);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}]]}]}]}],"\n",["$","p",null,{"children":["Adding ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"#[derive(Copy, Clone)]"}]}]}]}]," makes the compiler happy. Once again, the reason is that we are moving from ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t"}]}]}]}]," to ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"new_test"}]}]}]}],", which does a copy."]}],"\n",["$","p",null,{"children":"The output is with two different addresses:"}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"plaintext","data-theme":"github-light","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param: 0x7ffda950bdb0"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"new_test: 0x7ffda950bdb4"}]}]]}]}]}],"\n",["$","h1",null,{"children":"Reference a.k.a. borrowing"}],"\n",["$","p",null,{"children":["Sometimes, you may want to pass more than one variable without making copies. For example, you are giving a reference, or in the Rust's lingo, is to borrow, which cause an alias to the source of truth. However, there are some additional rules. For example, borrowing into a mutable variable with ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"&mut"}]}]}]}]," is only possible once per scope, a.k.a. lifetime. So, for example, you can ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"&mut"}]}]}]}]," in a function once and do it again in another function."]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"rust","data-theme":"github-light","children":["$","code",null,{"data-language":"rust","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"#[derive(Copy, Clone)]"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"struct Test {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    x: u32"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}],"\n",["$","span",null,{"data-line":"","children":" "}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"fn main() {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    let mut t = Test {x:1};"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"t_param: {}\", t.x);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"t_param: {:p}\", &t);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    display(&mut t);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"t_param: {}\", t.x);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"t_param: {:p}\", &t);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}],"\n",["$","span",null,{"data-line":"","children":" "}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"fn display(new_test: &mut Test){"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    new_test.x = 1000;"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"Function x value: {}\", new_test.x);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    println!(\"Function struct ref address: {:p}\", new_test);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}]]}]}]}],"\n",["$","p",null,{"children":"In this example, the output of add the addresses is the same:"}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"sh","data-theme":"github-light","children":["$","code",null,{"data-language":"sh","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param: 1"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param: 0x7ffc5187bd64"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"Function x value: 1000"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"Function struct ref address: 0x7ffc5187bd64"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param: 1000"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"t_param: 0x7ffc5187bd64"}]}]]}]}]}],"\n",["$","p",null,{"children":["The function shows that the reference address is the same as the original struct with ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"0x7ffc5187bd64"}]}]}]}],"."]}],"\n",["$","h1",null,{"children":"Conclusion"}],"\n",["$","p",null,{"children":["Clippy was right! There was no need to call explicitly ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":".clone()"}]}]}]}]," because the structure is getting cloned automatically."]}]]]}]]}],["$","div",null,{"className":"layout_paginationBar__jnuuR","children":[["$","div",null,{"className":"layout_paginationTitle__PsOw5","children":"Chronological Blog Articles by Page"}],["$","div",null,{"className":"layout_paginationLinks__LdBaH","children":[["$","$L7","1",{"className":"","href":"/blog/page/1","children":1}],["$","$L7","2",{"className":"","href":"/blog/page/2","children":2}],["$","$L7","3",{"className":"","href":"/blog/page/3","children":3}],["$","$L7","4",{"className":"","href":"/blog/page/4","children":4}],["$","$L7","5",{"className":"","href":"/blog/page/5","children":5}],["$","$L7","6",{"className":"","href":"/blog/page/6","children":6}],["$","$L7","7",{"className":"","href":"/blog/page/7","children":7}],["$","$L7","8",{"className":"","href":"/blog/page/8","children":8}],["$","$L7","9",{"className":"","href":"/blog/page/9","children":9}],["$","$L7","10",{"className":"","href":"/blog/page/10","children":10}],["$","$L7","11",{"className":"","href":"/blog/page/11","children":11}],["$","$L7","12",{"className":"","href":"/blog/page/12","children":12}],["$","$L7","13",{"className":"","href":"/blog/page/13","children":13}],["$","$L7","14",{"className":"","href":"/blog/page/14","children":14}],["$","$L7","15",{"className":"","href":"/blog/page/15","children":15}],["$","$L7","16",{"className":"","href":"/blog/page/16","children":16}],["$","$L7","17",{"className":"","href":"/blog/page/17","children":17}],["$","$L7","18",{"className":"","href":"/blog/page/18","children":18}],["$","$L7","19",{"className":"","href":"/blog/page/19","children":19}],["$","$L7","20",{"className":"","href":"/blog/page/20","children":20}],["$","$L7","21",{"className":"","href":"/blog/page/21","children":21}],["$","$L7","22",{"className":"","href":"/blog/page/22","children":22}],["$","$L7","23",{"className":"","href":"/blog/page/23","children":23}],["$","$L7","24",{"className":"","href":"/blog/page/24","children":24}],["$","$L7","25",{"className":"","href":"/blog/page/25","children":25}],["$","$L7","26",{"className":"","href":"/blog/page/26","children":26}],["$","$L7","27",{"className":"","href":"/blog/page/27","children":27}],["$","$L7","28",{"className":"","href":"/blog/page/28","children":28}],["$","$L7","29",{"className":"","href":"/blog/page/29","children":29}],["$","$L7","30",{"className":"","href":"/blog/page/30","children":30}],["$","$L7","31",{"className":"","href":"/blog/page/31","children":31}],["$","$L7","32",{"className":"","href":"/blog/page/32","children":32}],["$","$L7","33",{"className":"","href":"/blog/page/33","children":33}],["$","$L7","34",{"className":"","href":"/blog/page/34","children":34}],["$","$L7","35",{"className":"","href":"/blog/page/35","children":35}],["$","$L7","36",{"className":"","href":"/blog/page/36","children":36}],["$","$L7","37",{"className":"","href":"/blog/page/37","children":37}],["$","$L7","38",{"className":"","href":"/blog/page/38","children":38}],["$","$L7","39",{"className":"","href":"/blog/page/39","children":39}],["$","$L7","40",{"className":"","href":"/blog/page/40","children":40}],["$","$L7","41",{"className":"","href":"/blog/page/41","children":41}],["$","$L7","42",{"className":"","href":"/blog/page/42","children":42}],["$","$L7","43",{"className":"","href":"/blog/page/43","children":43}],["$","$L7","44",{"className":"","href":"/blog/page/44","children":44}],["$","$L7","45",{"className":"","href":"/blog/page/45","children":45}],["$","$L7","46",{"className":"","href":"/blog/page/46","children":46}],["$","$L7","47",{"className":"","href":"/blog/page/47","children":47}],["$","$L7","48",{"className":"","href":"/blog/page/48","children":48}],["$","$L7","49",{"className":"","href":"/blog/page/49","children":49}],["$","$L7","50",{"className":"","href":"/blog/page/50","children":50}],["$","$L7","51",{"className":"","href":"/blog/page/51","children":51}],["$","$L7","52",{"className":"","href":"/blog/page/52","children":52}],["$","$L7","53",{"className":"","href":"/blog/page/53","children":53}],["$","$L7","54",{"className":"","href":"/blog/page/54","children":54}],["$","$L7","55",{"className":"","href":"/blog/page/55","children":55}],["$","$L7","56",{"className":"","href":"/blog/page/56","children":56}],["$","$L7","57",{"className":"","href":"/blog/page/57","children":57}],["$","$L7","58",{"className":"","href":"/blog/page/58","children":58}],["$","$L7","59",{"className":"","href":"/blog/page/59","children":59}],["$","$L7","60",{"className":"","href":"/blog/page/60","children":60}],["$","$L7","61",{"className":"","href":"/blog/page/61","children":61}],["$","$L7","62",{"className":"","href":"/blog/page/62","children":62}],["$","$L7","63",{"className":"","href":"/blog/page/63","children":63}],["$","$L7","64",{"className":"","href":"/blog/page/64","children":64}],["$","$L7","65",{"className":"","href":"/blog/page/65","children":65}],["$","$L7","66",{"className":"","href":"/blog/page/66","children":66}],["$","$L7","67",{"className":"","href":"/blog/page/67","children":67}],["$","$L7","68",{"className":"","href":"/blog/page/68","children":68}],["$","$L7","69",{"className":"","href":"/blog/page/69","children":69}],["$","$L7","70",{"className":"","href":"/blog/page/70","children":70}],["$","$L7","71",{"className":"","href":"/blog/page/71","children":71}],["$","$L7","72",{"className":"","href":"/blog/page/72","children":72}],["$","$L7","73",{"className":"","href":"/blog/page/73","children":73}],["$","$L7","74",{"className":"","href":"/blog/page/74","children":74}],["$","$L7","75",{"className":"","href":"/blog/page/75","children":75}],["$","$L7","76",{"className":"","href":"/blog/page/76","children":76}],["$","$L7","77",{"className":"","href":"/blog/page/77","children":77}]]}]]}]]}]}]
