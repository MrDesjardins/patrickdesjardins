3:I[5613,[],""]
5:I[1778,[],""]
4:["slug","how-to-have-many-graphql-servers-with-apollo-client","d"]
0:["U9WHEHP9m9dAVmOepwIU5",[[["",{"children":["blog",{"children":[["slug","how-to-have-many-graphql-servers-with-apollo-client","d"],{"children":["__PAGE__?{\"slug\":\"how-to-have-many-graphql-servers-with-apollo-client\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["blog",{"children":[["slug","how-to-have-many-graphql-servers-with-apollo-client","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e917b4f00bcb2347.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","blog","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"en","children":[["$","head",null,{"children":[["$","title",null,{"children":"Patrick Desjardins Website and Blog"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1, shrink-to-fit=no"}]]}],["$","body",null,{"className":"layout_bodystyle__4ncsS","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f7004a68ac8d367c.css","precedence":"next","crossOrigin":""}]],"$L6"]]]]
7:I[5250,["674","static/chunks/674-a46cce5ee161a346.js","308","static/chunks/app/blog/%5Bslug%5D/page-e23445258eb56deb.js"],""]
8:I[1749,["674","static/chunks/674-a46cce5ee161a346.js","308","static/chunks/app/blog/%5Bslug%5D/page-e23445258eb56deb.js"],"Image"]
6:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","meta","2",{"name":"next-size-adjust"}]]
1:null
2:["$","div",null,{"className":"__className_aaf875","children":["$","div",null,{"className":"layout_container__Tovb9","children":[["$","header",null,{"className":"layout_siteTitle__k5U8g","children":"Patrick Desjardins Blog"}],["$","nav",null,{"children":["$","ul",null,{"className":"layout_navLinks__mf70r","children":["$","li",null,{"className":"layout_navLinkItem__1L8fB","children":[["$","$L7",null,{"className":"layout_navLinkText__bt28R","href":"/","children":"Main Page"}],["$","$L7",null,{"className":"layout_navLinkText__bt28R","href":"/blog","children":"Blog"}],[["$","$L7","2024",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2024","children":2024}],["$","$L7","2023",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2023","children":2023}],["$","$L7","2022",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2022","children":2022}],["$","$L7","2021",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2021","children":2021}],["$","$L7","2020",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2020","children":2020}],["$","$L7","2019",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2019","children":2019}],["$","$L7","2018",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2018","children":2018}],["$","$L7","2017",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2017","children":2017}],["$","$L7","2016",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2016","children":2016}],["$","$L7","2015",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2015","children":2015}],["$","$L7","2014",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2014","children":2014}],["$","$L7","2013",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2013","children":2013}],["$","$L7","2012",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2012","children":2012}],["$","$L7","2011",{"className":"layout_navLinkText__bt28R","href":"/blog/for/2011","children":2011}]]]}]}]}],["$","div",null,{"children":["$","$L8",null,{"className":"layout_blogTopPicture__RJHNN","alt":"Patrick Desjardins picture from a conference","src":"/images/backgrounds/patrickdesjardins_conference_bw.jpeg","width":1000,"height":300}]}],["$","main",null,{"className":"layout_main__mXTwS","children":[["$","h1",null,{"children":"How to have many GraphQL server with Apollo Client?"}],["$","div",null,{"className":"layout_blogPostContainer__WYELx","children":[["$","p",null,{"className":"layout_blogPostDate__LUvx5","children":["Posted on: ","2023-02-09"]}],[["$","h1",null,{"children":"Introduction"}],"\n",["$","p",null,{"children":"Apollo client and React are two popular libraries and an excellent combination for fetching GraphQL data from a server into a web application. The well-documented approach is to use the Apollo Client and then the Apollo React Context."}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"tsx","data-theme":"github-light","children":["$","code",null,{"data-language":"tsx","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"const client = new ApolloClient({"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  uri: \"//yourgraphqlserver_1/graphql\","}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  cache: new InMemoryCache(),"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"});"}]}],"\n",["$","span",null,{"data-line":"","children":" "}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"// Snip"}]}],"\n",["$","span",null,{"data-line":"","children":" "}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"root.render("}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  <ApolloProvider client={client}>"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    <App />"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  </ApolloProvider>"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":");"}]}]]}]}]}],"\n",["$","p",null,{"children":["Once you have the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"ApolloProvider"}]}]}]}]," in your component tree, anything inside the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"App"}]}]}]}]," can access the client using the React Hook ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"useQuery"}]}]}]}]," or ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"useMutation"}]}]}]}]," (or other hooks like useSubscription, etc). The idea is simple, effective, and works well until you need to communicate with two distinct GraphQL servers."]}],"\n",["$","h1",null,{"children":"Many GraphQL and React Apollo Client"}],"\n",["$","p",null,{"children":"Many solutions exist. For example, you can shift your GraphQL architecture to a Federation server. However, this is a vast undertaking and requires that the two GraphQL servers have something in common to stitch data from one graph to the other. If you have a handful of servers, it is not worth it. Even less worth it if there is no overlap or relation between the data."}],"\n",["$","p",null,{"children":["Unfortunately, you cannot define more than one ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"ApolloProvider"}]}]}]}]," on the client-side library. At runtime, you will stumble to an exception. It makes sense to have all the hooks read to the client. Having several providers would need to be clearer for the hook to decide which client to connect without incrementing the complexity of each hook with some further knowledge on which client to connect. Ultimately, it does not work out of the box -- we need another solution."]}],"\n",["$","h1",null,{"children":"How to Configure React Apollo Client to Communicate to Many GraphQL server?"}],"\n",["$","p",null,{"children":["The solution is within the ApolloClient object. The ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"uri"}]}]}]}]," must be dynamic. Instead of defining a hardcoded ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"uri"}]}]}]}],", you define a function. On each call, the function will be called."]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"ts","data-theme":"github-light","children":["$","code",null,{"data-language":"ts","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"const client = new ApolloClient({"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  ...: getGraphQLServerURI(),"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  cache: new InMemoryCache(),"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"});"}]}]]}]}]}],"\n",["$","p",null,{"children":["The function to determine which GraphQL server is up to you, but I found an excellent way to keep it simple: operation name. The idea is to rely on prefixes. For example, if you have two GraphQL servers, one for your CRM and one for your Orders. You can have a rule that if an operation starts with ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"CRM_"}]}]}]}]," that it connects to the CRM GraphQL and if it begins with ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"ORDERS_"}]}]}]}]," that it goes to the other GraphQL server."]}],"\n",["$","p",null,{"children":["A challenge is to get the operation name to the function. I did not set the function to a specific property in the previous code snippet. The reason is that instead of using the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"uri"}]}]}]}]," property, we will rely on the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"link"}]}]}]}]," property, which is dynamic with more options to read to extract the operation name."]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"ts","data-theme":"github-light","children":["$","code",null,{"data-language":"ts","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"const client = new ApolloClient({"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  link: getGraphQLServerlink()"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  cache: new InMemoryCache(),"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"});"}]}]]}]}]}],"\n",["$","p",null,{"children":["Then, the function can return an ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"ApolloLink"}]}]}]}]," instead of a string."]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"ts","data-theme":"github-light","children":["$","code",null,{"data-language":"ts","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"export function getGraphQLServerURI(): ApolloLink {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  // Snip"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}]]}]}]}],"\n",["$","p",null,{"children":["The function can use the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"createHttpLink"}]}]}]}]," that the Apollo library has to craft the Link."]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"ts","data-theme":"github-light","children":["$","code",null,{"data-language":"ts","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"import { ApolloLink, createHttpLink } from \"@apollo/client\";"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"export function getGraphQLServerURI(): ApolloLink {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  return createHttpLink({"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    // Snip"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  });"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}]]}]}]}],"\n",["$","p",null,{"children":["The object you need to pass to the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"createHttpLink"}]}]}]}]," is the one that determines how and where to perform the HTTP request. The \"how\" is interesting because we will override the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"fetch"}]}]}]}]," method to achieve the POST request. It looks like a more significant task than it is."]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"ts","data-theme":"github-light","children":["$","code",null,{"data-language":"ts","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"import { ApolloLink, createHttpLink } from \"@apollo/client\";"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"export function getGraphQLServerURI(): ApolloLink {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  return createHttpLink({"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    fetch: (input: RequestInfo | URL, options?: RequestInit) => {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"      return fetch(input);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    },"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    credentials: \"same-origin\","}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  });"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}]]}]}]}],"\n",["$","p",null,{"children":["In the code above, we are creating the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"ApolloLink"}]}]}]}]," but performing no logic; we are passing through the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"input"}]}]}]}]," without manipulating the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"uri"}]}]}]}],". However, it solves the \"how\". Now, let's define \"where\" to fetch the data among our GraphQL server. First, we need to read the request to get the body which contains several elements like the query, the variables, and the operation name."]}],"\n",["$","figure",null,{"data-rehype-pretty-code-figure":"","children":["$","pre",null,{"style":{"backgroundColor":"#fff","color":"#24292e"},"tabIndex":"0","data-language":"plaintext","data-theme":"github-light","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"display":"grid"},"children":[["$","span",null,{"data-line":"","children":["$","span",null,{"children":"import { ApolloLink, createHttpLink } from \"@apollo/client\";"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"export function getGraphQLServerURI(): ApolloLink {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  return createHttpLink({"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    fetch: (input: RequestInfo | URL, options?: RequestInit) => {"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"      if(options === undefined){"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"        return fetch(input);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"      }"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"      else{"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"        const {operationName} = JSON.parse(options.body) as {operationName:string};"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"        const uri = operationName.startsWith(\"CRM_\") ? \"//crm_graphql.com/graphql\" : \"//ordersserver.net/graphql\";"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"        return fetch(uri, options);"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"      }"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    },"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"    credentials: \"same-origin\","}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"  });"}]}],"\n",["$","span",null,{"data-line":"","children":["$","span",null,{"children":"}"}]}]]}]}]}],"\n",["$","p",null,{"children":["The ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"fetch"}]}]}]}]," function has two conditions: one if the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"options"}]}]}]}]," is ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"undefined"}]}]}]}]," and one with all the options. The options are required to extract the operation name. The condition uses the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"options"}]}]}]}]," argument to extract the whole GraphQL POST request as a ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"string"}]}]}]}]," into an object to get the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"operationName"}]}]}]}]," value. Then, a quick check and we return one or the other server."]}],"\n",["$","h1",null,{"children":"Conclusion"}],"\n",["$","p",null,{"children":["The Apollo Client offers a flexible way to manage your source of information. It might not be as apparent as a direct function to specify into the ",["$","span",null,{"data-rehype-pretty-code-figure":"","children":["$","code",null,{"data-language":"plaintext","data-theme":"github-light","style":{"backgroundColor":"#fff","color":"#24292e"},"children":["$","span",null,{"data-line":"","children":["$","span",null,{"children":"ApolloClient,"}]}]}]}]," but the link approach is not too much work once you know where to look. The cost is to prefix your operation. Overall, I found the approach clean. Not only does it forces us to define a meaningful name for all GraphQL queries, but it also enhances debugging with a named operation. Also, on the GraphQL server, it opens the door for better telemetry with information for each operation."]}],"\n",["$","p",null,{"children":"On the client side, you have a collection of queries, mutations, and subscriptions that are well-named. Auto-generating your TypeScript also limits the risk of name collision (for your queries/mutations/subscriptions) between different servers."}]]]}]]}],["$","div",null,{"className":"layout_paginationBar__jnuuR","children":[["$","div",null,{"className":"layout_paginationTitle__PsOw5","children":"Chronological Blog Articles by Page"}],["$","div",null,{"className":"layout_paginationLinks__LdBaH","children":[["$","$L7","1",{"className":"","href":"/blog/page/1","children":1}],["$","$L7","2",{"className":"","href":"/blog/page/2","children":2}],["$","$L7","3",{"className":"","href":"/blog/page/3","children":3}],["$","$L7","4",{"className":"","href":"/blog/page/4","children":4}],["$","$L7","5",{"className":"","href":"/blog/page/5","children":5}],["$","$L7","6",{"className":"","href":"/blog/page/6","children":6}],["$","$L7","7",{"className":"","href":"/blog/page/7","children":7}],["$","$L7","8",{"className":"","href":"/blog/page/8","children":8}],["$","$L7","9",{"className":"","href":"/blog/page/9","children":9}],["$","$L7","10",{"className":"","href":"/blog/page/10","children":10}],["$","$L7","11",{"className":"","href":"/blog/page/11","children":11}],["$","$L7","12",{"className":"","href":"/blog/page/12","children":12}],["$","$L7","13",{"className":"","href":"/blog/page/13","children":13}],["$","$L7","14",{"className":"","href":"/blog/page/14","children":14}],["$","$L7","15",{"className":"","href":"/blog/page/15","children":15}],["$","$L7","16",{"className":"","href":"/blog/page/16","children":16}],["$","$L7","17",{"className":"","href":"/blog/page/17","children":17}],["$","$L7","18",{"className":"","href":"/blog/page/18","children":18}],["$","$L7","19",{"className":"","href":"/blog/page/19","children":19}],["$","$L7","20",{"className":"","href":"/blog/page/20","children":20}],["$","$L7","21",{"className":"","href":"/blog/page/21","children":21}],["$","$L7","22",{"className":"","href":"/blog/page/22","children":22}],["$","$L7","23",{"className":"","href":"/blog/page/23","children":23}],["$","$L7","24",{"className":"","href":"/blog/page/24","children":24}],["$","$L7","25",{"className":"","href":"/blog/page/25","children":25}],["$","$L7","26",{"className":"","href":"/blog/page/26","children":26}],["$","$L7","27",{"className":"","href":"/blog/page/27","children":27}],["$","$L7","28",{"className":"","href":"/blog/page/28","children":28}],["$","$L7","29",{"className":"","href":"/blog/page/29","children":29}],["$","$L7","30",{"className":"","href":"/blog/page/30","children":30}],["$","$L7","31",{"className":"","href":"/blog/page/31","children":31}],["$","$L7","32",{"className":"","href":"/blog/page/32","children":32}],["$","$L7","33",{"className":"","href":"/blog/page/33","children":33}],["$","$L7","34",{"className":"","href":"/blog/page/34","children":34}],["$","$L7","35",{"className":"","href":"/blog/page/35","children":35}],["$","$L7","36",{"className":"","href":"/blog/page/36","children":36}],["$","$L7","37",{"className":"","href":"/blog/page/37","children":37}],["$","$L7","38",{"className":"","href":"/blog/page/38","children":38}],["$","$L7","39",{"className":"","href":"/blog/page/39","children":39}],["$","$L7","40",{"className":"","href":"/blog/page/40","children":40}],["$","$L7","41",{"className":"","href":"/blog/page/41","children":41}],["$","$L7","42",{"className":"","href":"/blog/page/42","children":42}],["$","$L7","43",{"className":"","href":"/blog/page/43","children":43}],["$","$L7","44",{"className":"","href":"/blog/page/44","children":44}],["$","$L7","45",{"className":"","href":"/blog/page/45","children":45}],["$","$L7","46",{"className":"","href":"/blog/page/46","children":46}],["$","$L7","47",{"className":"","href":"/blog/page/47","children":47}],["$","$L7","48",{"className":"","href":"/blog/page/48","children":48}],["$","$L7","49",{"className":"","href":"/blog/page/49","children":49}],["$","$L7","50",{"className":"","href":"/blog/page/50","children":50}],["$","$L7","51",{"className":"","href":"/blog/page/51","children":51}],["$","$L7","52",{"className":"","href":"/blog/page/52","children":52}],["$","$L7","53",{"className":"","href":"/blog/page/53","children":53}],["$","$L7","54",{"className":"","href":"/blog/page/54","children":54}],["$","$L7","55",{"className":"","href":"/blog/page/55","children":55}],["$","$L7","56",{"className":"","href":"/blog/page/56","children":56}],["$","$L7","57",{"className":"","href":"/blog/page/57","children":57}],["$","$L7","58",{"className":"","href":"/blog/page/58","children":58}],["$","$L7","59",{"className":"","href":"/blog/page/59","children":59}],["$","$L7","60",{"className":"","href":"/blog/page/60","children":60}],["$","$L7","61",{"className":"","href":"/blog/page/61","children":61}],["$","$L7","62",{"className":"","href":"/blog/page/62","children":62}],["$","$L7","63",{"className":"","href":"/blog/page/63","children":63}],["$","$L7","64",{"className":"","href":"/blog/page/64","children":64}],["$","$L7","65",{"className":"","href":"/blog/page/65","children":65}],["$","$L7","66",{"className":"","href":"/blog/page/66","children":66}],["$","$L7","67",{"className":"","href":"/blog/page/67","children":67}],["$","$L7","68",{"className":"","href":"/blog/page/68","children":68}],["$","$L7","69",{"className":"","href":"/blog/page/69","children":69}],["$","$L7","70",{"className":"","href":"/blog/page/70","children":70}],["$","$L7","71",{"className":"","href":"/blog/page/71","children":71}],["$","$L7","72",{"className":"","href":"/blog/page/72","children":72}],["$","$L7","73",{"className":"","href":"/blog/page/73","children":73}],["$","$L7","74",{"className":"","href":"/blog/page/74","children":74}],["$","$L7","75",{"className":"","href":"/blog/page/75","children":75}],["$","$L7","76",{"className":"","href":"/blog/page/76","children":76}],["$","$L7","77",{"className":"","href":"/blog/page/77","children":77}]]}]]}]]}]}]
