{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/validation-failed-for-one-or-more-entities-see-entityvalidationerrors-property-for-more-details-2",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Validation failed for one or more entities. See 'EntityValidationErrors' property for more details.","date":"July 2, 2013"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Validation failed for one or more entities. See 'EntityValidationErrors' property for more details.\",\n  \"date\": \"2013-07-02\",\n  \"categories\": [\"entity-framework\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"With EF4.1, EF4.3 and EF5.0 you may have an Entity Validation Error and you may not found how to get the detail of the error. Entity Framework encapsulate the error into a class named DbEntityValidationException which is not casted in the debugger.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Validation failed for one or more entities. See 'EntityValidationErrors' property for more details.\")), mdx(\"p\", null, \"To be able to get the information, you can add to your Watch Panel (inside Visual Studio) or into the Immediate Panel or Quick Watch the following line when the error occur:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \" ((System.Data.Entity.Validation.DbEntityValidationException)$exception).EntityValidationErrors \\n\")), mdx(\"p\", null, \"From here, you will be able to get which entity is in error and what is the error. Data Annotation error or validation error will be clearly written inside the DbEntityValidationException.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"533d41e0-9e59-5982-a899-cf9c2d36e652","totalPages":70}},
    "staticQueryHashes": ["3159585216"]}