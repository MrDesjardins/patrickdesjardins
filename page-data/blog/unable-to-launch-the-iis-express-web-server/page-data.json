{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/unable-to-launch-the-iis-express-web-server",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Unable to launch the IIS Express Web server","date":"October 1, 2012"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Unable to launch the IIS Express Web server\",\n  \"date\": \"2012-10-01\",\n  \"categories\": [\"asp\", \"asp-mvc\", \"asp-net\", \"iis\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This morning, I started a new project where the team use IIS Express instead of Visual Studio Web Server or IIS. For me, it's new. Even if I have developed for several years with Visual Studio, I always used Visual Studio Web Server (Cassini) or the full IIS.\"), mdx(\"p\", null, \"The install of IIS Express is quite simple with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Microsoft Web Platform Installer\"), \" and can be easily configured by Visual Studio (in the property window of the project) and from the configuration file inside the IISExpress folder of your My Document.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Unable to launch the IIS Express Web server\")), mdx(\"p\", null, \"This happened when the project was launch. After checking if the port was blocked, check if projects were correctly compiled, I decided to remove IIS Express completly. I have to say that IIS 7.5 was installed and once the problem occured that I tried to install 8.0 over it. So, everything got uninstalled and I installed everything from scratch. I also did not use my team mate configuration file (which were edited to point to the correct path). I also installed directly IIS Express 8.0 and decided to let Visual Studio on the first launch to create the Virtual Directory with a new configuration file. From there, everything worked.\"), mdx(\"p\", null, \"I suggest you to start uninstalling everything, remove the configuration file from you My Document folder, re-install and let Visual Studio on the first launch create everything.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"eccdd503-640e-5887-9ebc-9d30c643ea7f","totalPages":76}},
    "staticQueryHashes": ["3159585216"]}