{
    "componentChunkName": "component---src-templates-blogs-by-page-tsx",
    "path": "/blog/page/2",
    "result": {"data":{"allMdx":{"nodes":[{"frontmatter":{"date":"March 18, 2022","title":"SolidJS: CreateEffect without Triggering Initialization","categories":["solidjs","typescript"]},"id":"fc6441e4-d5ff-584e-913e-b6a38de563c0","fields":{"slug":"/blog/solidjs-effect-reaction-initialization"}},{"frontmatter":{"date":"March 15, 2022","title":"How to have MP4 video in your GatsbyJS Blog MDX file","categories":["gatsby","github","ci","continuous integration"]},"id":"89cf9ae2-fb1e-5ad3-973a-785fd4100a63","fields":{"slug":"/blog/gatsbyjs-mdx-video-mp4-support"}},{"frontmatter":{"date":"March 10, 2022","title":"SolidJS: How to Execute Code When UnMounting or when an Effect Ends","categories":["solidjs","typescript"]},"id":"c63b7109-6faf-5ef7-9ced-23a95b987f62","fields":{"slug":"/blog/solidjs-cleanup"}},{"frontmatter":{"date":"March 7, 2022","title":"SolidJS: How to React on Property Change","categories":["solidjs","typescript"]},"id":"5bbbd5aa-7fce-5e0c-a8fc-cfbbb60a061d","fields":{"slug":"/blog/solidjs-react-on-props-change"}},{"frontmatter":{"date":"March 3, 2022","title":"SolidJS First Try Review","categories":["solidjs","typescript"]},"id":"f110fc1d-ef55-5311-a9bb-d63f82e90309","fields":{"slug":"/blog/solidjs-first-try-review"}},{"frontmatter":{"date":"February 24, 2022","title":"A Safe Way to Define Immutable Default Values in TypeScript","categories":["typescript"]},"id":"c6ce597f-034c-5f7a-8a87-e97e40f86926","fields":{"slug":"/blog/typescript-immutable-default-values"}},{"frontmatter":{"date":"February 21, 2022","title":"How to type your React Children Property in TypeScript","categories":["typescript"]},"id":"ebcb2929-b0cb-53a1-92ac-f596ec401d8c","fields":{"slug":"/blog/typescript-react-children-types"}},{"frontmatter":{"date":"February 15, 2022","title":"TypeScript ImportHelpers Compiler Options","categories":["typescript"]},"id":"b926c339-aa76-56ef-a9bc-e4df2cfc608c","fields":{"slug":"/blog/typescript-compiler-option-helpers"}},{"frontmatter":{"date":"February 11, 2022","title":"TypeScript Class Override Keyword Increase Maintainability","categories":["typescript"]},"id":"166cea0d-041e-529d-80ea-88a8aa5de4b8","fields":{"slug":"/blog/typescript-override-keyword"}},{"frontmatter":{"date":"February 4, 2022","title":"TypeScript Ergonomic Brand Checks","categories":["typescript"]},"id":"4e509ac4-314d-5bf7-a9ee-50d3de9e86d0","fields":{"slug":"/blog/typescript-ergonomic-brand-checks"}}]}},"pageContext":{"limit":10,"skip":10,"currentPage":2,"totalPages":72,"currentDate":"2022-06-14"}},
    "staticQueryHashes": ["3159585216"]}