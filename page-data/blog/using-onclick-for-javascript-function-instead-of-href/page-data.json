{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/using-onclick-for-javascript-function-instead-of-href",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Using onclick for Javascript function instead of href","date":"May 17, 2012"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Using onclick for Javascript function instead of href\",\n  \"date\": \"2012-05-17\",\n  \"categories\": [\"javascript\", \"web\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Many people will use Javascript function call directly into the href attribute of the link tag when they want to execute Javascript. This let them execute Javascript without having to have the fallback of having the browser scrolling to the top. The problem with this method, other than having client script into an attribute which is been created for anchor link and external link is that it displays the Javascript code in the status bar of the browser. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \" <a href='javascript:MyFunction(1,2,3)'>Click me</a> \\n\")), mdx(\"p\", null, \"To avoid this kind of behavior, which is not very clean, is to simply use the onclick attribut which is dedicated to receive Javascript's call. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<a href='#' onclick=\\\"MyFunction(1,2,3);return false;\\\">Click me</a> \\n\")), mdx(\"p\", null, \"As you can see, the onclick contain also a second Javascript's statement which indicate the to the browser to not execute the link in the href attribute (the hash tag). This will prevent the browser to scroll up. In fact, you could specify a page to go if something goes wrong with the Javascript or if the user doesn't have Javascript enable. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<a href='fallbackpage.html' onclick=\\\"MyFunction(1,2,3);return false;\\\">Click me</a> \\n\")), mdx(\"p\", null, \"In that case, if Javascript is disable, the user will be redirected to the \\\"fallbackpage.html\\\".\"), mdx(\"p\", null, \"You can also not systematic use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"return false\"), \" and simply use directly the return of your function. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \" <a href='nextpage.aspx' onclick=\\\"return MyFunction(1,2,3);\\\">Click me</a> \\n\")), mdx(\"p\", null, \"In that case, this will call the MyFunction fonction and if the result is false will do nothing with the navigation and if true will move the user to \\\"nextpage.aspx\\\". This can be interesting in a scenario where you need to have to confirm something with the user or if you need to validate data before moving to the next step.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"b73b3d30-c669-5f2d-9a63-ec2f0d61712b","totalPages":76}},
    "staticQueryHashes": ["3159585216"]}