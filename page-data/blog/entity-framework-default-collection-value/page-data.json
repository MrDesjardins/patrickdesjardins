{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/entity-framework-default-collection-value",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Entity Framework Default Collection Value","date":"June 17, 2014"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Entity Framework Default Collection Value\",\n  \"date\": \"2014-06-17\",\n  \"categories\": [\"entity-framework\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you have a class that has collections, the default value of these collections are NULL when you Entity is loaded by Entity Framework. If you are using Lazy Loading, than these properties are virtual. It is not recommended to initialize the collection in the constructor if these are virtual. Not because it is Entity Framework but because initializing a property that is virtual is never a good practice in .Net. The reason is beyond the scope of this article but just keep in mind that even if it is initialized by the constructor, the class that inherit your class may still use the property before it is initialized which could cause an exception.\"), mdx(\"p\", null, \"Still, if you are using Entity Framework without Lazy Loading, your properties should not be virtual and by default, these collections must be initialized otherwise, a NULL value is returned.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"fa776ada-7df4-55d0-843b-78ae9e96071a","totalPages":71}},
    "staticQueryHashes": ["3159585216"]}