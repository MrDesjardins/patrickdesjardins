{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/javascript-insertion-sort",
    "result": {"data":{"mdx":{"frontmatter":{"title":"JavaScript Insertion Sort","date":"July 12, 2017"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"JavaScript Insertion Sort\",\n  \"date\": \"2017-07-12\",\n  \"categories\": [\"javascript\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Insertion sort name is confusing. It won't swap in the same manner that the bubble sort or the selection sort did, however, it won't insert new element in the array neither. It will save the value to position in a variable and go down the array to find the proper place to swap the value. During the progress of going down the array, many swapping can occur.\"), mdx(\"p\", null, \"The idea is : Position at the beginning of the array by moving previous value up and finally swap once reach the correct spot.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"function insertionSort(arrayToSort) {\\n  var key;\\n  var length = arrayToSort.length;\\n  for (var i = 1; i < length; i++) {\\n    key = arrayToSort[i];\\n    var j = i - 1;\\n    while (j >= 0 && arrayToSort[j] > key) {\\n      arrayToSort[j + 1] = arrayToSort[j];\\n      j = j - 1;\\n    }\\n    arrayToSort[j + 1] = key;\\n  }\\n}\\n\")), mdx(\"p\", null, \"Insertion sort is O(n^2) with its double imbricated loop.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"cb889d5e-6c51-5f44-ba88-4e4720cfdf4e","totalPages":68}},
    "staticQueryHashes": ["3159585216"]}