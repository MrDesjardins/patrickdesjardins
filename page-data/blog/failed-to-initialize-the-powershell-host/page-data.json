{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/failed-to-initialize-the-powershell-host",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Failed to initialize the PowerShell host","date":"April 24, 2014"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"During the migration of Entity Framework to 6.1.0 I received an error about PowerShell host that failed to initialized.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Adding 'EntityFramework 6.1.0' to BusinessLogicUnitTest. Successfully added 'EntityFramework 6.1.0' to BusinessLogicUnitTest. Executing script file 'C:\", \"\\\\\", \"Users\", \"\\\\\", \"Patrick\", \"\\\\\", \"Documents\", \"\\\\\", \"TFS\", \"\\\\\", \"BourseVirtuelle\", \"\\\\\", \"Code\", \"\\\\\", \"BourseVirtuelle\", \"\\\\\", \"packages\", \"\\\\\", \"EntityFramework.6.1.0\", \"\\\\\", \"tools\", \"\\\\\", \"install.ps1'. Failed to initialize the PowerShell host. If your PowerShell execution policy setting is set to AllSigned, open the Package Manager Console to initialize the host first.\")), mdx(\"p\", null, \"The problem was the system has it \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"executions policy to restrictive\"), \". One way to fix the problem is to open a PowerShell console as administrator and to set the execution policy to unrestricted.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" Set-ExecutionPolicy Unrestricted \\n```  ![](images/PowerShellSetExecutionPolicy-400x160.png)\\n\\nFrom there, open again Visual Studio 2013 and open the **Package Manager Console**. This was also required before using Nuget to update Entity Framework. Opening the Package Manager Console seem to execute a Power Shell script named **Profile.ps1** located in your Program Files folder.\\n\\n\")), mdx(\"p\", null, \" C:\", \"\\\\\", \"Program Files (x86)\", \"\\\\\", \"Microsoft Visual Studio 12.0\", \"\\\\\", \"Common7\", \"\\\\\", \"IDE\", \"\\\\\", \"Extensions\", \"\\\\\", \"b331wcwx.fbh\", \"\\\\\", \"Modules\", \"\\\\\", \"NuGet\", \"\\\\\", \"Profile.ps1 \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"\\n\\nexport const _frontmatter = {\\\"title\\\":\\\"Failed to initialize the PowerShell host\\\",\\\"date\\\":\\\"2014-04-24\\\",\\\"categories\\\":[\\\"asp-mvc\\\",\\\"entity-framework\\\"]}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"f2b0e402-10f3-5ade-84c9-4616980d34f1","totalPages":70}},
    "staticQueryHashes": ["3159585216"]}