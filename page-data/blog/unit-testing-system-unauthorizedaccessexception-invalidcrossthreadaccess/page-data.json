{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/unit-testing-system-unauthorizedaccessexception-invalidcrossthreadaccess",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Unit testing  System.UnauthorizedAccessException: [InvalidCrossThreadAccess]","date":"December 22, 2011"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Unit testing  System.UnauthorizedAccessException: [InvalidCrossThreadAccess]\",\n  \"date\": \"2011-12-22\",\n  \"categories\": [\"c-sharp\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When unit testing you can get this kind of error if you try to use a class that use different thread of the main one.\"), mdx(\"p\", null, \"At first, I haven't realized that I were using another thread because I was testing my Shape class. After some minutes, I realized that I were using the System.Windows.Shape and not mine... once the reference set correctly I were able to remove this error and have my test working.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Test method UT.ShapeTest.CreateNewShape threw exception: System.UnauthorizedAccessException: \", \"[InvalidCrossThreadAccess]\", \" Arguments: ...\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"96016e53-247c-50a5-80d8-019f27818068","totalPages":71}},
    "staticQueryHashes": ["3159585216"]}