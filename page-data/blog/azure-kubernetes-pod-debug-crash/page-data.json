{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/azure-kubernetes-pod-debug-crash",
    "result": {"data":{"mdx":{"frontmatter":{"title":"How to Debug a Kubernetes Pod that Crash at Startup (works on Microsoft Azure Kubernetes)?","date":"September 7, 2022"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to Debug a Kubernetes Pod that Crash at Startup (works on Microsoft Azure Kubernetes)?\",\n  \"date\": \"2022-09-07\",\n  \"categories\": [\"azure\", \"container\", \"kubernetes\", \"pod\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I had a pod that worked well on my machine but was not once deployed on Azure Kubernetes. It was constantly rebooting with the status \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CrashLoopBackOff\"), \". It was impossible to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"kubectl exec -it\"), \" on the ill pod: it was always closing and restarting.\"), mdx(\"p\", null, \"However, there is a trick that is not perfect but might help you. The idea is to create another pod and have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"command\"), \" telling the pod to sleep.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"# Get all the pods: find the one that is crashing\\nkubectl get pods -n realtimepixel-prod\\n\\n# Take the name of the crashing pod and find the image\\nkubectl describe pod backend-deployment-576495d6f8-nk7rw -n realtimepixel-prod\\n\\n# Create a new pod from that image and make it sleep\\nkubectl run debug-demo -n realtimepixel-prod --image=realtimepixel.azurecr.io/realtimepixel_backend:8ee1dadc954c6217270aaea47fbb8118dd3f1170 --restart=Never --command sleep infinity\\n\\n# Debug\\nkubectl exec -it debug-demo -n realtimepixel-prod -- sh\\n\\n# Once done, delete the debug pod\\nkubectl delete pod debug-demo -n realtimepixel-prod\\n\")), mdx(\"p\", null, \"However, the pod does not have all the information from the Helm. In my case, it meant that environment variables were missing. But, you can pass them manually.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sh\"\n  }, \"kubectl run debug-demo -n realtimepixel-prod \\\\\\n--image=realtimepixel.azurecr.io/realtimepixel_backend:8ee1dadc954c6217270aaea47fbb8118dd3f1170 \\\\\\n--restart=Never \\\\\\n--command sleep infinity \\\\\\n--env=\\\"IP_BACKEND=backend-service\\\" \\\\\\n--env=\\\"OUTER_PORT_BACKEND=80\\\" \\\\\\n--env=\\\"IP_REDIS=redis-service\\\" \\\\\\n--env=\\\"OUTER_PORT_REDIS=6379\\\" \\\\\\n--env=\\\"IP_FRONTEND=frontend-service\\\" \\\\\\n--env=\\\"OUTER_PORT_FRONTEND=80\\\"\\n\")), mdx(\"p\", null, \"I hope it helps you debug your failing pod that keeps crashing at startup. I tested with Microsoft Azure Pod, and it worked flawlessly. I believe it would work on any provider, but always better to clarify under which environment I have tested the debug trick.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"1729273e-55fd-5516-8c64-35841854cee1","totalPages":75}},
    "staticQueryHashes": ["3159585216"]}