{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/how-with-jquery-to-disable-click-until-animation-done",
    "result": {"data":{"mdx":{"frontmatter":{"title":"How with JQuery to disable click until animation done","date":"January 21, 2013"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How with JQuery to disable click until animation done\",\n  \"date\": \"2013-01-21\",\n  \"categories\": [\"javascript\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You may want to animate something before doing an action and remove the possibility to the user the press again. This is often a desired behavior because it might broke the current animation or simply doing nothing which will lead the user in a false impression of bug.\"), mdx(\"p\", null, \"The solution is to disable the button (or link) during the animation.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"function clickFunction(obj) { //If animated than we wait the animation to be over if ($(':animated').length) { return false; }\\n\\nobj.animate({ //Animation here that is executed one but if clicked before //this one is over won't be reached }, 4000); } \\n\")), mdx(\"p\", null, \"The above code work with JQuery framework and check if the animated queue contain any element. If yes, the function called by the click return false and doesn't do anything. In fact, you could here write something to the screen if you want to inform the user that something is occurring and that he should wait.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"0b5d51c8-dbe8-552b-8a43-233ae10ed7f0","totalPages":68}},
    "staticQueryHashes": ["3159585216"]}