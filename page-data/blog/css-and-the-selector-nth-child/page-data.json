{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/css-and-the-selector-nth-child",
    "result": {"data":{"mdx":{"frontmatter":{"title":"CSS and the selector nth-child","date":"July 27, 2012"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CSS and the selector nth-child\",\n  \"date\": \"2012-07-27\",\n  \"categories\": [\"css\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You may want to have special style for specific position. Maybe you want to have the first division different or having every 3 rows something different.\"), mdx(\"p\", null, \"This can be done with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nth-child\"), \" selector of CSS.\"), mdx(\"p\", null, \"Let's start with a small example :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"ul>li:nth-child(3) { \\n  color: red; \\n} \\n\")), mdx(\"p\", null, \"This example takes the third \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"li\"), \" element that is directly under an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ul\"), \" element and make it's font color to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"red\"), \".\"), mdx(\"p\", null, \"The parameter, when specified with an integer, represent the position of the occurrence of the element. In the example above, 3 is specified, so the third element will be red.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nth-child\"), \" is power full because you can use the variable \\\"n\\\" to specify the index of the element.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \"ul>li:nth-child(2n+1) { \\n  background-color: red; \\n} \\n\")), mdx(\"p\", null, \"This second example of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nth-child\"), \" has \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2n+1\"), \" has parameter. That mean that it will start at the position 1 (every sequence start at 1 not 0) and 2n mean 2 multiply by the index. \"), mdx(\"p\", null, \"So if we have the following code:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\"\n  }, \"<ul> \\n  <li>n=0</li> \\n  <li>n=1</li> \\n  <li>n=2</li> \\n  <li>n=3</li> \\n  <li>n=4</li> \\n  <li>n=5</li> \\n</ul> \\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2n+1\"), \" will be for the first line: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2x0+1 = 1\"), \". \"), mdx(\"p\", null, \"So, the first \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"li\"), \" will have the style, the first one will be 1. Then we have \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"2x1+1 = 3\"), \". \"), mdx(\"p\", null, \"The second row won't have any style, the third one yes and so on.\"), mdx(\"p\", null, \"To conclude, you have to remember that n start at 0 but the first element is 1. As we have seen with the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ul\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"li\"), \" example, the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n=0\"), \" was coloured because \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"n=0+1 = one\"), \", which is the first \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"li\"), \" of the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ul\"), \" collection.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"2eda890e-33e6-5f87-ae14-2e72a66100a4","totalPages":77}},
    "staticQueryHashes": ["3159585216"]}