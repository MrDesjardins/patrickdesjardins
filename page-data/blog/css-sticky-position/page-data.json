{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/css-sticky-position",
    "result": {"data":{"mdx":{"frontmatter":{"title":"CSS Sticky Position","date":"March 29, 2017"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CSS Sticky Position\",\n  \"date\": \"2017-03-29\",\n  \"categories\": [\"css\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Before going any further, this is supposed by Chrome 56+ and not many browser yet. The actual Chrome stable version is 56, hence it should be used with a good fallback.\"), mdx(\"p\", null, \"Sticky position is a new CSS position that allow to have a sticky element that is not sticky all the time. This is different from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fixed\"), \" which place an HTML element in a place and never move. With position to sticky, you define a threshold where the element will change from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"relative\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"fixed\"), \".\"), mdx(\"p\", null, \"To illustrate, image a list that has a lot of element and once in a while you have title that you want to stick for the section. When scrolling, you want the title to unstick when you reach a new section. Every active section should have its own title fixed at the top. This can be achieved by JavaScript or now with Sticky. Here is a simple example of CSS that is applied to a class name \\\"list-header\\\" which should be used in each of section's title.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \" .list-header { \\n  position: sticky; \\n  top: 5px; \\n} \\n\")), mdx(\"p\", null, \"Every time the user scroll down, if the title reach the top by 5px (so not already touching the top but almost) the sticky get away until a new title reach the top. Normally, you want a very small number because otherwise, it will start getting sticky too early. In the example above, you would see a 5px game between the top of the title and the top of the container. A top of 1 or -1 would make more sense because the title would be almost flush to the top of the container.\"), mdx(\"p\", null, \"You can see an example (inspired by Mozilla's documentation) here : \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://codepen.io/mrdesjardins/pen/RpwLMy\"\n  }, \"https://codepen.io/mrdesjardins/pen/RpwLMy\"), \" which will produce this output:\"), mdx(\"p\", null, mdx(\"undefined\", {\n    parentName: \"p\"\n  }, \"\\n      \", mdx(\"div\", {\n    \"className\": \"gatsby-video-aspect-ratio\",\n    \"style\": {\n      \"position\": \"relative\",\n      \"display\": \"block\",\n      \"paddingTop\": \"54.90605427974948%\"\n    }\n  }, \"\\n    \", mdx(\"video\", {\n    parentName: \"div\",\n    \"preload\": \"\",\n    \"autoPlay\": true,\n    \"muted\": true,\n    \"loop\": true,\n    \"playsInline\": true,\n    \"style\": {\n      \"position\": \"absolute\",\n      \"top\": \"0\",\n      \"left\": \"0\",\n      \"width\": \"100%\",\n      \"height\": \"auto\"\n    }\n  }, \"\\n      \", mdx(\"source\", {\n    parentName: \"video\",\n    \"src\": \"/static/CssSticky-376c5aae14241712d3833a9b76dadbd4-01206.webm\",\n    \"type\": \"video/webm\"\n  }), mdx(\"source\", {\n    parentName: \"video\",\n    \"src\": \"/static/CssSticky-376c5aae14241712d3833a9b76dadbd4-50762.mp4\",\n    \"type\": \"video/mp4\"\n  }), \"\\n    \"), \"\\n    \"), \"\\n    \")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"6cf3f73b-7fad-510e-8b9f-9487e20ec9b0","totalPages":75}},
    "staticQueryHashes": ["3159585216"]}