{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/recruit-someone-in-90-minutes",
    "result": {"data":{"mdx":{"frontmatter":{"title":"How to Recruit An Employee in 90 minutes?","date":"February 17, 2023"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to Recruit An Employee in 90 minutes?\",\n  \"date\": \"2023-02-17\",\n  \"categories\": [\"general\", \"management\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"After many years and many different software companies, I concluded that spending a total of 90 minutes with one candidate gives the same result as the current trend of spending over 6 to 8h. Therefore, the current time format could be more effective, and the interview content needs to be geared toward the right goals.\"), mdx(\"h1\", null, \"Current Interview Content Issue\"), mdx(\"p\", null, \"Before diving into the specifics of the 90 minutes, we need to clarify the interview's content. The main reason the interview process with the software engineer is reaching 5-8 loops of 1h is that about 5 of these interviews are conducted to quiz the candidate's memory on specific patterns. Patterns that are rarely used in the actual job the candidate will join if successful. Many people spend many weeks and months practicing hundreds and thousands of questions on websites that the company cherry-picks. Similarly, 1-2 rounds are on system design in which only some people will participate from the beginning and have even less chance to be the sole leader in the architecture.\"), mdx(\"p\", null, \"While I am all about broad knowledge of optimizing algorithms and software designs, interviewing these topics could be better. Similarly with an interview that ask deep question about specific frameworks. Most people with real experience do not know the fine grain detail because they know how to reach it quickly when needed.\"), mdx(\"p\", null, \"If we were honest, most active employed software engineers, that are not actively practicing these software riddles would fail their colleague interviews. But, still, they can do great day-to-day jobs. Hence, the content format needs to give the right pulse about if you should hire someone or not.\"), mdx(\"p\", null, \"So, what should be the content? \"), mdx(\"h1\", null, \"Format\"), mdx(\"p\", null, \"To be efficient, we need to step back and acknowledge that hiring is hit or miss. Some people are good at interviews and bad at the job. Some are super smart but cannot produce enough output, etc. Thus, trying to hit perfection during 6-8h is rarely possible\\u2014same with 90 minutes. The difference is that with 90 minutes, you do not need to spend as much time and have your engineers continue to work on actual work and have the candidate focus on a more important matter.\"), mdx(\"p\", null, \"Instead, the format is to break the interview into two sessions of 45 minutes, each with two people in the room with the candidate.\"), mdx(\"h1\", null, \"Effective Content\"), mdx(\"p\", null, \"The content of both sessions is similar; you talk about what the candidate accomplished in the past. As the interviewer, you gather general information and then start digging about what the person especially did, how, and why. Then you ask questions about what could have been improved, what was good, and what was problematic. Then, you discuss problems within the team, etc. The idea is to get an overall picture of the person as a human being and professionally as a software engineer.\"), mdx(\"h1\", null, \"Team Success\"), mdx(\"p\", null, \"Your team and project success is a mix of technical knowledge and people's skills. Your roster needs to have someone very smart, but maybe you could be a better presenter. Someone super motivated by testing but less innovative. You may need someone who can produce a lot of output, but the quality may not always be there. A mix of individuals will result in a great product. The problem with current interview content is that it focuses on less essential aspects than we can believe. For example, it is easier to brush up on some algorithm skills than have someone change their personality to be more collaborative.\"), mdx(\"h1\", null, \"Time\"), mdx(\"p\", null, \"The 90 minutes is more than enough. I conducted one-hour interview process and a full-day interview as an interviewer. Surprisingly, the result was the same. Sometimes within the first 10 minutes, a clear sign that it will not work appears. For example, someone is arrogant or has a hard time giving details about projects in their resume.\"), mdx(\"p\", null, \"However, breaking the 90 minutes into two sessions, with two people on your team twice, gives enough coverage about finding the right fit for your team. You can easily detect some personality clashes, two people are too much alike, or it won't work if you experience the candidate with many people. Two at the same time allow people to take notes but also to have a more fluid, slightly informal discussion, allowing them to gather precious detail about how the person is in real life (not only in \\\"interview setup\\\"). Also, two people simultaneously allow not to have repetitive questions. That being said, it is good to have each squad of people focusing on different aspects. For example, one group can take 45 minutes to talk about the past, and the second one can talk about the current project they are working on and ask questions to the candidate about how they would act or do something.\"), mdx(\"h1\", null, \"Breaking Stigma\"), mdx(\"p\", null, \"There is a significant stigma in the United States and the software engineers community about \\\"past experience\\\" not being relevant. But experience is vital in many aspects of the success of your project. I often see people with less experience lacking common sense for design solutions and over-doing code, trying to achieve 100% coverage code, using too many abstractions (patterns), using the newest technologies, or simply lacking inter-personal skills like communications or to understand the perspective of others. A mix of junior and senior is needed to have different perspectives and during the interview, it is the time to peek at what value the candidate can bring to the table. Breaking this stigma is crucial to avoid quizzing people that have been developing for over ten years (or even 25 years!) about basic coding questions. Instead, slightly talk about what has changed in these years, what is better and worse, etc. You get so much more information by asking these open questions and can quickly grasp the validity of someone with how much enthusiasm and detail someone can provide in an unorganized interview.\"), mdx(\"h1\", null, \"Bad Hiring\"), mdx(\"p\", null, \"Bad hiring occurs with a seven-hour interview or with 90 minutes. In both cases, a fair trial of a few weeks should be enough to gauge someone. The ultimate test is working full-time with the person. If you feel a mismatch after 5 to 12 weeks, you can move the person internally to a better fit or let go. That part of the employee lifecycle is true regardless of the time invested in the interview.\"), mdx(\"h1\", null, \"Conclusion\"), mdx(\"p\", null, \"The full-day interview may stem from big corporations flying people worldwide to their physical offices. Maybe companies fear that if the interview process is too short that they will be be seen as serious company. Or maybe companies make it a full day to make it harder for people to interview at many places or discourage current employees from looking outside their job. Hard to say. However, if you are aiming for effectiveness, 90 minutes is more than enough to hire someone.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"15d6b2e1-d5a3-51f6-a042-a6772efda24e","totalPages":75}},
    "staticQueryHashes": ["3159585216"]}