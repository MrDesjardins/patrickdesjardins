{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/how-to-convert-entity-framework-that-use-file-database-to-server-database",
    "result": {"data":{"mdx":{"frontmatter":{"title":"How to convert Entity Framework that use file database to server database","date":"September 5, 2011"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to convert Entity Framework that use file database to server database\",\n  \"date\": \"2011-09-05\",\n  \"categories\": [\"entity-framework\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When using Entity Framework, this one create a copy of the database when generating from the database and create a .mdf for the project. This database is used. This is good for small project but once you want to use Sql Profiler or to use the real database, it's not.\"), mdx(\"p\", null, \"To do the switch, only one place need to be changed and it's the app.config or if you are in a web environment the web.config.\"), mdx(\"p\", null, \"Here is the generated connection string generated and after the modified one.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-xml\"\n  }, \"<add name=\\\"NorthWindContainer\\\" connectionString=\\\"metadata=res://*/FromNorthWind.csdl|res://*/FromNorthWind.ssdl|res://*/FromNorthWind.msl; provider=System.Data.SqlClient; provider connection string='Data Source=.\\\\\\\\SQLEXPRESS; AttachDbFilename=|DataDirectory|\\\\\\\\northwnd.mdf; Integrated Security=True; Connect Timeout=30; User Instance=True; MultipleActiveResultSets=True'\\\" providerName=\\\"System.Data.EntityClient\\\" /> \\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-xml\"\n  }, \"<add name=\\\"NorthWindContainer\\\" connectionString=\\\"metadata=res://*/FromNorthWind.csdl|res://*/FromNorthWind.ssdl|res://*/FromNorthWind.msl; provider=System.Data.SqlClient; provider connection string='Data Source=.\\\\\\\\SQLEXPRESS; Initial Catalog=Northwind; Integrated Security=True; Connection Timeout=60; multipleactiveresultsets=true'\\\" providerName=\\\"System.Data.EntityClient\\\" /> \\n\")), mdx(\"p\", null, \"This simple modification do the trick and you are ready to go.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"caf8fc0a-068c-5a2d-99f2-574aaca73c27","totalPages":74}},
    "staticQueryHashes": ["3159585216"]}