{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/how-to-rebase-your-working-branch-without-commit-your-working-files",
    "result": {"data":{"mdx":{"frontmatter":{"title":"How to Rebase your Working Branch Without Commit your Working Files","date":"December 4, 2014"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to Rebase your Working Branch Without Commit your Working Files\",\n  \"date\": \"2014-12-04\",\n  \"categories\": [\"git\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Let's start by building the scenario that you have two files that you want to share to everybody and one that is a configuration file that should not be shared. In some point in the development you want to get the latest version of the master branch into your feature branch. This require to you to do a merge or to rebase. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Merging\"), \" is interesting but will cause having in your feature branch all file becoming modified which will be hard later for the pull request. The reason is that you want to pull request only your modification and not the files that has been merged. This is where \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"rebase\"), \" can be interesting. The problem is that if you try to rebase you will get a message saying that you need to commit or stash or change first. This is comprehensive since when rebase you are moving the HEAD of your feature branch in the front of the master one. It needs to have a \\\"node\\\" to move. To do, you have to go into your feature branch, add all files you want to commit and commit. \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" git checkout Feature1 git add File1 git add File2 git rebase master \\n\")), mdx(\"p\", null, \"The last line will fail. The reason is that you still have the configuration file not commited, and you do not want to. This is where the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"stash\"), \" command shine. The git stash command allow you to put somewhere the remaining files that have change into a \\\"stash\\\" which will allow you later to get back (after the rebase). To execute the stash, you have to execute the stash command in the branch you want the files not staged to be stashed.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" git checkout Feature1 git stash git rebase master git stash pop \\n\")), mdx(\"p\", null, \"You should be all set with the latest version of the master branch and also your files back (the configuration file in our example).\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"db7af4f7-a6a9-52f2-9a2c-c1802a601203","totalPages":73}},
    "staticQueryHashes": ["3159585216"]}