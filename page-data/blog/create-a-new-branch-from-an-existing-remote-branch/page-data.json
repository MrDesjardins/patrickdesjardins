{
    "componentChunkName": "component---src-pages-blog-mdx-slug-tsx",
    "path": "/blog/create-a-new-branch-from-an-existing-remote-branch",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Create a new branch from an existing remote branch","date":"July 3, 2015"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Create a new branch from an existing remote branch\",\n  \"date\": \"2015-07-03\",\n  \"categories\": [\"git\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you want to quickly works on a new feature without affecting the team's branch or the master branch, you may want to create a specific branch for your work. This is also known as a topic branch. Here are the commands that I use.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" mkdir MyNewFeature cd MyNewFeature git init git clone -b teamBranch https://yourgit.git git checkout -b users/mrdesjardins/MyNewFeature git branch -u origin/teamBranch git push origin users/mrdesjardins/MyNewFeature \\n\")), mdx(\"p\", null, \"The first two lines create a new folder and move your position into it. This has nothing to do with Git. The next one \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"create a new local branch\"), \" with the specified existing remote branch of the remote server. At that moment, you have the same branch. You need to create a new local branch from that branch. This is done with checkout. Something interesting but not required is to \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"set the upstream\"), \". Setting the upstream allow to know if the branch you branched from has changed. This way you can synchronize (pull). The last line is \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"pushing your new local branch to the server\"), \". In that example, the same name so I do not need semi-colon. Otherwise you need to specify local:remove. For example, I could create the local without having the users/mrdesjardins/ and just using MyNewFeature local branch into the remote location users/mrdesjardins/MyNewFeature.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"bec94ce5-001d-5b4a-8f14-5f67bb5b4f76"}},
    "staticQueryHashes": ["3159585216"]}