{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/git-autostash",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Merge and Rebase with Auto Stash to Accelerate Pulling","date":"January 30, 2024"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Merge and Rebase with Auto Stash to Accelerate Pulling\",\n  \"date\": \"2024-01-30\",\n  \"categories\": [\"git\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Keeping your branch up-to-date with the main branch or the feature branch is a necessity. Waiting too long and you may have more conflicts to resolve.\"), mdx(\"p\", null, \"The normal command is invoking \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git pull\"), \". However, if you have uncommitted changes, you will need to stash them first or create a commit before receiving the upstream code.\"), mdx(\"p\", null, \"To avoid having to stash your code and pop the stash later, we can add few lines in the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.gitconfig\"), \". The change uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"autoStash\"), \" which will stash, pull and pop the stash for you.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"[rebase]\\n    autoStash = true\\n[merge]\\n    autoStash = true\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"9776d487-e354-599f-8a2b-1e67be6163aa","totalPages":77}},
    "staticQueryHashes": ["3159585216"]}