{
    "componentChunkName": "component---src-templates-blog-article-tsx",
    "path": "/blog/entity-framework-6-ef6-is-in-alpha-1-stage",
    "result": {"data":{"mdx":{"frontmatter":{"title":"Entity Framework 6 (EF6) is in Alpha 1 stage","date":"December 14, 2012"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Entity Framework 6 (EF6) is in Alpha 1 stage\",\n  \"date\": \"2012-12-14\",\n  \"categories\": [\"entity-framework\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Microsoft has released few weeks ago the \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://blogs.msdn.com/b/adonet/archive/2012/10/30/ef6-alpha-1-available-on-nuget.aspx\"\n  }, \"list of features\"), \" that Entity Framework 6, EF6 will contains.\"), mdx(\"p\", null, \"Here is a summary of the changes that can already used if you use \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://msdn.microsoft.com/en-us/data/ee712906\"\n  }, \"NuGet\"), \" to download this alpha version.\"), mdx(\"h2\", null, \"Framework 4.0 and Entity Framework\"), mdx(\"p\", null, \"It's now possible to use .Net 4.0 framework with Entity Framework 6 and have enumeration support, performance increase and spatial support. With EF5.0, we had to upgrade to .Net 4.5. They have moved from .Net into EF6.0 the code required to benefit from these 3 subjects. This is a good news because it will increase the migration from EF4 to EF6 without having to upgrade the framework. For small project it wasn't an issue, but for bigger project, the cost (and the fear) to upgrade was seen as a show blocker for some people.\"), mdx(\"h2\", null, \"EF 6.0 is more open\"), mdx(\"p\", null, \"Entity Framework 6.0 has changed is open source agreement and to be fully compatible they had to open few things. Now, it doesn't use the provider of Ado.Net. This mean that you have to change the configuration file to provide the provider of your choice. Of course, most if not all scenario will (should) use Ado.Net as provider. Nonetheless, it's not configurable.\"), mdx(\"p\", null, \"Not only it's more open for the provider but a lot of interface can be injected. DbSpatialServices, IDbModelCacheKeyFactory, IDbProviderFactoryService, IManifestTokenService, IDbConnectionFactory, MigrationSqlGenerator,IDatabaseInitializer and as said, DbProviderServices can be injected. This is a good new to provide you own implementation of these services.\"), mdx(\"h2\", null, \"Migration Update\"), mdx(\"p\", null, \"Some new feature for the migration update mechanism are also available. The first one let you customized the history table and the second let Entity Framework's context to be multi-tenant. This give you the possibility to have a single DbContext that can communicate to multiple physical database.\"), mdx(\"h2\", null, \"Global Entity Configuration\"), mdx(\"p\", null, \"EF6.0 bring custom configuration of entity to an other level. It's now possible to configure a property globally for all context object. So if for all your entity you have the property ID that is a primary key with the same configuration, instead of defining this one in each entities configuration, you just have to specify it in the convention as part of a rule of your system.\"), mdx(\"p\", null, \"That's it for the moment, a lot of great improvement is done on EF6.0 and we keep looking forward for new improvement in a more stable release soon.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"47245198-6777-58f7-9bc6-76d97a3d81a9","totalPages":69}},
    "staticQueryHashes": ["3159585216"]}