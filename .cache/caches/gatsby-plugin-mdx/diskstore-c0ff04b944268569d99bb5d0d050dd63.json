{"expireTime":9007200886478391000,"key":"gatsby-plugin-mdx-entire-payload-d064248b94aae71d3460ef393fdfd31a--undefined","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"If you want to have a menu that will change what is selected depending of where you are on the screen, this can be done. First, you need to define your menu. Second, you need to have anchor inside your webpage. This is done by setting id to some element of your page. The example below has set id to 3 links. We could have set the id to H1 tag also.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":350,"offset":350},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":350,"offset":350},"indent":[]}},{"type":"code","lang":"html","meta":"<ul id=\"top-menu\"> <li class=\"active\"> <a href=\"#\">Home</a> </li> <li> <a href=\"#header1\">Header 1</a> </li> <li> <a href=\"#header2\">Header 2</a> </li> <li> <a href=\"#header3\">Header 3</a> </li> </ul>","value":"\n<a id=\"header1\">This is my header 1</a> <p>Text here ...</p> <a id=\"header2\">This is my header 2</a> <p>Text here ...</p> <a id=\"header3\">This is my header 3</a> <p>Text here ...</p> ​","position":{"start":{"line":5,"column":1,"offset":353},"end":{"line":8,"column":5,"offset":753},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The next step is to write some Javascript code that will use the scroll position to know what is the active anchor. The Javascript will also verify if a link is clicked.","position":{"start":{"line":10,"column":1,"offset":755},"end":{"line":10,"column":170,"offset":924},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":755},"end":{"line":10,"column":170,"offset":924},"indent":[]}},{"type":"code","lang":"typescript","meta":null,"value":"var lastId, topMenu = $(\"#top-menu\"), topMenuHeight = topMenu.outerHeight()+15, // All list items menuItems = topMenu.find(\"a\"), // Anchors corresponding to menu items scrollItems = menuItems.map(function(){ var item = $($(this).attr(\"href\")); if (item.length) { return item; } });\n\n// Bind click handler to menu items // so we can get a fancy scroll animation menuItems.click(function(e){ var href = $(this).attr(\"href\"), offsetTop = href === \"#\" ? 0 : $(href).offset().top-topMenuHeight+1; $('html, body').stop().animate({ scrollTop: offsetTop }, 300); e.preventDefault(); });\n\n// Bind to scroll $(window).scroll(function(){ // Get container scroll position var fromTop = $(this).scrollTop()+topMenuHeight; // Get id of current scroll item var cur = scrollItems.map(function(){ if ($(this).offset().top < fromTop) return this; }); // Get the id of the current element cur = cur[cur.length-1]; var id = cur && cur.length ? cur[0].id : \"\"; if (lastId !== id) { lastId = id; // Set/remove active class menuItems .parent().removeClass(\"active\") .end().filter(\"[href=#\"+id+\"]\").parent().addClass(\"active\"); } });​\n\n","position":{"start":{"line":12,"column":1,"offset":926},"end":{"line":20,"column":5,"offset":2057},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Finally, the last step is to set the CSS to have a fixed menu that will stay at the top of the screen.","position":{"start":{"line":23,"column":1,"offset":2060},"end":{"line":23,"column":103,"offset":2162},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":2060},"end":{"line":23,"column":103,"offset":2162},"indent":[]}},{"type":"code","lang":"css","meta":null,"value":" body { height: 6000px; }\n\n#top-menu { position: fixed; z-index: 1; background: white; left: 0; right: 0; top: 0; }\n\n#top-menu li { float: left; }\n\n#top-menu a { display: block; padding: 5px 25px 7px 25px; -webkit-transition: 1s all ease; -moz-transition: 1s all ease; transition: 1s all ease; border-top: 3px solid white; color: #666; text-decoration: none; }\n\n#top-menu a:hover { color: #000; }\n\n#top-menu li.active a { border-top: 3px solid #333; color: #333; font-weight: bold; }\n\n#header1{ position: absolute; top: 400px; }\n\n#header2{ position: absolute; top: 800px; }\n\n#header3{ position: absolute; top: 1200px; } ​ ","position":{"start":{"line":26,"column":1,"offset":2165},"end":{"line":44,"column":4,"offset":2798},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here is an example, the code is pretty the same as here. I have adapted the code here for this blog. The credit goes to the person who has posted it on ","position":{"start":{"line":47,"column":1,"offset":2801},"end":{"line":47,"column":153,"offset":2953},"indent":[]}},{"type":"link","title":null,"url":"http://jsfiddle.net/mekwall/up4nu/","children":[{"type":"text","value":"JsFiddle","position":{"start":{"line":47,"column":154,"offset":2954},"end":{"line":47,"column":162,"offset":2962},"indent":[]}}],"position":{"start":{"line":47,"column":153,"offset":2953},"end":{"line":47,"column":199,"offset":2999},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":47,"column":199,"offset":2999},"end":{"line":47,"column":200,"offset":3000},"indent":[]}}],"position":{"start":{"line":47,"column":1,"offset":2801},"end":{"line":47,"column":200,"offset":3000},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to have an existing website that use that technic, you can go see ","position":{"start":{"line":49,"column":1,"offset":3002},"end":{"line":49,"column":79,"offset":3080},"indent":[]}},{"type":"link","title":null,"url":"http://letsmake.github.com/bettertogether/","children":[{"type":"text","value":"http://letsmake.github.com/bettertogether/","position":{"start":{"line":49,"column":80,"offset":3081},"end":{"line":49,"column":122,"offset":3123},"indent":[]}}],"position":{"start":{"line":49,"column":79,"offset":3080},"end":{"line":49,"column":167,"offset":3168},"indent":[]}},{"type":"text","value":" which use this type of menu and effect.","position":{"start":{"line":49,"column":167,"offset":3168},"end":{"line":49,"column":207,"offset":3208},"indent":[]}}],"position":{"start":{"line":49,"column":1,"offset":3002},"end":{"line":49,"column":207,"offset":3208},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Having a menu at the top of the screen with inner anchor\",\"date\":\"2013-06-24\",\"categories\":[\"css\",\"javascript\",\"web\"]}","position":{"start":{"line":52,"column":1,"offset":3211},"end":{"line":52,"column":157,"offset":3367},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":52,"column":157,"offset":3367}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Having a menu at the top of the screen with inner anchor\",\n  \"date\": \"2013-06-24\",\n  \"categories\": [\"css\", \"javascript\", \"web\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you want to have a menu that will change what is selected depending of where you are on the screen, this can be done. First, you need to define your menu. Second, you need to have anchor inside your webpage. This is done by setting id to some element of your page. The example below has set id to 3 links. We could have set the id to H1 tag also.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html \\\"active\\\">\",\n    \"metastring\": \"<ul id=\\\"top-menu\\\"> <li class=\\\"active\\\"> <a href=\\\"#\\\">Home</a> </li> <li> <a href=\\\"#header1\\\">Header 1</a> </li> <li> <a href=\\\"#header2\\\">Header 2</a> </li> <li> <a href=\\\"#header3\\\">Header 3</a> </li> </ul>\",\n    \"<ul\": true,\n    \"id\": \"\\\"top-menu\\\">\",\n    \"<li\": true,\n    \"<a\": true,\n    \"href\": \"\\\"#header3\\\">Header\",\n    \"</li>\": true,\n    \"<li>\": true,\n    \"1</a>\": true,\n    \"2</a>\": true,\n    \"3</a>\": true,\n    \"</ul>\": true\n  }, \"\\n<a id=\\\"header1\\\">This is my header 1</a> <p>Text here ...</p> <a id=\\\"header2\\\">This is my header 2</a> <p>Text here ...</p> <a id=\\\"header3\\\">This is my header 3</a> <p>Text here ...</p> \\u200B\\n\")), mdx(\"p\", null, \"The next step is to write some Javascript code that will use the scroll position to know what is the active anchor. The Javascript will also verify if a link is clicked.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-typescript\"\n  }, \"var lastId, topMenu = $(\\\"#top-menu\\\"), topMenuHeight = topMenu.outerHeight()+15, // All list items menuItems = topMenu.find(\\\"a\\\"), // Anchors corresponding to menu items scrollItems = menuItems.map(function(){ var item = $($(this).attr(\\\"href\\\")); if (item.length) { return item; } });\\n\\n// Bind click handler to menu items // so we can get a fancy scroll animation menuItems.click(function(e){ var href = $(this).attr(\\\"href\\\"), offsetTop = href === \\\"#\\\" ? 0 : $(href).offset().top-topMenuHeight+1; $('html, body').stop().animate({ scrollTop: offsetTop }, 300); e.preventDefault(); });\\n\\n// Bind to scroll $(window).scroll(function(){ // Get container scroll position var fromTop = $(this).scrollTop()+topMenuHeight; // Get id of current scroll item var cur = scrollItems.map(function(){ if ($(this).offset().top < fromTop) return this; }); // Get the id of the current element cur = cur[cur.length-1]; var id = cur && cur.length ? cur[0].id : \\\"\\\"; if (lastId !== id) { lastId = id; // Set/remove active class menuItems .parent().removeClass(\\\"active\\\") .end().filter(\\\"[href=#\\\"+id+\\\"]\\\").parent().addClass(\\\"active\\\"); } });\\u200B\\n\\n\\n\")), mdx(\"p\", null, \"Finally, the last step is to set the CSS to have a fixed menu that will stay at the top of the screen.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \" body { height: 6000px; }\\n\\n#top-menu { position: fixed; z-index: 1; background: white; left: 0; right: 0; top: 0; }\\n\\n#top-menu li { float: left; }\\n\\n#top-menu a { display: block; padding: 5px 25px 7px 25px; -webkit-transition: 1s all ease; -moz-transition: 1s all ease; transition: 1s all ease; border-top: 3px solid white; color: #666; text-decoration: none; }\\n\\n#top-menu a:hover { color: #000; }\\n\\n#top-menu li.active a { border-top: 3px solid #333; color: #333; font-weight: bold; }\\n\\n#header1{ position: absolute; top: 400px; }\\n\\n#header2{ position: absolute; top: 800px; }\\n\\n#header3{ position: absolute; top: 1200px; } \\u200B \\n\")), mdx(\"p\", null, \"Here is an example, the code is pretty the same as here. I have adapted the code here for this blog. The credit goes to the person who has posted it on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://jsfiddle.net/mekwall/up4nu/\"\n  }, \"JsFiddle\"), \".\"), mdx(\"p\", null, \"If you want to have an existing website that use that technic, you can go see \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://letsmake.github.com/bettertogether/\"\n  }, \"http://letsmake.github.com/bettertogether/\"), \" which use this type of menu and effect.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Having a menu at the top of the screen with inner anchor\",\n  \"date\": \"2013-06-24\",\n  \"categories\": [\"css\", \"javascript\", \"web\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`If you want to have a menu that will change what is selected depending of where you are on the screen, this can be done. First, you need to define your menu. Second, you need to have anchor inside your webpage. This is done by setting id to some element of your page. The example below has set id to 3 links. We could have set the id to H1 tag also.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html \\\"active\\\">\",\n        \"metastring\": \"<ul id=\\\"top-menu\\\"> <li class=\\\"active\\\"> <a href=\\\"#\\\">Home</a> </li> <li> <a href=\\\"#header1\\\">Header 1</a> </li> <li> <a href=\\\"#header2\\\">Header 2</a> </li> <li> <a href=\\\"#header3\\\">Header 3</a> </li> </ul>\",\n        \"<ul\": true,\n        \"id\": \"\\\"top-menu\\\">\",\n        \"<li\": true,\n        \"<a\": true,\n        \"href\": \"\\\"#header3\\\">Header\",\n        \"</li>\": true,\n        \"<li>\": true,\n        \"1</a>\": true,\n        \"2</a>\": true,\n        \"3</a>\": true,\n        \"</ul>\": true\n      }}>{`\n<a id=\"header1\">This is my header 1</a> <p>Text here ...</p> <a id=\"header2\">This is my header 2</a> <p>Text here ...</p> <a id=\"header3\">This is my header 3</a> <p>Text here ...</p> ​\n`}</code></pre>\n    <p>{`The next step is to write some Javascript code that will use the scroll position to know what is the active anchor. The Javascript will also verify if a link is clicked.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`var lastId, topMenu = $(\"#top-menu\"), topMenuHeight = topMenu.outerHeight()+15, // All list items menuItems = topMenu.find(\"a\"), // Anchors corresponding to menu items scrollItems = menuItems.map(function(){ var item = $($(this).attr(\"href\")); if (item.length) { return item; } });\n\n// Bind click handler to menu items // so we can get a fancy scroll animation menuItems.click(function(e){ var href = $(this).attr(\"href\"), offsetTop = href === \"#\" ? 0 : $(href).offset().top-topMenuHeight+1; $('html, body').stop().animate({ scrollTop: offsetTop }, 300); e.preventDefault(); });\n\n// Bind to scroll $(window).scroll(function(){ // Get container scroll position var fromTop = $(this).scrollTop()+topMenuHeight; // Get id of current scroll item var cur = scrollItems.map(function(){ if ($(this).offset().top < fromTop) return this; }); // Get the id of the current element cur = cur[cur.length-1]; var id = cur && cur.length ? cur[0].id : \"\"; if (lastId !== id) { lastId = id; // Set/remove active class menuItems .parent().removeClass(\"active\") .end().filter(\"[href=#\"+id+\"]\").parent().addClass(\"active\"); } });​\n\n\n`}</code></pre>\n    <p>{`Finally, the last step is to set the CSS to have a fixed menu that will stay at the top of the screen.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{` body { height: 6000px; }\n\n#top-menu { position: fixed; z-index: 1; background: white; left: 0; right: 0; top: 0; }\n\n#top-menu li { float: left; }\n\n#top-menu a { display: block; padding: 5px 25px 7px 25px; -webkit-transition: 1s all ease; -moz-transition: 1s all ease; transition: 1s all ease; border-top: 3px solid white; color: #666; text-decoration: none; }\n\n#top-menu a:hover { color: #000; }\n\n#top-menu li.active a { border-top: 3px solid #333; color: #333; font-weight: bold; }\n\n#header1{ position: absolute; top: 400px; }\n\n#header2{ position: absolute; top: 800px; }\n\n#header3{ position: absolute; top: 1200px; } ​ \n`}</code></pre>\n    <p>{`Here is an example, the code is pretty the same as here. I have adapted the code here for this blog. The credit goes to the person who has posted it on `}<a parentName=\"p\" {...{\n        \"href\": \"http://jsfiddle.net/mekwall/up4nu/\"\n      }}>{`JsFiddle`}</a>{`.`}</p>\n    <p>{`If you want to have an existing website that use that technic, you can go see `}<a parentName=\"p\" {...{\n        \"href\": \"http://letsmake.github.com/bettertogether/\"\n      }}>{`http://letsmake.github.com/bettertogether/`}</a>{` which use this type of menu and effect.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}