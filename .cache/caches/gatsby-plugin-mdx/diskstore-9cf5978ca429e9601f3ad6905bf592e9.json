{"expireTime":9007200886478396000,"key":"gatsby-plugin-mdx-entire-payload-e488268f28d2352024e689f986eaf26f--undefined","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"Here is a small article that could be more a note than something else. If you have a lot of SQL statement to execute, let say few gigs of statement, this won't load into SQL Server Manager. What you can do is to use the sqlcmd command. Open a DOS console and go where you have installed Sql Server Mananger. Mine is: ``` \n c:","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":4,"offset":326},"indent":[1]}},{"type":"text","value":"\\","position":{"start":{"line":3,"column":4,"offset":326},"end":{"line":3,"column":6,"offset":328},"indent":[]}},{"type":"text","value":"Program Files (x86)","position":{"start":{"line":3,"column":6,"offset":328},"end":{"line":3,"column":25,"offset":347},"indent":[]}},{"type":"text","value":"\\","position":{"start":{"line":3,"column":25,"offset":347},"end":{"line":3,"column":27,"offset":349},"indent":[]}},{"type":"text","value":"Microsoft SQL Server","position":{"start":{"line":3,"column":27,"offset":349},"end":{"line":3,"column":47,"offset":369},"indent":[]}},{"type":"text","value":"\\","position":{"start":{"line":3,"column":47,"offset":369},"end":{"line":3,"column":49,"offset":371},"indent":[]}},{"type":"text","value":"90","position":{"start":{"line":3,"column":49,"offset":371},"end":{"line":3,"column":51,"offset":373},"indent":[]}},{"type":"text","value":"\\","position":{"start":{"line":3,"column":51,"offset":373},"end":{"line":3,"column":53,"offset":375},"indent":[]}},{"type":"text","value":"Tools","position":{"start":{"line":3,"column":53,"offset":375},"end":{"line":3,"column":58,"offset":380},"indent":[]}},{"type":"text","value":"\\","position":{"start":{"line":3,"column":58,"offset":380},"end":{"line":3,"column":60,"offset":382},"indent":[]}},{"type":"text","value":"Binn ","position":{"start":{"line":3,"column":60,"offset":382},"end":{"line":3,"column":65,"offset":387},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":3,"column":65,"offset":387},"indent":[1]}},{"type":"code","lang":"In","meta":"the console, you need to specify the server and instance you want to execute the file to. Optionnaly, you can write the output to a file.","value":"\n\n```sql\n sqlcmd -S myServer\\\\instanceName -i C:\\\\myScript.sql -o C:\\\\log.txt ","position":{"start":{"line":4,"column":1,"offset":388},"end":{"line":9,"column":4,"offset":616},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"That's it. Nothing more complicated.","position":{"start":{"line":12,"column":1,"offset":619},"end":{"line":12,"column":37,"offset":655},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":619},"end":{"line":12,"column":37,"offset":655},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"How to execute a huge SQL file with Microsoft Sql Server\",\"date\":\"2012-12-17\",\"categories\":[\"sql-server-management-studio\"]}","position":{"start":{"line":15,"column":1,"offset":658},"end":{"line":15,"column":163,"offset":820},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":15,"column":163,"offset":820}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to execute a huge SQL file with Microsoft Sql Server\",\n  \"date\": \"2012-12-17\",\n  \"categories\": [\"sql-server-management-studio\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Here is a small article that could be more a note than something else. If you have a lot of SQL statement to execute, let say few gigs of statement, this won't load into SQL Server Manager. What you can do is to use the sqlcmd command. Open a DOS console and go where you have installed Sql Server Mananger. Mine is: ```\\nc:\", \"\\\\\", \"Program Files (x86)\", \"\\\\\", \"Microsoft SQL Server\", \"\\\\\", \"90\", \"\\\\\", \"Tools\", \"\\\\\", \"Binn \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-In\",\n    \"metastring\": \"the console, you need to specify the server and instance you want to execute the file to. Optionnaly, you can write the output to a file.\",\n    \"the\": true,\n    \"console,\": true,\n    \"you\": true,\n    \"need\": true,\n    \"to\": true,\n    \"specify\": true,\n    \"server\": true,\n    \"and\": true,\n    \"instance\": true,\n    \"want\": true,\n    \"execute\": true,\n    \"file\": true,\n    \"to.\": true,\n    \"Optionnaly,\": true,\n    \"can\": true,\n    \"write\": true,\n    \"output\": true,\n    \"a\": true,\n    \"file.\": true\n  }, \"\\n\\n```sql\\n sqlcmd -S myServer\\\\\\\\instanceName -i C:\\\\\\\\myScript.sql -o C:\\\\\\\\log.txt \\n\")), mdx(\"p\", null, \"That's it. Nothing more complicated.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"How to execute a huge SQL file with Microsoft Sql Server\",\n  \"date\": \"2012-12-17\",\n  \"categories\": [\"sql-server-management-studio\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Here is a small article that could be more a note than something else. If you have a lot of SQL statement to execute, let say few gigs of statement, this won't load into SQL Server Manager. What you can do is to use the sqlcmd command. Open a DOS console and go where you have installed Sql Server Mananger. Mine is: \\`\\`\\`\nc:`}{`\\\\`}{`Program Files (x86)`}{`\\\\`}{`Microsoft SQL Server`}{`\\\\`}{`90`}{`\\\\`}{`Tools`}{`\\\\`}{`Binn `}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-In\",\n        \"metastring\": \"the console, you need to specify the server and instance you want to execute the file to. Optionnaly, you can write the output to a file.\",\n        \"the\": true,\n        \"console,\": true,\n        \"you\": true,\n        \"need\": true,\n        \"to\": true,\n        \"specify\": true,\n        \"server\": true,\n        \"and\": true,\n        \"instance\": true,\n        \"want\": true,\n        \"execute\": true,\n        \"file\": true,\n        \"to.\": true,\n        \"Optionnaly,\": true,\n        \"can\": true,\n        \"write\": true,\n        \"output\": true,\n        \"a\": true,\n        \"file.\": true\n      }}>{`\n\n\\`\\`\\`sql\n sqlcmd -S myServer\\\\\\\\instanceName -i C:\\\\\\\\myScript.sql -o C:\\\\\\\\log.txt \n`}</code></pre>\n    <p>{`That's it. Nothing more complicated.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}