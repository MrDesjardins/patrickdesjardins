{"expireTime":9007200886478382000,"key":"gatsby-plugin-mdx-entire-payload-b93952571aed1a24b295520b199e75cf--undefined","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"This article will be pretty slim but can be helpful for more than just myself so I am sharing. Here are some commands available with NPM that you may not know that can be useful.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":179,"offset":179},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":179,"offset":179},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To know packages that are installed globally:","position":{"start":{"line":4,"column":1,"offset":181},"end":{"line":4,"column":46,"offset":226},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":181},"end":{"line":4,"column":46,"offset":226},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":" npm list -g --depth=0","position":{"start":{"line":6,"column":1,"offset":228},"end":{"line":8,"column":4,"offset":258},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To know where the packages are installed. It gives the global location if no node_modules folder in the direct folder parent tree:","position":{"start":{"line":10,"column":1,"offset":260},"end":{"line":10,"column":131,"offset":390},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":260},"end":{"line":10,"column":131,"offset":390},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":" npm root npm root -g // The global folder","position":{"start":{"line":12,"column":1,"offset":392},"end":{"line":14,"column":4,"offset":442},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To know your NPM version and the actual released version","position":{"start":{"line":16,"column":1,"offset":444},"end":{"line":16,"column":57,"offset":500},"indent":[]}}],"position":{"start":{"line":16,"column":1,"offset":444},"end":{"line":16,"column":57,"offset":500},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":" npm root","position":{"start":{"line":18,"column":1,"offset":502},"end":{"line":20,"column":4,"offset":519},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To know all available version of a library:","position":{"start":{"line":22,"column":1,"offset":521},"end":{"line":22,"column":44,"offset":564},"indent":[]}}],"position":{"start":{"line":22,"column":1,"offset":521},"end":{"line":22,"column":44,"offset":564},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":" npm show react-native versions","position":{"start":{"line":24,"column":1,"offset":566},"end":{"line":26,"column":4,"offset":605},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To get all your direct dependencies current version and latest:","position":{"start":{"line":28,"column":1,"offset":607},"end":{"line":28,"column":64,"offset":670},"indent":[]}}],"position":{"start":{"line":28,"column":1,"offset":607},"end":{"line":28,"column":64,"offset":670},"indent":[]}},{"type":"code","lang":null,"meta":null,"value":" npm out --depth=0","position":{"start":{"line":30,"column":1,"offset":672},"end":{"line":32,"column":4,"offset":698},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"NPM Useful Commands\",\"date\":\"2017-11-02\",\"categories\":[\"javascript\",\"nodejs-web\"]}","position":{"start":{"line":35,"column":1,"offset":701},"end":{"line":35,"column":121,"offset":821},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":35,"column":121,"offset":821}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"NPM Useful Commands\",\n  \"date\": \"2017-11-02\",\n  \"categories\": [\"javascript\", \"nodejs-web\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"This article will be pretty slim but can be helpful for more than just myself so I am sharing. Here are some commands available with NPM that you may not know that can be useful.\"), mdx(\"p\", null, \"To know packages that are installed globally:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" npm list -g --depth=0\\n\")), mdx(\"p\", null, \"To know where the packages are installed. It gives the global location if no node_modules folder in the direct folder parent tree:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" npm root npm root -g // The global folder\\n\")), mdx(\"p\", null, \"To know your NPM version and the actual released version\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" npm root\\n\")), mdx(\"p\", null, \"To know all available version of a library:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" npm show react-native versions\\n\")), mdx(\"p\", null, \"To get all your direct dependencies current version and latest:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" npm out --depth=0\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"NPM Useful Commands\",\n  \"date\": \"2017-11-02\",\n  \"categories\": [\"javascript\", \"nodejs-web\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`This article will be pretty slim but can be helpful for more than just myself so I am sharing. Here are some commands available with NPM that you may not know that can be useful.`}</p>\n    <p>{`To know packages that are installed globally:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` npm list -g --depth=0\n`}</code></pre>\n    <p>{`To know where the packages are installed. It gives the global location if no node_modules folder in the direct folder parent tree:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` npm root npm root -g // The global folder\n`}</code></pre>\n    <p>{`To know your NPM version and the actual released version`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` npm root\n`}</code></pre>\n    <p>{`To know all available version of a library:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` npm show react-native versions\n`}</code></pre>\n    <p>{`To get all your direct dependencies current version and latest:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` npm out --depth=0\n`}</code></pre>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}