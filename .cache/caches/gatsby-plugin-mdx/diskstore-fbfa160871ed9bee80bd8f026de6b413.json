{"expireTime":9007200886478395000,"key":"gatsby-plugin-mdx-entire-payload-d0bfb468815a337693aa6a528043f9b9--undefined","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"It's possible when using Poco object with Entity Framework to use ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":67,"offset":67},"indent":[]}},{"type":"strong","children":[{"type":"link","title":null,"url":"http://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations.columnattribute(v=VS.103).aspx","children":[{"type":"text","value":"DataAnnotation","position":{"start":{"line":2,"column":70,"offset":70},"end":{"line":2,"column":84,"offset":84},"indent":[]}}],"position":{"start":{"line":2,"column":69,"offset":69},"end":{"line":2,"column":195,"offset":195},"indent":[]}}],"position":{"start":{"line":2,"column":67,"offset":67},"end":{"line":2,"column":197,"offset":197},"indent":[]}},{"type":"text","value":" or to use the Fluent API.","position":{"start":{"line":2,"column":197,"offset":197},"end":{"line":2,"column":223,"offset":223},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":223,"offset":223},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The DataAnnotation require to add a reference to \"","position":{"start":{"line":4,"column":1,"offset":225},"end":{"line":4,"column":51,"offset":275},"indent":[]}},{"type":"link","title":null,"url":"http://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations.columnattribute(v=VS.103).aspx","children":[{"type":"text","value":"System.Component.Model.DataAnnotations","position":{"start":{"line":4,"column":52,"offset":276},"end":{"line":4,"column":90,"offset":314},"indent":[]}}],"position":{"start":{"line":4,"column":51,"offset":275},"end":{"line":4,"column":201,"offset":425},"indent":[]}},{"type":"text","value":"\"","position":{"start":{"line":4,"column":201,"offset":425},"end":{"line":4,"column":202,"offset":426},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":225},"end":{"line":4,"column":202,"offset":426},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":" using System.ComponentModel.DataAnnotations; ","position":{"start":{"line":7,"column":1,"offset":429},"end":{"line":9,"column":4,"offset":489},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is pretty easy but as the disadvantage to corrupt your Poco object with database indicator (columns name).","position":{"start":{"line":11,"column":1,"offset":491},"end":{"line":11,"column":112,"offset":602},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":491},"end":{"line":11,"column":112,"offset":602},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":" public class MyObject { public int ID { get; set; } [Column(\"Code_SuperWeirdTableColumnName\")] public string Code{ get; set; } [Column(\"Name_EN_USA\")] public string Name { get; set; } } ","position":{"start":{"line":14,"column":1,"offset":605},"end":{"line":16,"column":4,"offset":806},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"As you can see in the example above, the property Code is linked to Code_SuperWeirdTableColumnName which let you have a proper name inside your model object and still use another name into the table. It's the same for the Name of the MyObject class. It will be linked to Name_EN_USA.","position":{"start":{"line":18,"column":1,"offset":808},"end":{"line":18,"column":284,"offset":1091},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":808},"end":{"line":18,"column":284,"offset":1091},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Entity Framework with Poco object using Data Annotations for database tables columns mapping\",\"date\":\"2012-03-18\",\"categories\":[\"entity-framework\"]}","position":{"start":{"line":21,"column":1,"offset":1094},"end":{"line":21,"column":187,"offset":1280},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":21,"column":187,"offset":1280}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Entity Framework with Poco object using Data Annotations for database tables columns mapping\",\n  \"date\": \"2012-03-18\",\n  \"categories\": [\"entity-framework\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"It's possible when using Poco object with Entity Framework to use \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"a\", {\n    parentName: \"strong\",\n    \"href\": \"http://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations.columnattribute(v=VS.103).aspx\"\n  }, \"DataAnnotation\")), \" or to use the Fluent API.\"), mdx(\"p\", null, \"The DataAnnotation require to add a reference to \\\"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations.columnattribute(v=VS.103).aspx\"\n  }, \"System.Component.Model.DataAnnotations\"), \"\\\"\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \" using System.ComponentModel.DataAnnotations; \\n\")), mdx(\"p\", null, \"This is pretty easy but as the disadvantage to corrupt your Poco object with database indicator (columns name).\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \" public class MyObject { public int ID { get; set; } [Column(\\\"Code_SuperWeirdTableColumnName\\\")] public string Code{ get; set; } [Column(\\\"Name_EN_USA\\\")] public string Name { get; set; } } \\n\")), mdx(\"p\", null, \"As you can see in the example above, the property Code is linked to Code_SuperWeirdTableColumnName which let you have a proper name inside your model object and still use another name into the table. It's the same for the Name of the MyObject class. It will be linked to Name_EN_USA.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Entity Framework with Poco object using Data Annotations for database tables columns mapping\",\n  \"date\": \"2012-03-18\",\n  \"categories\": [\"entity-framework\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`It's possible when using Poco object with Entity Framework to use `}<strong parentName=\"p\"><a parentName=\"strong\" {...{\n          \"href\": \"http://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations.columnattribute(v=VS.103).aspx\"\n        }}>{`DataAnnotation`}</a></strong>{` or to use the Fluent API.`}</p>\n    <p>{`The DataAnnotation require to add a reference to \"`}<a parentName=\"p\" {...{\n        \"href\": \"http://msdn.microsoft.com/en-us/library/system.componentmodel.dataannotations.columnattribute(v=VS.103).aspx\"\n      }}>{`System.Component.Model.DataAnnotations`}</a>{`\"`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{` using System.ComponentModel.DataAnnotations; \n`}</code></pre>\n    <p>{`This is pretty easy but as the disadvantage to corrupt your Poco object with database indicator (columns name).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{` public class MyObject { public int ID { get; set; } [Column(\"Code_SuperWeirdTableColumnName\")] public string Code{ get; set; } [Column(\"Name_EN_USA\")] public string Name { get; set; } } \n`}</code></pre>\n    <p>{`As you can see in the example above, the property Code is linked to Code_SuperWeirdTableColumnName which let you have a proper name inside your model object and still use another name into the table. It's the same for the Name of the MyObject class. It will be linked to Name_EN_USA.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}