{"expireTime":9007200886478395000,"key":"gatsby-plugin-mdx-entire-payload-cb19437fe42da6425a8a0f87c219ea25--undefined","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"The property ProxyCreationEnabled is by default to True. This property is required to be able to do LazyLoading and also to keep track of changes to the object.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":161,"offset":161},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":161,"offset":161},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"But, in some situation, you may need to set it up to false. One case if to gain on performance. Entity Framework will generate a proxy class which contain some overhead that will contains the previous state of the the object. Furthermore, creating object with proxy make them not serializable. Finally, some controls like Telerik suite (version 2012.1.214.340), cannot be bind to proxy classes.","position":{"start":{"line":4,"column":1,"offset":163},"end":{"line":4,"column":395,"offset":557},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":163},"end":{"line":4,"column":395,"offset":557},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To set the DbContext to false for proxy, you need to set the property Configuration.ProxyCreationEnable = false. This property is available to any DbContext object.","position":{"start":{"line":6,"column":1,"offset":559},"end":{"line":6,"column":165,"offset":723},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":559},"end":{"line":6,"column":165,"offset":723},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Entity Framework 4.3 and ProxyCreationEnabled\",\"date\":\"2012-03-21\",\"categories\":[\"entity-framework\"]}","position":{"start":{"line":9,"column":1,"offset":726},"end":{"line":9,"column":140,"offset":865},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":9,"column":140,"offset":865}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Entity Framework 4.3 and ProxyCreationEnabled\",\n  \"date\": \"2012-03-21\",\n  \"categories\": [\"entity-framework\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"The property ProxyCreationEnabled is by default to True. This property is required to be able to do LazyLoading and also to keep track of changes to the object.\"), mdx(\"p\", null, \"But, in some situation, you may need to set it up to false. One case if to gain on performance. Entity Framework will generate a proxy class which contain some overhead that will contains the previous state of the the object. Furthermore, creating object with proxy make them not serializable. Finally, some controls like Telerik suite (version 2012.1.214.340), cannot be bind to proxy classes.\"), mdx(\"p\", null, \"To set the DbContext to false for proxy, you need to set the property Configuration.ProxyCreationEnable = false. This property is available to any DbContext object.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Entity Framework 4.3 and ProxyCreationEnabled\",\n  \"date\": \"2012-03-21\",\n  \"categories\": [\"entity-framework\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`The property ProxyCreationEnabled is by default to True. This property is required to be able to do LazyLoading and also to keep track of changes to the object.`}</p>\n    <p>{`But, in some situation, you may need to set it up to false. One case if to gain on performance. Entity Framework will generate a proxy class which contain some overhead that will contains the previous state of the the object. Furthermore, creating object with proxy make them not serializable. Finally, some controls like Telerik suite (version 2012.1.214.340), cannot be bind to proxy classes.`}</p>\n    <p>{`To set the DbContext to false for proxy, you need to set the property Configuration.ProxyCreationEnable = false. This property is available to any DbContext object.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}