{"expireTime":9007200886478395000,"key":"gatsby-plugin-mdx-entire-payload-fd271c382a7c20ae35714b464cc83ff6--undefined","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"If you have a relationship of zero to many your master object won't have in the database any reference to the detail object. It's the detail object that has foreign key to the master. But, on the C# class side, the master will have a collection of the detail.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":260,"offset":260},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":260,"offset":260},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"To make this work, you need to have a repository that will do the include correctly if you want to use the eager loading.","position":{"start":{"line":4,"column":1,"offset":262},"end":{"line":4,"column":122,"offset":383},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":262},"end":{"line":4,"column":122,"offset":383},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":" MyDbContext.Libraries.Include(\"Book\"); ","position":{"start":{"line":7,"column":1,"offset":386},"end":{"line":9,"column":4,"offset":440},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You also need to specify the collection as ICollection. IEnumerator won't work and if you do, you will end up with an error. This property need to be also virtual.","position":{"start":{"line":11,"column":1,"offset":442},"end":{"line":11,"column":164,"offset":605},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":442},"end":{"line":11,"column":164,"offset":605},"indent":[]}},{"type":"code","lang":"csharp","meta":null,"value":" public virtual ICollection<Book> Books { get; set; } ","position":{"start":{"line":14,"column":1,"offset":608},"end":{"line":16,"column":4,"offset":676},"indent":[1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"A specified Include path is not valid. The EntityType 'DataAccessLayer.Database.Book' does not declare a navigation property with the name 'BooksCollection'.","position":{"start":{"line":18,"column":3,"offset":680},"end":{"line":18,"column":160,"offset":837},"indent":[]}}],"position":{"start":{"line":18,"column":3,"offset":680},"end":{"line":18,"column":160,"offset":837},"indent":[]}}],"position":{"start":{"line":18,"column":1,"offset":678},"end":{"line":18,"column":160,"offset":837},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Entity Framework 4.3 Poco object relationship zero to many\",\"date\":\"2012-03-22\",\"categories\":[\"entity-framework\"]}","position":{"start":{"line":21,"column":1,"offset":840},"end":{"line":21,"column":153,"offset":992},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":21,"column":153,"offset":992}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Entity Framework 4.3 Poco object relationship zero to many\",\n  \"date\": \"2012-03-22\",\n  \"categories\": [\"entity-framework\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you have a relationship of zero to many your master object won't have in the database any reference to the detail object. It's the detail object that has foreign key to the master. But, on the C# class side, the master will have a collection of the detail.\"), mdx(\"p\", null, \"To make this work, you need to have a repository that will do the include correctly if you want to use the eager loading.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \" MyDbContext.Libraries.Include(\\\"Book\\\"); \\n\")), mdx(\"p\", null, \"You also need to specify the collection as ICollection. IEnumerator won't work and if you do, you will end up with an error. This property need to be also virtual.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-csharp\"\n  }, \" public virtual ICollection<Book> Books { get; set; } \\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"A specified Include path is not valid. The EntityType 'DataAccessLayer.Database.Book' does not declare a navigation property with the name 'BooksCollection'.\")));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Entity Framework 4.3 Poco object relationship zero to many\",\n  \"date\": \"2012-03-22\",\n  \"categories\": [\"entity-framework\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`If you have a relationship of zero to many your master object won't have in the database any reference to the detail object. It's the detail object that has foreign key to the master. But, on the C# class side, the master will have a collection of the detail.`}</p>\n    <p>{`To make this work, you need to have a repository that will do the include correctly if you want to use the eager loading.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{` MyDbContext.Libraries.Include(\"Book\"); \n`}</code></pre>\n    <p>{`You also need to specify the collection as ICollection. IEnumerator won't work and if you do, you will end up with an error. This property need to be also virtual.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-csharp\"\n      }}>{` public virtual ICollection<Book> Books { get; set; } \n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`A specified Include path is not valid. The EntityType 'DataAccessLayer.Database.Book' does not declare a navigation property with the name 'BooksCollection'.`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}