{"expireTime":9007200886478386000,"key":"gatsby-plugin-mdx-entire-payload-d7f2050e0b7b343623cefc652029aed5--undefined","val":{"mdast":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"If you have a part of your website that need to change the URL in the browser without having to refresh the whole page, than you shouldn't use the window.location.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":164,"offset":164},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"href","position":{"start":{"line":2,"column":166,"offset":166},"end":{"line":2,"column":170,"offset":170},"indent":[]}}],"position":{"start":{"line":2,"column":164,"offset":164},"end":{"line":2,"column":172,"offset":172},"indent":[]}},{"type":"text","value":" because this one will redirect into that page. ","position":{"start":{"line":2,"column":172,"offset":172},"end":{"line":2,"column":220,"offset":220},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"window.location","position":{"start":{"line":2,"column":222,"offset":222},"end":{"line":2,"column":237,"offset":237},"indent":[]}}],"position":{"start":{"line":2,"column":220,"offset":220},"end":{"line":2,"column":239,"offset":239},"indent":[]}},{"type":"text","value":" contains 2 others method that can do the job for you. The first one is ","position":{"start":{"line":2,"column":239,"offset":239},"end":{"line":2,"column":311,"offset":311},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"assign","position":{"start":{"line":2,"column":312,"offset":312},"end":{"line":2,"column":318,"offset":318},"indent":[]}}],"position":{"start":{"line":2,"column":311,"offset":311},"end":{"line":2,"column":319,"offset":319},"indent":[]}},{"type":"text","value":". window.location.assign(","position":{"start":{"line":2,"column":319,"offset":319},"end":{"line":2,"column":344,"offset":344},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"url","position":{"start":{"line":2,"column":345,"offset":345},"end":{"line":2,"column":348,"offset":348},"indent":[]}}],"position":{"start":{"line":2,"column":344,"offset":344},"end":{"line":2,"column":349,"offset":349},"indent":[]}},{"type":"text","value":") is a method that will change the url and set in your history the new url. Sometime, we want to browser to change but not the history. A second method does that job -- it's called replace.","position":{"start":{"line":2,"column":349,"offset":349},"end":{"line":2,"column":538,"offset":538},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":538,"offset":538},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"On the other hand, doing that mean that the user can navigate directly into your webpage by the url in the browser. If you changed the URL by just changing a hash tag that define a specific action in your website, you may have that action trigged by the click event but not when the user access the webpage directly from the url.","position":{"start":{"line":4,"column":1,"offset":540},"end":{"line":4,"column":330,"offset":869},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":540},"end":{"line":4,"column":330,"offset":869},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For example, you have several link for action like \"open item1\" and \"open item2\". You change the url with ","position":{"start":{"line":6,"column":1,"offset":871},"end":{"line":6,"column":107,"offset":977},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"window.location.assign","position":{"start":{"line":6,"column":109,"offset":979},"end":{"line":6,"column":131,"offset":1001},"indent":[]}}],"position":{"start":{"line":6,"column":107,"offset":977},"end":{"line":6,"column":133,"offset":1003},"indent":[]}},{"type":"text","value":" because you want the user to be able to use the back button -- use the history. So the history looks like this:","position":{"start":{"line":6,"column":133,"offset":1003},"end":{"line":6,"column":245,"offset":1115},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":871},"end":{"line":6,"column":245,"offset":1115},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://yourwebsite.com/page1","children":[{"type":"text","value":"http://yourwebsite.com/page1","position":{"start":{"line":8,"column":3,"offset":1119},"end":{"line":8,"column":31,"offset":1147},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":1119},"end":{"line":8,"column":31,"offset":1147},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":1119},"end":{"line":8,"column":31,"offset":1147},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":1117},"end":{"line":8,"column":31,"offset":1147},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://yourwebsite.com/page1#item1","children":[{"type":"text","value":"http://yourwebsite.com/page1#item1","position":{"start":{"line":9,"column":3,"offset":1150},"end":{"line":9,"column":37,"offset":1184},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":1150},"end":{"line":9,"column":37,"offset":1184},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":1150},"end":{"line":9,"column":37,"offset":1184},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":1148},"end":{"line":9,"column":37,"offset":1184},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"http://yourwebsite.com/page1#item2","children":[{"type":"text","value":"http://yourwebsite.com/page1#item2","position":{"start":{"line":10,"column":3,"offset":1187},"end":{"line":10,"column":37,"offset":1221},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":1187},"end":{"line":10,"column":37,"offset":1221},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":1187},"end":{"line":10,"column":37,"offset":1221},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":1185},"end":{"line":10,"column":37,"offset":1221},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":1117},"end":{"line":10,"column":37,"offset":1221},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If someone go directly to the ","position":{"start":{"line":12,"column":1,"offset":1223},"end":{"line":12,"column":31,"offset":1253},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"item2","position":{"start":{"line":12,"column":32,"offset":1254},"end":{"line":12,"column":37,"offset":1259},"indent":[]}}],"position":{"start":{"line":12,"column":31,"offset":1253},"end":{"line":12,"column":38,"offset":1260},"indent":[]}},{"type":"text","value":" than you need to execute the code behind this hash tag. To have your code executed you need to use the window event called ","position":{"start":{"line":12,"column":38,"offset":1260},"end":{"line":12,"column":162,"offset":1384},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"onhashchange","position":{"start":{"line":12,"column":164,"offset":1386},"end":{"line":12,"column":176,"offset":1398},"indent":[]}}],"position":{"start":{"line":12,"column":162,"offset":1384},"end":{"line":12,"column":178,"offset":1400},"indent":[]}},{"type":"text","value":". ```typescript\nwindow.onhashchange = function() { //Get the hash value from the url and execute your code }; ","position":{"start":{"line":12,"column":178,"offset":1400},"end":{"line":13,"column":95,"offset":1510},"indent":[1]}}],"position":{"start":{"line":12,"column":1,"offset":1223},"end":{"line":13,"column":95,"offset":1510},"indent":[1]}},{"type":"code","lang":null,"meta":null,"value":" The **onhashchange** become a hub if all time the url change which can be convenient to have a central place has a content controller. This method removes the need to have action handled in every click that has hash url to just have the click event of these links to change the url and let the **onhashchange** handles which action to execute.\n\nHere is an example: \n```html  <a id=\"report\">Current Order Report</a> <a id=\"edit\">Edit Current Order</a> \n```  ```typescript\n$('#report').click(function(){ window.location.assign(\"#open-current-report\"); });\n\n$('#edit').click(function(){ window.location.assign(\"#edit-order\"); });\n\nwindow.onhashchange = function(){ if(window.location.hash) { var hashFragment = window.location.hash.substring(1); // Get hash value (without #) switch(hashFragment) { case \"open-current-report\": //Do your action break; case \"edit-order\": //Do your action break; } } }; ","position":{"start":{"line":14,"column":1,"offset":1511},"end":{"line":25,"column":5,"offset":2420},"indent":[1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":" This example use JQuery to attach the click event but this is not required for the location assign, neither for the ","position":{"start":{"line":26,"column":1,"offset":2421},"end":{"line":26,"column":118,"offset":2538},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"onhashchange","position":{"start":{"line":26,"column":120,"offset":2540},"end":{"line":26,"column":132,"offset":2552},"indent":[]}}],"position":{"start":{"line":26,"column":118,"offset":2538},"end":{"line":26,"column":134,"offset":2554},"indent":[]}},{"type":"text","value":" -- they are both pure JavaScript method and event.","position":{"start":{"line":26,"column":134,"offset":2554},"end":{"line":26,"column":185,"offset":2605},"indent":[]}}],"position":{"start":{"line":26,"column":1,"offset":2421},"end":{"line":26,"column":185,"offset":2605},"indent":[]}},{"type":"export","value":"export const _frontmatter = {\"title\":\"Change the URL with JavaScript without redirecting\",\"date\":\"2015-08-26\",\"categories\":[\"javascript\"]}","position":{"start":{"line":29,"column":1,"offset":2608},"end":{"line":29,"column":139,"offset":2746},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":29,"column":139,"offset":2746}}},"scopeImports":["import * as React from 'react'"],"scopeIdentifiers":["React"],"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Change the URL with JavaScript without redirecting\",\n  \"date\": \"2015-08-26\",\n  \"categories\": [\"javascript\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you have a part of your website that need to change the URL in the browser without having to refresh the whole page, than you shouldn't use the window.location.\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"href\"), \" because this one will redirect into that page. \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"window.location\"), \" contains 2 others method that can do the job for you. The first one is \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"assign\"), \". window.location.assign(\", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"url\"), \") is a method that will change the url and set in your history the new url. Sometime, we want to browser to change but not the history. A second method does that job -- it's called replace.\"), mdx(\"p\", null, \"On the other hand, doing that mean that the user can navigate directly into your webpage by the url in the browser. If you changed the URL by just changing a hash tag that define a specific action in your website, you may have that action trigged by the click event but not when the user access the webpage directly from the url.\"), mdx(\"p\", null, \"For example, you have several link for action like \\\"open item1\\\" and \\\"open item2\\\". You change the url with \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"window.location.assign\"), \" because you want the user to be able to use the back button -- use the history. So the history looks like this:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://yourwebsite.com/page1\"\n  }, \"http://yourwebsite.com/page1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://yourwebsite.com/page1#item1\"\n  }, \"http://yourwebsite.com/page1#item1\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"http://yourwebsite.com/page1#item2\"\n  }, \"http://yourwebsite.com/page1#item2\"))), mdx(\"p\", null, \"If someone go directly to the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"item2\"), \" than you need to execute the code behind this hash tag. To have your code executed you need to use the window event called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"onhashchange\"), \". ```typescript\\nwindow.onhashchange = function() { //Get the hash value from the url and execute your code }; \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \" The **onhashchange** become a hub if all time the url change which can be convenient to have a central place has a content controller. This method removes the need to have action handled in every click that has hash url to just have the click event of these links to change the url and let the **onhashchange** handles which action to execute.\\n\\nHere is an example: \\n```html  <a id=\\\"report\\\">Current Order Report</a> <a id=\\\"edit\\\">Edit Current Order</a> \\n```  ```typescript\\n$('#report').click(function(){ window.location.assign(\\\"#open-current-report\\\"); });\\n\\n$('#edit').click(function(){ window.location.assign(\\\"#edit-order\\\"); });\\n\\nwindow.onhashchange = function(){ if(window.location.hash) { var hashFragment = window.location.hash.substring(1); // Get hash value (without #) switch(hashFragment) { case \\\"open-current-report\\\": //Do your action break; case \\\"edit-order\\\": //Do your action break; } } }; \\n\")), mdx(\"p\", null, \" This example use JQuery to attach the click event but this is not required for the location assign, neither for the \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"onhashchange\"), \" -- they are both pure JavaScript method and event.\"));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Change the URL with JavaScript without redirecting\",\n  \"date\": \"2015-08-26\",\n  \"categories\": [\"javascript\"]\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`If you have a part of your website that need to change the URL in the browser without having to refresh the whole page, than you shouldn't use the window.location.`}<strong parentName=\"p\">{`href`}</strong>{` because this one will redirect into that page. `}<strong parentName=\"p\">{`window.location`}</strong>{` contains 2 others method that can do the job for you. The first one is `}<em parentName=\"p\">{`assign`}</em>{`. window.location.assign(`}<em parentName=\"p\">{`url`}</em>{`) is a method that will change the url and set in your history the new url. Sometime, we want to browser to change but not the history. A second method does that job -- it's called replace.`}</p>\n    <p>{`On the other hand, doing that mean that the user can navigate directly into your webpage by the url in the browser. If you changed the URL by just changing a hash tag that define a specific action in your website, you may have that action trigged by the click event but not when the user access the webpage directly from the url.`}</p>\n    <p>{`For example, you have several link for action like \"open item1\" and \"open item2\". You change the url with `}<strong parentName=\"p\">{`window.location.assign`}</strong>{` because you want the user to be able to use the back button -- use the history. So the history looks like this:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://yourwebsite.com/page1\"\n        }}>{`http://yourwebsite.com/page1`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://yourwebsite.com/page1#item1\"\n        }}>{`http://yourwebsite.com/page1#item1`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"http://yourwebsite.com/page1#item2\"\n        }}>{`http://yourwebsite.com/page1#item2`}</a></li>\n    </ul>\n    <p>{`If someone go directly to the `}<em parentName=\"p\">{`item2`}</em>{` than you need to execute the code behind this hash tag. To have your code executed you need to use the window event called `}<strong parentName=\"p\">{`onhashchange`}</strong>{`. \\`\\`\\`typescript\nwindow.onhashchange = function() { //Get the hash value from the url and execute your code }; `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` The **onhashchange** become a hub if all time the url change which can be convenient to have a central place has a content controller. This method removes the need to have action handled in every click that has hash url to just have the click event of these links to change the url and let the **onhashchange** handles which action to execute.\n\nHere is an example: \n\\`\\`\\`html  <a id=\"report\">Current Order Report</a> <a id=\"edit\">Edit Current Order</a> \n\\`\\`\\`  \\`\\`\\`typescript\n$('#report').click(function(){ window.location.assign(\"#open-current-report\"); });\n\n$('#edit').click(function(){ window.location.assign(\"#edit-order\"); });\n\nwindow.onhashchange = function(){ if(window.location.hash) { var hashFragment = window.location.hash.substring(1); // Get hash value (without #) switch(hashFragment) { case \"open-current-report\": //Do your action break; case \"edit-order\": //Do your action break; } } }; \n`}</code></pre>\n    <p>{` This example use JQuery to attach the click event but this is not required for the location assign, neither for the `}<strong parentName=\"p\">{`onhashchange`}</strong>{` -- they are both pure JavaScript method and event.`}</p>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}