{"data":{"mdx":{"frontmatter":{"title":"CSS and the selector nth-child","date":"July 27, 2012"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"CSS and the selector nth-child\",\n  \"date\": \"2012-07-27\",\n  \"categories\": [\"css\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"You may want to have special style for specific position. Maybe you want to have the first division different or having every 3 rows something different.\"), mdx(\"p\", null, \"This can be done with nth-child selector of CSS.\"), mdx(\"p\", null, \"Let's start with a small example :\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \" ul>li:nth-child(3) { color: red; } \\n\")), mdx(\"p\", null, \"This example will take the third li element that is directly under an ul element and make it's font color to red.\"), mdx(\"p\", null, \"The parameter, when specified with an integer, represent the position of the occurrence of the element. In the example above, 3 is specified, so the third element will be red.\"), mdx(\"p\", null, \"nth-child is power full because you can use the variable \\\"n\\\" to specify the index of the element.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-css\"\n  }, \" ul>li:nth-child(2n+1) { background-color: red; } \\n\")), mdx(\"p\", null, \"This second example of nth-child has 2n+1 has parameter. That mean that it will start at the position 1 (every sequence start at 1 not 0) and 2n mean 2 multiply by the index. So if we have the following code:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-html\",\n    \"metastring\": \"<ul> <li>n=0</li> <li>n=1</li> <li>n=2</li> <li>n=3</li> <li>n=4</li> <li>n=5</li> </ul>\",\n    \"<ul>\": true,\n    \"<li>n\": \"5</li>\",\n    \"</ul>\": true\n  }, \"\")), mdx(\"p\", null, \"2n+1 will be for the first line : 2x0+1 = 1. So the first li will have the style, the first one will be 1. Then we have 2x1+1 = 3. The second row won't have any style, the third one yes and so on.\"), mdx(\"p\", null, \"To conclude, you have to remember that n start at 0 but the first element is 1. As we have seen with the ul/li example, the n=0 was coloured because n=0+1 = one, which is the first li of the ul collection.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"e369de74-9edd-5fa3-b91d-f5eed63fdfc2","slug":"2012/css-and-the-selector-nth-child","__params":{"slug":"2012"}}}