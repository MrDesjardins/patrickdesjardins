{"data":{"mdx":{"frontmatter":{"title":"How to execute a huge SQL file with Microsoft Sql Server","date":"December 17, 2012"},"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"How to execute a huge SQL file with Microsoft Sql Server\",\n  \"date\": \"2012-12-17\",\n  \"categories\": [\"sql-server-management-studio\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Here is a small article that could be more a note than something else. If you have a lot of SQL statement to execute, let say few gigs of statement, this won't load into SQL Server Manager. What you can do is to use the sqlcmd command. Open a DOS console and go where you have installed Sql Server Mananger. Mine is: ```\\nc:\", \"\\\\\", \"Program Files (x86)\", \"\\\\\", \"Microsoft SQL Server\", \"\\\\\", \"90\", \"\\\\\", \"Tools\", \"\\\\\", \"Binn \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-In\",\n    \"metastring\": \"the console, you need to specify the server and instance you want to execute the file to. Optionnaly, you can write the output to a file.\",\n    \"the\": true,\n    \"console,\": true,\n    \"you\": true,\n    \"need\": true,\n    \"to\": true,\n    \"specify\": true,\n    \"server\": true,\n    \"and\": true,\n    \"instance\": true,\n    \"want\": true,\n    \"execute\": true,\n    \"file\": true,\n    \"to.\": true,\n    \"Optionnaly,\": true,\n    \"can\": true,\n    \"write\": true,\n    \"output\": true,\n    \"a\": true,\n    \"file.\": true\n  }, \"\\n\\n```sql\\n sqlcmd -S myServer\\\\\\\\instanceName -i C:\\\\\\\\myScript.sql -o C:\\\\\\\\log.txt \\n\")), mdx(\"p\", null, \"That's it. Nothing more complicated.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"id":"0d73baab-a32c-563f-b777-09cc4d685693"}}